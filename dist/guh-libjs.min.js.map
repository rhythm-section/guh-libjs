{"version":3,"sources":["logging/hooks/logging-hooks-module.js","logging/hooks/logging-http-hook-provider.js","logging/hooks/logging-broadcast-hook-provider.js","vendor/vendor-module.js","vendor/lodash-vendor-service.js","vendor/localforage-vendor-service.js","utils/utils-module.js","utils/local-forage-service.js","utils/file-utils-service.js","models/models-module.js","models/vendor-model-service.js","models/state-type-model-service.js","models/state-model-service.js","models/settings-model-service.js","models/server-info-model-service.js","models/rule-model-service.js","models/plugin-param-type-model-service.js","models/plugin-model-service.js","models/param-type-model-service.js","models/models-helper.js","models/event-type-param-type-model-service.js","models/event-type-model-service.js","models/device-model-service.js","models/device-class-state-type-model-service.js","models/device-class-param-type-model-service.js","models/device-class-model-service.js","models/device-class-event-type-service.js","models/device-class-discovery-param-type-model-service.js","models/device-class-action-type-model-service.js","models/connection-model-service.js","models/action-type-param-type-model-service.js","models/action-type-model-service.js","logging/logging-module.js","logging/logging-provider.js","api/api-module.js","api/websocket-api-service.js"],"names":["config","angular","module","$inject","guhLoggingHttpHook","_checkParameter","parameterName","parameter","isDefined","isString","error","_setServerAddress","locationServer","locationProtocol","locationHost","locationPort","$get","$http","logObject","post","data","then","response","console","log","payload","setProtocol","protocol","setHostname","hostname","setPort","port","getServer","location","provider","guhLoggingBroadcastHook","$rootScope","type","argsArray","args","slice","call","isArray","length","$broadcast","context","lodashService","$log","$window","_","factory","localforageService","localforage","LocalForage","localForageAdapter","DSLocalForageAdapter","localForageStore","JSData","DS","FileFactory","$templateCache","checkFile","path","file","cacheObject","get","undefined","File","DSProvider","defaults","debug","DSVendorFactory","$q","websocketService","load","send","method","DSVendor","inject","vendors","getAll","defineResource","endpoint","idAttribute","name","relations","hasMany","deviceClass","localField","foreignKey","computed","methods","extend","run","DSStateTypeFactory","_addUiData","resource","attrs","regExp","searchUnit","replace","phrase","test","DSStateType","deviceClassStateType","afterInject","arrayOfAttrs","forEach","DSStateFactory","deviceId","params","states","values","map","state","DSState","belongsTo","device","localKey","parent","hasOne","stateType","compoundId","stateTypeId","value","DSSettingsFactory","registerAdapter","default","DSSettings","serverInfo","connection","DSServerInfoFactory","ServerInfo","settings","DSServerInfo","DSRuleFactory","_loadDetails","ruleDescription","ruleId","id","all","ruleDescriptions","DSRule","rule","rules","add","executeActions","self","this","executeExitActions","remove","DSPluginParamTypeFactory","DSPluginParamType","plugin","paramType","DSPluginFactory","_createPluginParamTypes","pluginParamTypes","paramTypes","pluginId","paramTypeInstance","createInstance","pluginParamTypesFiltered","filter","pluginParamType","paramTypeId","pluginParamTypesId","pluginParamTypeInstance","DSPlugin","plugins","DSParamTypeFactory","DSParamType","deviceClassDiscoveryParamType","deviceClassParamType","actionTypeParamType","eventTypeParamType","modelsHelper","app","checkTemplateUrl","templateUrl","pathElements","split","pop","join","fileExists","when","setBasePath","basePath","apiUrl","DSEventTypeParamTypeFactory","DSEventTypeParamType","eventType","DSEventTypeFactory","_createEventTypeParamTypes","eventTypeParamTypes","eventTypeId","eventTypeParamTypesFiltered","eventTypeParamTypesId","eventTypeParamTypeInstance","getParamDescriptor","operator","paramDescriptor","DSEventType","DSDeviceFactory","_createStates","index","stateInstance","isUndefined","_removeStates","eject","DSDevice","devices","getDescription","delimiter","vendorName","vendor","deviceClassName","pair","deviceClassId","deviceDescriptorId","deviceParams","confirmPairing","pairingTransactionId","secret","edit","jsonRpcParams","reconfigure","executeAction","actionType","actionTypeId","key","getEventDescriptor","paramDescriptors","eventDescriptor","getStateDescriptor","stateDescriptor","getAction","action","ruleActionParams","getRuleActionParams","afterEject","DSDeviceClassStateTypeFactory","DSDeviceClassStateType","DSDeviceClassParamTypeFactory","DSDeviceClassParamType","DSDeviceClassFactory","DSDeviceClassActionType","DSDeviceClassEventType","DSDeviceClass","deviceClasses","_getInputPath","filename","_addUiTemplate","templateName","toLowerCase","_createDeviceClassParamTypes","deviceClassDiscoveryParamTypes","deviceClassParamTypes","deviceClassActionTypes","deviceClassEventTypes","deviceClassStateTypes","discoveryParamTypes","actionTypes","eventTypes","stateTypes","discoveryParamType","discoveryParamTypeInstance","deviceClassDiscoveryParamTypesFiltered","deviceClassDiscoveryParamTypesId","deviceClassDiscoveryParamTypeInstance","deviceClassParamTypesFiltered","deviceClassParamTypesId","deviceClassParamTypeInstance","actionTypeInstance","deviceClassActionTypesFiltered","deviceClassActionType","deviceClassActionTypesId","deviceClassActionTypeInstance","eventTypeInstance","deviceClassEventTypesFiltered","deviceClassEventType","deviceClassEventTypesId","deviceClassEventTypeInstance","stateTypeInstance","deviceClassStateTypesFiltered","deviceClassStateTypesId","deviceClassStateTypeInstance","_mapStates","stateIds","pluck","contains","hasState","discover","discoveryParams","getCreateMethod","createMethodData","createMethods","indexOf","title","template","getSetupMethod","setupMethodData","setupMethod","getAllActionTypes","push","getAllEventTypes","getAllStateTypes","DSDeviceClassEventTypeFactory","DSDeviceClassDiscoveryParamTypeFactory","DSDeviceClassDiscoveryParamType","DSDeviceClassActionTypeFactory","DSConnectionFactory","Connection","DSConnection","DSActionTypeParamTypeFactory","DSActionTypeParamType","DSActionTypeFactory","_createActionTypeParamTypes","actionTypeParamTypes","actionTypeParamTypesFiltered","actionTypeParamTypesId","actionTypeParamTypeInstance","getParams","actionParamType","eventParamType","param","eventParamName","DSActionType","$provide","decorator","$injector","$delegate","guhLogging","_applyCallbacks","logType","logTypeData","getLogType","preCallbacks","preCallbackProvider","preCallback","isEnhanced","apply","postCallbacks","postCallbackProvider","postCallback","arguments","info","warn","Logging","_addHooks","prePost","logTypes","hooks","logTypesArray","hooksArray","logTypeCallbacks","hook","_hooks","_logTypes","_logType","enhanced","service","enhance","before","after","decorate","message","http","broadcast","websocket","$timeout","_getRequestId","currentRequestId","close","ws","connect","url","WebSocket","connectionTimer","onopen","event","cancel","$apply","onclose","code","onerror","onmessage","injectedItem","fromJson","notification","is","ejectedItem","status","deviceError","callbacks","callback","reject","loggingError","ruleError","resolve","reconnect","request","defer","requestId","time","Date","toJson","promise"],"mappings":"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","file":"guh-libjs.min.js","sourcesContent":["/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.logging.hooks', [])\n    .config(config);\n\n  config.$inject = [];\n\n  function config() {}\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.logging.hooks')\n    .provider('guhLoggingHttpHook', guhLoggingHttpHook);\n\n  function guhLoggingHttpHook() {\n    // Variables\n    var locationProtocol = location.protocol;\n    var locationHost = location.hostname;\n    var locationPort = location.port;\n    var locationServer = locationProtocol + '//' + locationHost + ':' + locationPort;\n\n\n    var provider = {\n      // Provider methods (needed)\n      $get: ['$http', $get],\n\n      // Other methods\n      getServer: getServer,\n      setProtocol: setProtocol,\n      setHostname: setHostname,\n      setPort: setPort\n    };\n\n    return provider;\n\n\n    function _checkParameter(parameterName, parameter) {\n      try {\n        if(!angular.isDefined(parameter) || parameter === null) {\n          throw 'The parameter ' + parameterName + ' has to be defined.';\n        } else if(!angular.isString(parameter)) {\n          throw 'The value of ' + parameterName + ' has to be a string.';\n        }\n      } catch(error) {\n        return;\n      }\n    }\n\n    function _setServerAddress() {\n      locationServer = locationProtocol + '//' + locationHost + ':' + locationPort;\n    }\n\n\n    function $get($http) {\n      return function(logObject) {\n        $http\n          .post(locationServer, {\n            data: logObject\n          })\n          .then(function(response) {\n            console.log('Data successfully sent.', {\n              payload: logObject,\n              response: response\n            });\n          })\n          .catch(function(error) {\n            console.log('Data not sent.', {\n              payload: logObject,\n              error: error\n            })\n          });\n      }\n\n      // console.log('$get', $http);\n\n      // var service = {\n      //   // Variables\n      //   protocol: locationProtocol,\n      //   host: locationHost,\n      //   port: locationPort,\n      //   server: locationServer,\n\n      //   // Methods\n      //   addToQueue: addToQueue\n      // };\n\n      // return service;\n\n\n      // function addToQueue($http) {\n      //   console.log('addToQueue', $http);\n      // }\n    }\n\n    function setProtocol(protocol) {\n      _checkParameter('protocol', protocol);\n      locationProtocol = protocol;\n      _setServerAddress();\n    }\n\n    function setHostname(hostname) {\n      _checkParameter('hostname', hostname);\n      locationHost = hostname;\n      _setServerAddress();\n    }\n\n    function setPort(port) {\n      _checkParameter('port', port);\n      locationPort = port;\n      _setServerAddress();\n    }\n\n    function getServer() {\n      return locationServer;\n    }\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.logging.hooks')\n    .provider('guhLoggingBroadcastHook', guhLoggingBroadcastHook);\n\n  function guhLoggingBroadcastHook() {\n\n    var provider = {\n      // Provider methods (needed)\n      $get: ['$rootScope', $get]\n    };\n\n    return provider;\n\n\n    function $get($rootScope) {\n      return function(logObject) {\n        var type = logObject.type ? logObject.type : null;\n        var argsArray = logObject.args ? [].slice.call(logObject.args) : null;\n\n        if(angular.isArray(argsArray)) {\n          switch(argsArray.length) {\n            case 1:\n              if(!angular.isString(argsArray[0])) {\n                $rootScope.$broadcast('notification', {\n                  type: type,\n                  args: argsArray[0]\n                });\n              }\n              break;\n            case 2:\n              $rootScope.$broadcast('notification', {\n                type: type,\n                context: argsArray[0],\n                args: argsArray[1]\n              });\n              break;\n            default:\n              console.log('Wrong number of arguments.', logObject.type, logObject.args, argsArray.length);\n          }\n        }\n      }\n    }\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.vendor', [])\n    .config(config);\n\n  config.$inject = [];\n\n  function config() {}\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.vendor')\n    .factory('_', lodashService);\n\n  lodashService.$inject = ['$log', '$window'];\n\n  function lodashService($log, $window) {\n\n    if(!$window._) {\n      $log.error('guh.vendor.lodashService:factory', '_ is not defined on window object');\n    }\n\n    return $window._;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.vendor')\n    .factory('localforage', localforageService);\n\n  localforageService.$inject = ['$log', '$window'];\n\n  function localforageService($log, $window) {\n\n    if(!$window.localforage) {\n      $log.error('guh.vendor.localforageService:factory', 'localforage is not defined on window object');\n    }\n\n    return $window.localforage;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.utils', [])\n    .config(config);\n\n  config.$inject = [];\n\n  function config() {}\n\n  // module.exports = angular.module('guh.utils');\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n\n  angular\n    .module('guh.utils')\n    .factory('LocalForage', LocalForage);\n\n\n  LocalForage.$inject = ['$log'];\n\n  function LocalForage($log) {\n\n    // jshint unused:false \n    var LocalForage = {\n      localForageAdapter: new DSLocalForageAdapter(),\n      localForageStore: new JSData.DS()\n    };\n\n    return LocalForage;\n\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.utils')\n    .factory('File', FileFactory);\n\n  FileFactory.$inject = ['$log', '$templateCache'];\n\n  function FileFactory($log, $templateCache) {\n    \n    var File = {\n      checkFile: checkFile\n    };\n\n    return File;\n\n\n    /*\n     * Public method: checkFile(path, file)\n     */\n    function checkFile(path, file) {\n      // if(app.environment === 'production') {\n        // Production: One $templateCache entry per template\n        var cacheObject = $templateCache.get(path + file);\n\n        if(cacheObject !== undefined) {\n          return true;\n        } else {\n          return false;\n        }\n      /*} else if(app.environment === 'development') {\n        // Development: One HTML file per template\n        var request = new XMLHttpRequest();\n\n        request.open('HEAD', path + file, false);\n        request.send();\n\n        if(request.status === 200) {\n          return true;\n        } else {\n          return false;\n        }\n      }*/\n    }\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models', [\n      // Datastore\n      'js-data'\n    ])\n    .config(config);\n\n  config.$inject = ['DSProvider'];\n\n  function config(DSProvider) {\n    DSProvider\n      .defaults\n      .debug = false;\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSVendor', DSVendorFactory)\n    .run(function(DSVendor) {});\n\n  DSVendorFactory.$inject = ['$log', '$q', 'DS', 'websocketService'];\n\n  function DSVendorFactory($log, $q, DS, websocketService) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSVendor = DS.defineResource({\n\n      // API configuration\n      endpoint: 'vendors',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'vendor',\n      relations: {\n        hasMany: {\n          deviceClass: {\n            localField: 'deviceClasses',\n            foreignKey: 'vendorId'\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {}\n\n    });\n\n    angular.extend(DSVendor, {\n      load: load\n    });\n\n    return DSVendor;\n\n\n    function load() {\n      return websocketService\n        .send({\n          method: 'Devices.GetSupportedVendors'\n        })\n        .then(function(data) {\n          DSVendor.inject(data.vendors);\n          return DSVendor.getAll();\n        });\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSStateType', DSStateTypeFactory)\n    .run(function(DSStateType) {});\n\n  DSStateTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSStateTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSStateType = DS.defineResource({\n\n      // API configuration\n      endpoint: 'statetypes',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'stateType',\n      relations: {\n        hasMany: {\n          deviceClassStateType: {\n            localField: 'deviceClassStateTypes',\n            foreignKey: 'stateTypeId'\n          },\n        }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {},\n\n      // Lifecycle hooks\n      afterInject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _addUiData(resource, attrs);\n          });\n        } else {\n          _addUiData(resource, attrs);\n        }\n      }\n\n    });\n\n    return DSStateType;\n\n\n    /*\n     * Private method: _addUiData(resource, attrs)\n     */\n    function _addUiData(resource, attrs) {\n      var regExp = /\\s\\[([^)]+)\\]/;                 // Value inside brackets []\n      var searchUnit = name.replace(regExp, '');    // Get value inside brackets\n      var phrase = attrs.name;\n\n      // If name contains the unit in brackets []\n      if(regExp.test(name)) {\n        phrase = searchUnit;\n      }\n\n      // phrase\n      attrs.phrase = 'When value of ' + phrase;\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSState', DSStateFactory)\n    .run(function(DSState) {});\n\n  DSStateFactory.$inject = ['$log', '$q', 'DS', 'websocketService'];\n\n  function DSStateFactory($log, $q, DS, websocketService) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSState = DS.defineResource({\n\n      // API configuration\n      endpoint: 'states',\n\n      // Model configuration\n      // idAttribute: 'stateTypeId',\n      idAttribute: 'compoundId',\n      name: 'state',\n      relations: {\n        belongsTo: {\n          device: {\n            localField: 'device',\n            localKey: 'deviceId',\n            parent: true\n          }\n        },\n        hasOne: {\n          stateType: {\n            localField: 'stateType',\n            localKey: 'stateTypeId'\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {\n        compoundId: ['deviceId', 'stateTypeId', 'value', function (deviceId, stateTypeId, value) {\n          return '' + deviceId + '_' + stateTypeId;\n        }]\n      },\n\n      // Instance methods\n      methods: {}\n\n    });\n\n    angular.extend(DSState, {\n      load: load\n    });\n\n    return DSState;\n\n\n    function load(deviceId) {\n      return websocketService\n        .send({\n          method: 'Devices.GetStateValues',\n          params: {\n            deviceId: deviceId\n          }\n        })\n        .then(function(data) {\n          var states = data.values.map(function(state) {\n            state.deviceId = deviceId;\n            return state;\n          });\n          DSState.inject(states);\n          return DSState.getAll();\n        });\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSSettings', DSSettingsFactory)\n    .run(function(DSSettings) {});\n\n\n  DSSettingsFactory.$inject = ['$log', 'LocalForage'];\n\n  function DSSettingsFactory($log, LocalForage) {\n\n    LocalForage.localForageStore.registerAdapter('localForage', LocalForage.localForageAdapter, { default: true });\n\n    var DSSettings = LocalForage.localForageStore.defineResource({\n      name: 'settings',\n      relations: {\n        hasOne: {\n          serverInfo: {\n            localField: 'serverInfo',\n            foreignKey: 'settingsId'\n          }\n        },\n        hasMany: {\n          connection: {\n            localField: 'connections',\n            foreignKey: 'settingsId'\n          }\n        }\n      }\n    });\n\n    return DSSettings;\n\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSServerInfo', DSServerInfoFactory)\n    .run(function(DSServerInfo) {});\n\n\n  DSServerInfoFactory.$inject = ['$log', 'LocalForage'];\n\n  function DSServerInfoFactory($log, LocalForage) {\n\n    LocalForage.localForageStore.registerAdapter('localForage', LocalForage.localForageAdapter, { default: true });\n\n    var ServerInfo = LocalForage.localForageStore.defineResource({\n      name: 'serverInfo',\n      relations: {\n        belongsTo: {\n          settings: {\n            localField: 'settings',\n            foreignKey: 'settingsId',\n            parent: true\n          }\n        }\n      }\n    });\n\n    return ServerInfo;\n\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSRule', DSRuleFactory)\n    .run(function(DSRule) {});\n\n  DSRuleFactory.$inject = ['$log', '$q', 'DS', 'websocketService'];\n\n  function DSRuleFactory($log, $q, DS, websocketService) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSRule = DS.defineResource({\n\n      // API configuration\n      endpoint: 'rules',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'rule',\n      relations: {},\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {\n        // API\n        executeActions: executeActions,\n        executeExitActions: executeExitActions,\n        remove: remove\n      }\n\n    });\n\n    angular.extend(DSRule, {\n      load: load,\n      add: add\n    });\n\n    return DSRule;\n\n\n    function _loadDetails(ruleDescription) {\n      return websocketService\n        .send({\n          method: 'Rules.GetRuleDetails',\n          params: {\n            ruleId: ruleDescription.id\n          }\n        });\n    }\n\n    function load() {\n      return websocketService\n        .send({\n          method: 'Rules.GetRules'\n        })\n        .then(function(data) {\n          return $q.all(data.ruleDescriptions.map(function(ruleDescription) {\n            return _loadDetails(ruleDescription)\n              .then(function(data) {\n                DSRule.inject(data.rule);\n                return data.rule;\n              });\n          }));\n        })\n        .then(function(rules) {\n          return DSRule.getAll();\n        });\n    }\n\n    function add(rule) {\n      return websocketService.send({\n        method: 'Rules.AddRule',\n        params: rule\n      });\n    }\n\n    /*\n     * Public method: executeActions()\n     */\n    function executeActions() {\n      /* jshint validthis: true */\n      var self = this;\n\n      return websocketService.send({\n        method: 'Rules.ExecuteActions',\n        params: {\n          ruleId: self.id\n        }\n      });\n    }\n\n    /*\n     * Public method: executeExitActions()\n     */\n    function executeExitActions() {\n      /* jshint validthis: true */\n      var self = this;\n\n      return websocketService.send({\n        method: 'Rules.ExecuteExitActions',\n        params: {\n          ruleId: self.id\n        }\n      });\n    }\n\n    /*\n     * Public method: remove()\n     */\n    function remove() {\n      /* jshint validthis: true */\n      var self = this;\n\n      return websocketService.send({\n        method: 'Rules.RemoveRule',\n        params: {\n          ruleId: self.id\n        }\n      });\n    }\n\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSPluginParamType', DSPluginParamTypeFactory)\n    .run(function(DSPluginParamType) {});\n\n  DSPluginParamTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSPluginParamTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSPluginParamType = DS.defineResource({\n\n      // Model configuration\n      name: 'pluginParamType',\n      relations: {\n        belongsTo: {\n          plugin: {\n            localField: 'plugin',\n            localKey: 'pluginId'\n          },\n          paramType: {\n            localField: 'paramType',\n            localKey: 'paramTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSPluginParamType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSPlugin', DSPluginFactory)\n    .run(function(DSPlugin) {});\n\n  DSPluginFactory.$inject = ['$log', '$q', 'DS', 'websocketService'];\n\n  function DSPluginFactory($log, $q, DS, websocketService) {\n    \n    var staticMethods = {};\n    var pluginParamTypesId = 0;\n\n    /*\n     * DataStore configuration\n     */\n    var DSPlugin = DS.defineResource({\n\n      // API configuration\n      endpoint: 'plugins',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'plugin',\n      relations: {\n        hasMany: {\n          pluginParamType: {\n            localField: 'pluginParamTypes',\n            foreignKey: 'pluginId'\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {},\n\n      // Lifecycle hooks\n      afterInject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _createPluginParamTypes(resource, attrs);\n          });\n        } else {\n          _createPluginParamTypes(resource, attrs);\n        }\n      }\n\n    });\n\n    angular.extend(DSPlugin, {\n      load: load\n    });\n\n    return DSPlugin;\n\n\n    /*\n     * Private method: _createPluginParamTypes()\n     */\n    function _createPluginParamTypes(resource, attrs) {\n      var pluginParamTypes = DS.getAll('pluginParamType');\n      var paramTypes = attrs.paramTypes;\n      var pluginId = attrs.id;\n\n\n      // ParamTypes\n      angular.forEach(paramTypes, function(paramType) {\n        // Create paramType\n        var paramTypeInstance = DS.createInstance('paramType', paramType);\n        DS.inject('paramType', paramTypeInstance);\n\n        // Filtered actionTypeParamTypes\n        var pluginParamTypesFiltered = pluginParamTypes.filter(function(pluginParamType) {\n          return pluginParamType.pluginId === pluginId && pluginParamType.paramTypeId === paramType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(pluginParamTypesFiltered) && pluginParamTypesFiltered.length === 0) {\n          // Create membership (plugin <-> paramType)\n          pluginParamTypesId = pluginParamTypesId + 1;\n          var pluginParamTypeInstance = DS.createInstance('pluginParamType', {\n            id: pluginParamTypesId,\n            pluginId: pluginId,\n            paramTypeId: paramType.id\n          });\n          DS.inject('pluginParamType', pluginParamTypeInstance);\n        }\n      });\n    }\n\n\n    function load() {\n      return websocketService\n        .send({\n          method: 'Devices.GetPlugins'\n        })\n        .then(function(data) {\n          DSPlugin.inject(data.plugins);\n          return DSPlugin.getAll();\n        });\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSParamType', DSParamTypeFactory)\n    .run(function(DSParamType) {});\n\n  DSParamTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSParamTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSParamType = DS.defineResource({\n\n      // Model configuration\n      name: 'paramType',\n      relations: {\n        hasMany: {\n          deviceClassDiscoveryParamType: {\n            localField: 'deviceClassDiscoveryParamTypes',\n            foreignKey: 'paramTypeId'\n          },\n          deviceClassParamType: {\n            localField: 'deviceClassParamTypes',\n            foreignKey: 'paramTypeId'\n          },\n          actionTypeParamType: {\n            localField: 'actionTypeParamTypes',\n            foreignKey: 'paramTypeId'\n          },\n          eventTypeParamType: {\n            localField: 'eventTypeParamTypes',\n            foreignKey: 'paramTypeId'\n          },\n          pluginParamType: {\n            localField: 'pluginParamTypes',\n            foreignKey: 'paramTypeId'\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {}\n\n    });\n\n    return DSParamType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('modelsHelper', modelsHelper);\n\n  modelsHelper.$inject = ['$log', '$q', 'DS', 'File', 'app'];\n\n  function modelsHelper($log, $q, DS, File, app) {\n\n    var modelsHelper = {\n      checkTemplateUrl: checkTemplateUrl,\n      setBasePath: setBasePath\n    };\n\n    return modelsHelper;\n\n\n    /*\n     * Private method: _getValue(guhType)\n     */\n    function _getValue(guhType) {\n      var type = (guhType.type === undefined) ? null : guhType.type;\n      var value;\n\n      switch(type) {\n        case 'Bool':\n          value = guhType.defaultValue || false;\n          break;\n        case 'Int':\n        case 'Uint':\n          value = guhType.defaultValue || 0;\n          break;\n        case 'Double':\n          value = guhType.defaultValue || 0.0;\n          break;\n        case 'Color':\n          value = guhType.defaultValue || '0,0,0';\n          break;\n        case 'String':\n          value = guhType.defaultValue || '';\n          break;\n        default:\n          value = guhType.defaultValue || undefined;\n          break;\n      }\n\n      return value;\n    }\n    \n\n    /*\n     * Public method: checkTemplateUrl(templateUrl)\n     */\n    function checkTemplateUrl(templateUrl) {\n      var pathElements = templateUrl.split('/');\n      var file = pathElements.pop();\n      var path = pathElements.join('/') + '/';\n\n      if(templateUrl !== undefined && templateUrl !== '') {\n        var fileExists = $q.when(File.checkFile(path, file))\n          .then(function(fileExists) {\n            if(fileExists) {\n              // $log.log('Template available', templateUrl);\n              return templateUrl;\n            } else {\n              // $log.warn('Template NOT available', templateUrl);\n              return path + 'template-not-available.html'; \n            }\n          });\n\n        return fileExists;\n      } else {\n        return path + 'template-not-defined.html';\n      }\n    }\n\n    /*\n     * Public method: setBasePath()\n     */\n    function setBasePath() {      \n      DS\n        .defaults\n        .basePath = app.apiUrl;\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSEventTypeParamType', DSEventTypeParamTypeFactory)\n    .run(function(DSEventTypeParamType) {});\n\n  DSEventTypeParamTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSEventTypeParamTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSEventTypeParamType = DS.defineResource({\n\n      // Model configuration\n      name: 'eventTypeParamType',\n      relations: {\n        belongsTo: {\n          eventType: {\n            localField: 'eventType',\n            localKey: 'eventTypeId'\n          },\n          paramType: {\n            localField: 'paramType',\n            localKey: 'paramTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSEventTypeParamType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSEventType', DSEventTypeFactory)\n    .run(function(DSEventType) {});\n\n  DSEventTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSEventTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n    var eventTypeParamTypesId = 0;\n\n    /*\n     * DataStore configuration\n     */\n    var DSEventType = DS.defineResource({\n\n      // API configuration\n      endpoint: 'eventtypes',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'eventType',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId',\n            parent: true\n          }\n        },\n        hasMany: {\n          eventTypeParamType: {\n            localField: 'eventTypeParamTypes',\n            foreignKey: 'eventTypeId'\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {\n        getParamDescriptor: getParamDescriptor\n      },\n\n      // Lifecycle hooks\n      afterInject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _addUiData(resource, attrs);\n            _createEventTypeParamTypes(resource, attrs);\n          });\n        } else {\n          _addUiData(resource, attrs);\n          _createEventTypeParamTypes(resource, attrs);\n        }\n      }\n\n    });\n\n    return DSEventType;\n\n\n    /*\n     * Private method: _addUiData(resource, attrs)\n     */\n    function _addUiData(resource, attrs) {\n      var paramTypes = attrs.paramTypes;\n      var phrase = 'When ' + attrs.name;\n\n      // Add phrase for moods\n      if(angular.isArray(paramTypes) && paramTypes.length === 0) {\n        attrs.phrase = phrase + ' is detected';\n      } else {\n        attrs.phrase = phrase + ' is detected and parameters are';\n      }\n    }\n\n    /*\n     * Private method:_createEventTypeParamTypes()\n     */\n    function _createEventTypeParamTypes(resource, attrs) {\n      var eventTypeParamTypes = DS.getAll('eventTypeParamType');\n      var paramTypes = attrs.paramTypes;\n      var eventTypeId = attrs.id;\n\n\n      // ParamTypes\n      angular.forEach(paramTypes, function(paramType) {\n        // Create paramType\n        var paramTypeInstance = DS.createInstance('paramType', paramType);\n        DS.inject('paramType', paramTypeInstance);\n\n        // Filtered eventTypeParamTypes\n        var eventTypeParamTypesFiltered = eventTypeParamTypes.filter(function(eventTypeParamType) {\n          return eventTypeParamType.eventTypeId === eventTypeId && eventTypeParamType.paramTypeId === paramType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(eventTypeParamTypesFiltered) && eventTypeParamTypesFiltered.length === 0) {\n          // Create membership (deviceClass <-> paramType)\n          eventTypeParamTypesId = eventTypeParamTypesId + 1;\n          var eventTypeParamTypeInstance = DS.createInstance('eventTypeParamType', {\n            id: eventTypeParamTypesId,\n            eventTypeId: eventTypeId,\n            paramTypeId: paramType.id\n          });\n          DS.inject('eventTypeParamType', eventTypeParamTypeInstance);\n        }\n      });\n    }\n\n\n    /*\n     * Public method: getParamDescriptors(paramType, value, operator)\n     */\n    function getParamDescriptor(paramType, value, operator) {\n      var paramDescriptor = {};\n\n      paramDescriptor = {\n        name: paramType.name,\n        operator: operator,\n        value: value\n      };\n\n      return paramDescriptor;\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDevice', DSDeviceFactory)\n    .run(function(DSDevice) {});\n\n  DSDeviceFactory.$inject = ['$log', '$q', 'DS', 'websocketService'];\n\n  function DSDeviceFactory($log, $q, DS, websocketService) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSDevice = DS.defineResource({\n\n      // API configuration\n      endpoint: 'devices',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'device',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId'\n          }\n        }\n\n        // Not working (error: \"Doh! You just changed the primary key of an object!\") because states are injected before the state primary keys are generated\n        // hasMany: {\n        //   state: {\n        //     localField: 'states',\n        //     foreignKey: 'deviceId'\n        //   }\n        // }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {\n        edit: edit,\n        executeAction: executeAction,\n        remove: remove,\n        getDescription: getDescription,\n        getEventDescriptor: getEventDescriptor,\n        getStateDescriptor: getStateDescriptor,\n        getAction: getAction\n      },\n\n      // Lifecycle hooks\n      afterInject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _createStates(resource, attrs);\n          });\n        } else {\n          _createStates(resource, attrs);\n        }\n      },\n\n      afterEject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _removeStates(resource, attrs);\n          });\n        } else {\n          _removeStates(resource, attrs);\n        }\n      }\n\n    });\n\n    angular.extend(DSDevice, {\n      load: load,\n      add: add,\n      reconfigure: reconfigure,\n      pair: pair,\n      confirmPairing: confirmPairing\n    });\n\n    return DSDevice;\n    \n\n    /*\n     * Private method: _createStates(resource, attrs);\n     */\n    function _createStates(resource, attrs) {\n      var deviceId = attrs.id;\n      var states = attrs.states;\n\n      angular.forEach(states, function(state, index) {\n        state.deviceId = deviceId;\n\n        var stateInstance = DS.createInstance('state', state);\n        DS.inject('state', stateInstance);\n\n        if(angular.isUndefined(attrs.states)) {\n          attrs.states = [];\n        }\n        attrs.states[index] = DS.get('state', '' + deviceId + '_' + state.stateTypeId);\n      });\n    }\n\n    /*\n     * Private method: _removeStates(resource, attrs)\n     */\n    function _removeStates(resource, attrs) {\n      var deviceId = attrs.id;\n      var states = attrs.states;\n\n      angular.forEach(states, function(state, index) {\n        var ejectedItem = DS.eject('state', '' + deviceId + '_' + state.stateTypeId);\n      });\n    }\n\n\n    function load() {\n      return websocketService\n        .send({\n          method: 'Devices.GetConfiguredDevices'\n        })\n        .then(function(data) {\n          DSDevice.inject(data.devices);\n          return DSDevice.getAll();\n        });\n    }\n\n    /*\n     * Public method: getDescription(delimiter)\n     */\n    function getDescription(delimiter) {\n      /* jshint validthis: true */\n      var self = this;\n      var vendorName = self.deviceClass.vendor.name;\n      var deviceClassName = self.deviceClass.name || '';\n\n      delimiter = delimiter || '-';\n\n      return (vendorName === deviceClassName) ? deviceClassName : (vendorName + delimiter + deviceClassName);\n    }\n\n    /*\n     * Public method: pair(deviceClassId, deviceDescriptorId, deviceParams, name)\n     */\n    function pair(deviceClassId, deviceDescriptorId, deviceParams, name) {\n      var params = {};\n\n      params.deviceClassId = deviceClassId || '';\n\n      if(angular.isDefined(deviceDescriptorId) && deviceDescriptorId !== '') {\n        params.deviceDescriptorId = deviceDescriptorId;\n      } else {\n        params.deviceParams = deviceParams || [];\n      }\n\n      if(angular.isDefined(name)) {\n        params.name = name;\n      }\n\n      return websocketService.send({\n        method: 'Devices.PairDevice',\n        params: params\n      });\n    }\n\n    /*\n     * Public method: confirmPairing(pairingTransactionId, secret)\n     */\n    function confirmPairing(pairingTransactionId, secret) {\n      var params = {};\n      \n      params.pairingTransactionId = pairingTransactionId;\n\n      if(secret) {\n        params.secret = secret;\n      }\n\n      return websocketService.send({\n        method: 'Devices.ConfirmPairing',\n        params: params\n      }); \n    }\n\n    /*\n     * Public method: add(deviceClassId, deviceDescriptorId, deviceParams, name)\n     */\n    function add(deviceClassId, deviceDescriptorId, deviceParams, name) {\n      var params = {};\n\n      // name\n      if(angular.isDefined(name) && name !== '') {\n        params.name = name;\n      }\n\n      // deviceClassId\n      if(angular.isDefined(deviceClassId) && deviceClassId  !== '') {\n        params.deviceClassId = deviceClassId;\n      }\n\n      // deviceDescriptorId or deviceParams\n      if(angular.isDefined(deviceDescriptorId) && deviceDescriptorId !== '') {\n        params.deviceDescriptorId = deviceDescriptorId;\n      } else if(angular.isDefined(deviceParams) && deviceParams !== []) {\n        params.deviceParams = deviceParams;\n      }\n\n      // Device gets inserted when notification \"Devices.DeviceAdded\" was received\n      return websocketService.send({\n        method: 'Devices.AddConfiguredDevice',\n        params: params\n      });\n    }\n\n    /*\n     * Public method: edit(name)\n     */\n    function edit(name) {\n      $log.log('edit', name);\n\n      /* jshint validthis: true */\n      var self = this;\n      var jsonRpcParams = {\n        deviceId: self.id,\n        name: name\n      };\n\n      return websocketService.send({\n        method: 'Devices.EditDevice',\n        params: jsonRpcParams\n      });\n    }\n\n    /*\n     * Public method: reconfigure(deviceId, deviceDescriptorId, deviceParams, name)\n     */\n    function reconfigure(deviceId, deviceDescriptorId, deviceParams, name) {\n      var jsonRpcParams = {};\n\n      $log.log(deviceId, deviceDescriptorId, deviceParams, name);\n\n      // deviceClassId\n      if(angular.isDefined(deviceId) && deviceId  !== '') {\n        jsonRpcParams.deviceId = deviceId;\n      }\n\n      // deviceDescriptorId or deviceParams\n      if(angular.isDefined(deviceDescriptorId) && deviceDescriptorId !== '') {\n        jsonRpcParams.deviceDescriptorId = deviceDescriptorId;\n      } else if(angular.isDefined(deviceParams) && deviceParams !== []) {\n        jsonRpcParams.deviceParams = deviceParams;\n      }\n\n      // TODO: This should not be needed. Can be removed when bug () is fixed.\n      // name\n      // if(angular.isDefined(name)) {\n      //   jsonRpcParams.name = name;\n      // }\n\n      // Device gets inserted when notification \"Devices.DeviceChanged\" was received\n      return websocketService.send({\n        method: 'Devices.ReconfigureDevice',\n        params: jsonRpcParams\n      });\n\n      // var device = {};\n      // deviceData = deviceData || {};\n\n      // device.deviceDescriptorId = deviceData.id || '';\n\n      // device.deviceParams = [];\n      // angular.forEach(deviceData.deviceParamTypes, function(deviceParamType) {\n      //   var deviceParam = {};\n\n      //   deviceParam.name = deviceParamType.name;\n      //   deviceParam.value = deviceParamType.value;\n\n      //   device.deviceParams.push(deviceParam);\n      // });\n\n      // return DSDevice.update(deviceId, {device: device});\n    }\n\n    /*\n     * Public method: executeAction()\n     */\n    function executeAction(actionType, params) {\n      /* jshint validthis: true */\n      var self = this;\n      var jsonRpcParams = {\n        actionTypeId: actionType.id,\n        deviceId: self.id\n      };\n\n      if(angular.isDefined(params) && params !== {}) {\n        jsonRpcParams.params = params;\n      }\n\n      return websocketService.send({\n        method: 'Actions.ExecuteAction',\n        params: jsonRpcParams\n      });\n    }\n\n    /*\n     * Public method: remove()\n     */\n    function remove(params) {\n      /* jshint validthis: true */\n      var self = this;\n      var jsonRpcParams = {\n        deviceId: self.id\n      };\n\n      if(angular.isDefined(params) && params !== {}) {\n        angular.forEach(params, function(value, key) {\n          jsonRpcParams[key] = value;\n        });\n      }\n\n      return websocketService.send({\n        method: 'Devices.RemoveConfiguredDevice',\n        params: jsonRpcParams\n      });\n    }\n\n    /*\n     * Public method: getEventDescriptor(eventType, paramDescriptors)\n     */\n    function getEventDescriptor(eventType, paramDescriptors) {\n      /* jshint validthis: true */\n      var self = this;\n      var eventDescriptor = {};\n\n      eventDescriptor.deviceId = self.id;\n      eventDescriptor.eventTypeId = eventType.id;\n\n      if(angular.isDefined(paramDescriptors) && paramDescriptors.length > 0) {\n        eventDescriptor.paramDescriptors = paramDescriptors;\n      }\n\n      return eventDescriptor;     \n    }\n\n    /*\n     * Public method: getStateDescriptor(stateType, paramDescriptor)\n     */\n    function getStateDescriptor(stateType, paramDescriptor) {\n      /* jshint validthis: true */\n      var self = this;\n      var stateDescriptor = {};\n\n      stateDescriptor.deviceId = self.id;\n      stateDescriptor.operator = paramDescriptor.operator;\n      stateDescriptor.stateTypeId = stateType.id;\n      stateDescriptor.value = paramDescriptor.value;\n      \n      return stateDescriptor;\n    }\n\n\n    /*\n     * Public method: getAction(actionType, params)\n     */\n    function getAction(actionType, params) {\n      /* jshint validthis: true */\n      var self = this;\n      var action = {};\n      var ruleActionParams = [];\n\n      ruleActionParams = actionType.getRuleActionParams(params);\n      if(ruleActionParams.length > 0) {\n        action.ruleActionParams = ruleActionParams;\n      }\n\n      action.actionTypeId = actionType.id;\n      action.deviceId = self.id;\n\n      return action;\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDeviceClassStateType', DSDeviceClassStateTypeFactory)\n    .run(function(DSDeviceClassStateType) {});\n\n  DSDeviceClassStateTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSDeviceClassStateTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSDeviceClassStateType = DS.defineResource({\n\n      // Model configuration\n      name: 'deviceClassStateType',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId'\n          },\n          stateType: {\n            localField: 'stateType',\n            localKey: 'stateTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSDeviceClassStateType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDeviceClassParamType', DSDeviceClassParamTypeFactory)\n    .run(function(DSDeviceClassParamType) {});\n\n  DSDeviceClassParamTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSDeviceClassParamTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSDeviceClassParamType = DS.defineResource({\n\n      // Model configuration\n      name: 'deviceClassParamType',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId'\n          },\n          paramType: {\n            localField: 'paramType',\n            localKey: 'paramTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSDeviceClassParamType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDeviceClass', DSDeviceClassFactory)\n    .run(function(DSDeviceClass) {});\n\n  DSDeviceClassFactory.$inject = ['$log', '$q', 'DS', '_', 'websocketService', 'modelsHelper', 'DSDeviceClassParamType', 'DSDeviceClassActionType', 'DSDeviceClassEventType', 'DSDeviceClassStateType'];\n\n  function DSDeviceClassFactory($log, $q, DS, _, websocketService, modelsHelper, DSDeviceClassParamType, DSDeviceClassActionType, DSDeviceClassEventType, DSDeviceClassStateType) {\n    \n    var staticMethods = {};\n    var deviceClassDiscoveryParamTypesId = 0;\n    var deviceClassParamTypesId = 0;\n    var deviceClassActionTypesId = 0;\n    var deviceClassEventTypesId = 0;\n    var deviceClassStateTypesId = 0;\n\n    /*\n     * DataStore configuration\n     */\n    var DSDeviceClass = DS.defineResource({\n\n      // API configuration\n      endpoint: 'deviceclasses',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'deviceClass',\n      relations: {\n        belongsTo: {\n          vendor: {\n            localField: 'vendor',\n            localKey: 'vendorId',\n            // parent: true\n          }\n        },\n        hasMany: {\n          deviceClassDiscoveryParamType: {\n            localField: 'deviceClassDiscoveryParamTypes',\n            foreignKey: 'deviceClassId'\n          },\n          deviceClassParamType: {\n            localField: 'deviceClassParamTypes',\n            foreignKey: 'deviceClassId'\n          },\n          deviceClassActionType: {\n            localField: 'deviceClassActionTypes',\n            foreignKey: 'deviceClassId'\n          },\n          deviceClassEventType: {\n            localField: 'deviceClassEventTypes',\n            foreignKey: 'deviceClassId'\n          },\n          deviceClassStateType: {\n            localField: 'deviceClassStateTypes',\n            foreignKey: 'deviceClassId'\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {\n        templateUrl: ['name', _addUiTemplate]\n      },\n\n      // Instance methods\n      methods: {\n        discover: discover,\n        getCreateMethod: getCreateMethod,\n        getSetupMethod: getSetupMethod\n      },\n\n      // Lifecycle hooks\n      afterInject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _mapStates(resource, attrs);\n            _createDeviceClassParamTypes(resource, attrs);\n          });\n        } else {\n          _mapStates(resource, attrs);\n          _createDeviceClassParamTypes(resource, attrs);\n        }\n      }\n\n    });\n\n    DSDeviceClass.getAllActionTypes = function(deviceClassId) {\n      var deviceClassActionTypes = DSDeviceClassActionType.getAll();\n      var deviceClassActionTypesFiltered = deviceClassActionTypes.filter(function(deviceClassActionType) {\n        return deviceClassActionType.deviceClassId === deviceClassId;\n      });\n      var deviceClass = DS.get('deviceClass', deviceClassId);\n      var actionTypes = [];\n\n      angular.forEach(deviceClassActionTypesFiltered, function(deviceClassActionType) {\n        if(deviceClassActionType.deviceClassId === deviceClassId) {\n          var actionType = DS.get('actionType', deviceClassActionType.actionTypeId);\n          actionTypes.push(actionType);\n        }\n      });\n\n      return actionTypes;\n    };\n\n    DSDeviceClass.getAllEventTypes = function(deviceClassId) {\n      var deviceClassEventTypes = DSDeviceClassEventType.getAll();\n      var deviceClassEventTypesFiltered = deviceClassEventTypes.filter(function(deviceClassEventType) {\n        return deviceClassEventType.deviceClassId === deviceClassId;\n      });\n      var deviceClass = DS.get('deviceClass', deviceClassId);\n      var eventTypes = [];\n\n      angular.forEach(deviceClassEventTypesFiltered, function(deviceClassEventType) {\n        if(deviceClassEventType.deviceClassId === deviceClassId) {\n          var eventType = DS.get('eventType', deviceClassEventType.eventTypeId);\n          eventTypes.push(eventType);\n        }\n      });\n\n      return eventTypes;\n    };\n\n    DSDeviceClass.getAllStateTypes = function(deviceClassId) {\n      var deviceClassStateTypes = DSDeviceClassStateType.getAll();\n      var deviceClassStateTypesFiltered = deviceClassStateTypes.filter(function(deviceClassStateType) {\n        return deviceClassStateType.deviceClassId === deviceClassId;\n      });\n      var deviceClass = DS.get('deviceClass', deviceClassId);\n      var stateTypes = [];\n\n      angular.forEach(deviceClassStateTypesFiltered, function(deviceClassStateType) {\n        if(deviceClassStateType.deviceClassId === deviceClassId) {\n          var stateType = DS.get('stateType', deviceClassStateType.stateTypeId);\n          stateTypes.push(stateType);\n        }\n      });\n\n      return stateTypes;\n    };\n\n    angular.extend(DSDeviceClass, {\n      load: load\n    });\n\n    return DSDeviceClass;\n\n\n    function load() {\n      return websocketService\n        .send({\n          method: 'Devices.GetSupportedDevices'\n        })\n        .then(function(data) {\n          DSDeviceClass.inject(data.deviceClasses);\n          return DSDeviceClass.getAll();\n        });\n    }\n\n\n    /*\n     * Private method: _getInputPath(name, filename)\n     */\n    function _getInputPath(name, filename) {\n      return 'app/containers/thing-details/device-class-templates/' + filename + '.html';\n    }\n\n    /*\n     * Private method: _addUiTemplate(name)\n     */\n    function _addUiTemplate(name) {\n      // Example: 'Elro Remote' => 'elro-remote'\n      var templateName = name\n        .toLowerCase()\n        .replace(/\\s/g, '-')\n        .replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, '');\n      var templateUrl = _getInputPath(name, 'device-class-' + templateName);\n\n      return modelsHelper.checkTemplateUrl(templateUrl);\n    }\n\n    /*\n     * Private method:_createDeviceClassParamTypes()\n     */\n    function _createDeviceClassParamTypes(resource, attrs) {\n      var deviceClassDiscoveryParamTypes = DS.getAll('deviceClassDiscoveryParamType');\n      var deviceClassParamTypes = DS.getAll('deviceClassParamType');\n      var deviceClassActionTypes = DS.getAll('deviceClassActionType');\n      var deviceClassEventTypes = DS.getAll('deviceClassEventType');\n      var deviceClassStateTypes = DS.getAll('deviceClassStateType');\n      var discoveryParamTypes = attrs.discoveryParamTypes;\n      var paramTypes = attrs.paramTypes;\n      var actionTypes = attrs.actionTypes;\n      var eventTypes = attrs.eventTypes;\n      var stateTypes = attrs.stateTypes;\n      var deviceClassId = attrs.id;\n\n\n      // DiscoveryParamTypes\n      angular.forEach(discoveryParamTypes, function(discoveryParamType) {\n        // Create discoveryParamType\n        var discoveryParamTypeInstance = DS.createInstance('paramType', discoveryParamType);\n        DS.inject('paramType', discoveryParamTypeInstance);\n\n        // Filtered deviceClassDiscoveryParamTypes\n        var deviceClassDiscoveryParamTypesFiltered = deviceClassDiscoveryParamTypes.filter(function(deviceClassDiscoveryParamType) {\n          return deviceClassDiscoveryParamType.deviceClassId === deviceClassId && deviceClassDiscoveryParamType.paramTypeId === discoveryParamType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(deviceClassDiscoveryParamTypesFiltered) && deviceClassDiscoveryParamTypesFiltered.length === 0) {\n          // Create membership (deviceClass <-> discoveryParamType)\n          deviceClassDiscoveryParamTypesId = deviceClassDiscoveryParamTypesId + 1;\n          var deviceClassDiscoveryParamTypeInstance = DS.createInstance('deviceClassDiscoveryParamType', {\n            id: deviceClassDiscoveryParamTypesId,\n            deviceClassId: deviceClassId,\n            paramTypeId: discoveryParamType.id\n          });\n          DS.inject('deviceClassDiscoveryParamType', deviceClassDiscoveryParamTypeInstance);\n        }\n      });\n\n      // ParamTypes\n      angular.forEach(paramTypes, function(paramType) {\n        // Create paramType\n        var paramTypeInstance = DS.createInstance('paramType', paramType);\n        DS.inject('paramType', paramTypeInstance);\n\n        // Filtered deviceClassParamTypes\n        var deviceClassParamTypesFiltered = deviceClassParamTypes.filter(function(deviceClassParamType) {\n          return deviceClassParamType.deviceClassId === deviceClassId && deviceClassParamType.paramTypeId === paramType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(deviceClassParamTypesFiltered) && deviceClassParamTypesFiltered.length === 0) {\n          // Create membership (deviceClass <-> paramType)\n          deviceClassParamTypesId = deviceClassParamTypesId + 1;\n          var deviceClassParamTypeInstance = DS.createInstance('deviceClassParamType', {\n            id: deviceClassParamTypesId,\n            deviceClassId: deviceClassId,\n            paramTypeId: paramType.id\n          });\n          DS.inject('deviceClassParamType', deviceClassParamTypeInstance);\n        }\n      });\n\n      // ActionTypes\n      angular.forEach(actionTypes, function(actionType) {\n        // Create actionType\n        var actionTypeInstance = DS.createInstance('actionType', actionType);\n        DS.inject('actionType', actionTypeInstance);\n\n        // Filtered deviceClassActionTypes\n        var deviceClassActionTypesFiltered = deviceClassActionTypes.filter(function(deviceClassActionType) {\n          return deviceClassActionType.deviceClassId === deviceClassId && deviceClassActionType.actionTypeId === actionType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(deviceClassActionTypesFiltered) && deviceClassActionTypesFiltered.length === 0) {\n          // Create membership (deviceClass <-> actionType)\n          deviceClassActionTypesId = deviceClassActionTypesId + 1;\n          var deviceClassActionTypeInstance = DS.createInstance('deviceClassActionType', {\n            id: deviceClassActionTypesId,\n            deviceClassId: deviceClassId,\n            actionTypeId: actionType.id\n          });\n          DS.inject('deviceClassActionType', deviceClassActionTypeInstance);\n        }\n      });\n\n      // EventTypes\n      angular.forEach(eventTypes, function(eventType) {\n        // Create eventType\n        var eventTypeInstance = DS.createInstance('eventType', eventType);\n        DS.inject('eventType', eventTypeInstance);\n\n        // Filtered deviceClassEventTypes\n        var deviceClassEventTypesFiltered = deviceClassEventTypes.filter(function(deviceClassEventType) {\n          return deviceClassEventType.deviceClassId === deviceClassId && deviceClassEventType.eventTypeId === eventType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(deviceClassEventTypesFiltered) && deviceClassEventTypesFiltered.length === 0) {\n          // Create membership (deviceClass <-> eventType)\n          deviceClassEventTypesId = deviceClassEventTypesId + 1;\n          var deviceClassEventTypeInstance = DS.createInstance('deviceClassEventType', {\n            id: deviceClassEventTypesId,\n            deviceClassId: deviceClassId,\n            eventTypeId: eventType.id\n          });\n          DS.inject('deviceClassEventType', deviceClassEventTypeInstance);\n        }\n      });\n\n      // StateTypes\n      angular.forEach(stateTypes, function(stateType) {\n        // Create stateType\n        var stateTypeInstance = DS.createInstance('stateType', stateType);\n        DS.inject('stateType', stateTypeInstance);\n\n        // Filtered deviceClassStateTypes\n        var deviceClassStateTypesFiltered = deviceClassStateTypes.filter(function(deviceClassStateType) {\n          return deviceClassStateType.deviceClassId === deviceClassId && deviceClassStateType.stateTypeId === stateType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(deviceClassStateTypesFiltered) && deviceClassStateTypesFiltered.length === 0) {\n          // Create membership (deviceClass <-> actionType)\n          deviceClassStateTypesId = deviceClassStateTypesId + 1;\n          var deviceClassStateTypeInstance = DS.createInstance('deviceClassStateType', {\n            id: deviceClassStateTypesId,\n            deviceClassId: deviceClassId,\n            stateTypeId: stateType.id\n          });\n          DS.inject('deviceClassStateType', deviceClassStateTypeInstance);\n        }\n      });\n    }\n\n    /*\n     * Private method: _mapStates(resource, attrs)\n     */\n    function _mapStates(resource, attrs) {\n      var actionTypes = attrs.actionTypes;\n      var eventTypes = attrs.eventTypes;\n      var stateTypes = attrs.stateTypes;\n      // var stateIds = libs._.pluck(stateTypes, 'id');\n      var stateIds = _.pluck(stateTypes, 'id');\n\n      // Map actionTypes\n      angular.forEach(actionTypes, function(actionType) {\n        // Check if current actionType belongs to a stateType\n        if(_.contains(stateIds, actionType.id)) {\n          actionType.hasState = true;\n        } else {\n          actionType.hasState = false;\n        }\n      });\n\n      // Map eventTypes\n      angular.forEach(eventTypes, function(eventType) {\n        // Check if current eventType belongs to a stateType\n        if(_.contains(stateIds, eventType.id)) {\n          eventType.hasState = true;\n        } else {\n          eventType.hasState = false;\n        }\n      });\n    }\n\n\n    /*\n     * Public method: discover(discoveryParams)\n     */\n    function discover(discoveryParams) {\n      /* jshint validthis: true */\n      var self = this;\n\n      return websocketService.send({\n        method: 'Devices.GetDiscoveredDevices',\n        params: {\n          deviceClassId: self.id,\n          discoveryParams: discoveryParams\n        }\n      });\n    }\n\n    /*\n     * Public method: getCreateMethod()\n     */\n    function getCreateMethod() {\n      /* jshint validthis: true */\n      var self = this;\n      var basePath = 'app/components/create-thing/templates/';\n      var createMethodData = null;\n\n      if(self.createMethods.indexOf('CreateMethodDiscovery') > -1) {\n        createMethodData = {\n          title: 'Discovery',\n          template: basePath + 'create-thing-discovery.html'\n        };\n      } else if(self.createMethods.indexOf('CreateMethodUser') > -1) {\n        createMethodData = {\n          title: 'User',\n          template: basePath + 'create-thing-user.html'\n        };\n      } else if(self.createMethods.indexOf('CreateMethodAuto') > -1) {\n        createMethodData = {\n          title: 'Auto',\n          template: null\n        };\n      } else {\n        $log.error('CreateMethod not implemented.');\n      }\n\n      return createMethodData;\n    }\n\n    /*\n     * Public method: getSetupMethod()\n     */\n    function getSetupMethod() {\n      /* jshint validthis: true */\n      var self = this;\n      var basePath = 'app/components/setup-thing/templates/';\n      var setupMethodData = {};\n\n      switch(self.setupMethod) {\n        case 'SetupMethodJustAdd':\n          setupMethodData = null;\n          break;\n        case 'SetupMethodDisplayPin':\n          setupMethodData = {\n            title: 'Display Pin',\n            template: basePath + 'setup-thing-display-pin.html'\n          };\n          break;\n        case 'SetupMethodEnterPin':\n          setupMethodData = {\n            title: 'Enter Pin',\n            template: basePath + 'setup-thing-enter-pin.html'\n          };\n          break;\n        case 'SetupMethodPushButton':\n          setupMethodData = {\n            title: 'Push Button',\n            template: basePath + 'setup-thing-push-button.html'\n          };\n          break;\n        default:\n          $log.error('SetupMethod not implemented.');\n          break;\n      }\n\n      return setupMethodData;\n    }\n\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDeviceClassEventType', DSDeviceClassEventTypeFactory)\n    .run(function(DSDeviceClassEventType) {});\n\n  DSDeviceClassEventTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSDeviceClassEventTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSDeviceClassEventType = DS.defineResource({\n\n      // Model configuration\n      name: 'deviceClassEventType',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId'\n          },\n          eventType: {\n            localField: 'eventType',\n            localKey: 'eventTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSDeviceClassEventType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDeviceClassDiscoveryParamType', DSDeviceClassDiscoveryParamTypeFactory)\n    .run(function(DSDeviceClassDiscoveryParamType) {});\n\n  DSDeviceClassDiscoveryParamTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSDeviceClassDiscoveryParamTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSDeviceClassDiscoveryParamType = DS.defineResource({\n\n      // Model configuration\n      name: 'deviceClassDiscoveryParamType',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId'\n          },\n          paramType: {\n            localField: 'discoveryParamType',\n            localKey: 'paramTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSDeviceClassDiscoveryParamType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDeviceClassActionType', DSDeviceClassActionTypeFactory)\n    .run(function(DSDeviceClassActionType) {});\n\n  DSDeviceClassActionTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSDeviceClassActionTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSDeviceClassActionType = DS.defineResource({\n\n      // Model configuration\n      name: 'deviceClassActionType',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId'\n          },\n          actionType: {\n            localField: 'actionType',\n            localKey: 'actionTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSDeviceClassActionType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSConnection', DSConnectionFactory)\n    .run(function(DSConnection) {});\n\n\n  DSConnectionFactory.$inject = ['$log', 'LocalForage'];\n\n  function DSConnectionFactory($log, LocalForage) {\n\n    LocalForage.localForageStore.registerAdapter('localForage', LocalForage.localForageAdapter, { default: true });\n\n    var Connection = LocalForage.localForageStore.defineResource({\n      name: 'connection',\n      relations: {\n        belongsTo: {\n          settings: {\n            localField: 'settings',\n            localKey: 'settingsId',\n            parent: true\n          }\n        }\n      }\n    });\n\n    return Connection;\n\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSActionTypeParamType', DSActionTypeParamTypeFactory)\n    .run(function(DSActionTypeParamType) {});\n\n  DSActionTypeParamTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSActionTypeParamTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSActionTypeParamType = DS.defineResource({\n\n      // Model configuration\n      name: 'actionTypeParamType',\n      relations: {\n        belongsTo: {\n          actionType: {\n            localField: 'actionType',\n            localKey: 'actionTypeId'\n          },\n          paramType: {\n            localField: 'paramType',\n            localKey: 'paramTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSActionTypeParamType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSActionType', DSActionTypeFactory)\n    .run(function(DSActionType) {});\n\n  DSActionTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSActionTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n    var actionTypeParamTypesId = 0;\n\n    /*\n     * DataStore configuration\n     */\n    var DSActionType = DS.defineResource({\n\n      // API configuration\n      endpoint: 'actiontypes',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'actionType',\n      relations: {\n        hasMany: {\n          deviceClassActionType: {\n            localField: 'deviceClassActionTypes',\n            foreignKey: 'actionTypeId'\n          },\n          actionTypeParamType: {\n            localField: 'actionTypeParamTypes',\n            foreignKey: 'actionTypeId'\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {\n        getParams: getParams,\n        getRuleActionParams: getRuleActionParams\n      },\n\n      // Lifecycle hooks\n      afterInject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _addUiData(resource, attrs);\n            _createActionTypeParamTypes(resource, attrs);\n          });\n        } else {\n          _addUiData(resource, attrs);\n          _createActionTypeParamTypes(resource, attrs);\n        }\n      }\n\n    });\n\n    return DSActionType;\n\n\n    /*\n     * Private method: _addUiData(resource, attrs)\n     */\n    function _addUiData(resource, attrs) {\n      var paramTypes = attrs.paramTypes;\n      \n      attrs.phrase = 'Execute \"' + attrs.name + '\"';\n\n      // Add phrase for moods\n      if(angular.isArray(paramTypes) && paramTypes.length > 0) {\n        attrs.phrase = attrs.phrase + ' with parameters';\n      }\n    }\n\n    /*\n     * Private method:_createActionTypeParamTypes()\n     */\n    function _createActionTypeParamTypes(resource, attrs) {\n      var actionTypeParamTypes = DS.getAll('actionTypeParamType');\n      var paramTypes = attrs.paramTypes;\n      var actionTypeId = attrs.id;\n\n\n      // ParamTypes\n      angular.forEach(paramTypes, function(paramType) {\n        // Create paramType\n        var paramTypeInstance = DS.createInstance('paramType', paramType);\n        DS.inject('paramType', paramTypeInstance);\n\n        // Filtered actionTypeParamTypes\n        var actionTypeParamTypesFiltered = actionTypeParamTypes.filter(function(actionTypeParamType) {\n          return actionTypeParamType.actionTypeId === actionTypeId && actionTypeParamType.paramTypeId === paramType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(actionTypeParamTypesFiltered) && actionTypeParamTypesFiltered.length === 0) {\n          // Create membership (deviceClass <-> paramType)\n          actionTypeParamTypesId = actionTypeParamTypesId + 1;\n          var actionTypeParamTypeInstance = DS.createInstance('actionTypeParamType', {\n            id: actionTypeParamTypesId,\n            actionTypeId: actionTypeId,\n            paramTypeId: paramType.id\n          });\n          DS.inject('actionTypeParamType', actionTypeParamTypeInstance);\n        }\n      });\n    }\n\n\n    /*\n     * Public method: getParams()\n     */\n    function getParams() {\n      /* jshint validthis: true */\n      var self = this;\n      var params = [];\n      var paramTypes = self.paramTypes;\n\n      angular.forEach(paramTypes, function(paramType) {\n        params.push({\n          id: paramType.id,\n          value: paramType.value\n        });\n      });\n\n      return params;\n    }\n\n    /*\n     * Public method: getRuleActionParams(params, actionParamType, eventParamType)\n     */\n    function getRuleActionParams(params, actionParamType, eventParamType) {\n      /* jshint validthis: true */\n      var self = this;\n      var ruleActionParams = [];\n\n      angular.forEach(params, function(param) {\n        if(actionParamType !== undefined && eventParamType !== undefined) {\n          if(param.paramTypeId === actionParamType.id) {\n            ruleActionParams.push({\n              paramTypeId: param.paramTypeId,\n              eventParamName: eventParamType.name,\n              eventTypeId: eventParamType.eventDescriptor.eventTypeId\n            });\n          } else {\n            ruleActionParams.push({\n              paramTypeId: param.paramTypeId,\n              value: param.value\n            });\n          }\n        } else {\n          ruleActionParams.push({\n            paramTypeId: param.paramTypeId,\n            value: param.value\n          });\n        }\n      });\n\n      return ruleActionParams;\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.logging', [\n      'guh.logging.hooks'\n    ])\n    .config(config);\n\n  config.$inject = ['$provide'];\n\n  function config($provide) {\n    // Exceptions\n    // $provide.decorator('$exceptionHandler', ['$injector', '$delegate', 'Logging', function($injector, $delegate, Logging) {\n    //   if(!Logging.angularServiceEnhanced.$exceptionHandler) {\n    //     return $delegate;\n    //   }\n\n    //   return function(exception, cause) {\n    //     $delegate(exception, cause);\n    //   }\n    // }]);\n\n    // Logs\n    $provide.decorator('$log', ['$injector', '$delegate', 'guhLogging', function($injector, $delegate, guhLogging) {\n      var decorator = {\n        log: log,\n        info: info,\n        warn: warn,\n        error: error\n      };\n\n      return decorator;\n\n\n      function _applyCallbacks(logType, args) {\n        var logTypeData = guhLogging.getLogType(logType);\n\n        // Pre callbacks\n        angular.forEach(logTypeData.preCallbacks, function(preCallbackProvider) {\n          var preCallback = $injector.get(preCallbackProvider);\n          preCallback.call(preCallback, {\n            type: logType,\n            args: args\n          });\n        });\n\n        // Console\n        if(guhLogging.isEnhanced(logType)) {\n          $delegate[logType].apply($delegate, args);\n          guhLogging[logType].apply(null, args);\n        } else {\n          $delegate[logType].apply($delegate, args);\n        }\n\n        // Post callbacks\n        angular.forEach(logTypeData.postCallbacks, function(postCallbackProvider) {\n          var postCallback = $injector.get(postCallbackProvider);\n          postCallback.call(postCallback, {\n            type: logType,\n            args: args\n          });\n        });\n      }\n\n      function log() {\n        var args = arguments;\n        _applyCallbacks('log', args);\n      }\n\n      function info() {\n        var args = arguments;\n        _applyCallbacks('info', args);\n      }\n\n      function warn() {\n        var args = arguments;\n        _applyCallbacks('warn', args);\n      }\n\n      function error() {\n        var args = arguments;\n        _applyCallbacks('error', args);\n      }\n    }]);\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.logging')\n    .provider('guhLogging', Logging);\n\n  Logging.$inject = ['$injector'];\n\n  function Logging($injector) {\n    var _logTypes = {\n      log: {},\n      info: {},\n      warn: {},\n      error: {}\n    };\n\n    var _hooks = {\n      http: 'guhLoggingHttpHook',\n      broadcast: 'guhLoggingBroadcastHook',\n      websocket: null\n    };\n\n    var provider = {\n      $get: $get,\n      enhance: enhance,\n      before: before,\n      after: after,\n      decorate: decorate\n    };\n\n    return provider;\n\n\n    // function _getArrayFromString(string) {\n    //   if(!angular.isString(string)) {\n    //     return;\n    //   }\n    // }\n\n    function _addHooks(prePost, logTypes, hooks) {\n      try {\n        if(angular.isUndefined(logTypes) || logTypes === null || !angular.isString(logTypes)) {\n          throw 'Wrong argument type. The argument \"logTypes\" should be a comma seperated String.';\n        }\n        if(angular.isDefined(hooks) && hooks !== null && !angular.isString(hooks)) {\n          throw 'Wrong argument type. The argument \"hooks\" should be a comma seperated String.';\n        }\n      } catch(error) {\n        return error;\n      }\n\n      var logTypesArray = logTypes.replace(/\\s+/g, '').split(',');\n      var hooksArray = hooks.replace(/\\s+/g, '').split(',');\n      var logTypeCallbacks = [];\n\n      // Check hooks\n      var callback;\n      angular.forEach(hooksArray, function(hook) {\n        if(angular.isDefined(_hooks[hook]) && _hooks[hook] !== null) {\n          logTypeCallbacks.push(_hooks[hook]);\n        }\n      });\n\n      // Initialize all log types with preCallbacks = [] / postCallbacks = []\n      angular.forEach(_logTypes, function(_logType) {\n        _logType[prePost + 'Callbacks'] = [];\n      });\n\n      // Set defined callbacks for log types\n      angular.forEach(logTypesArray, function(logType) {\n        if(angular.isDefined(_logTypes[logType])) {\n          _logTypes[logType][prePost + 'Callbacks'] = logTypeCallbacks;\n        }\n      });\n    }\n\n    function _getEnhancedArguments(args) {\n      // console.log('args', args, angular.isObject(args), angular.isArray(args));\n\n      var argsArray = args ? [].slice.call(args) : args;\n\n      // console.log('argsArray', argsArray, argsArray.length, angular.isArray(argsArray), argsArray[0]);\n\n      if(argsArray.length === 1) {\n        return argsArray[0];\n      } else {\n        return args;\n      }\n    }\n\n    function _addTimestamp() {\n\n    }\n\n\n    function $get() {\n      var service = {\n        isEnhanced: isEnhanced,\n        log: log,\n        info: info,\n        warn: warn,\n        error: error,\n        getLogType: getLogType\n      };\n\n      return service;\n\n\n      function isEnhanced(logType) {\n        return (angular.isDefined(_logTypes[logType]) && angular.isDefined(_logTypes[logType].enhanced)) ? _logTypes[logType].enhanced : false;\n      }\n\n      function log() {\n        // var args = _getEnhancedArguments(arguments);\n        // console.log(arguments);\n      }\n\n      function info() {\n        // var args = _getEnhancedArguments(arguments);\n        // console.info(arguments);\n      }\n\n      function warn() {\n        // var args = _getEnhancedArguments(arguments);\n        // console.warn(arguments);\n      }\n\n      function error() {\n        // var args = _getEnhancedArguments(arguments);\n        // console.error(arguments);\n      }\n\n      function getLogType(logType) {\n        return _logTypes[logType];\n      }\n    }\n\n    function enhance(logTypes) {\n      try {\n        if(angular.isDefined(logTypes) && logTypes !== null && !angular.isString(logTypes)) {\n          throw 'Wrong argument type. The argument \"logTypes\" should be a comma seperated String.';\n        }\n      } catch(error) {\n        return error;\n      }\n\n      var logTypesArray = [];\n\n      // Set enhanced\n      if(angular.isString(logTypes)) {\n        logTypesArray = logTypes.replace(/\\s+/g, '').split(',');\n\n        // Initialize all log types with enhanced = false\n        angular.forEach(_logTypes, function(_logType) {\n          _logType.enhanced = false;\n        });\n\n        // Set defined enhanced values for log types\n        angular.forEach(logTypesArray, function(logType) {\n          if(angular.isDefined(_logTypes[logType])) {\n            _logTypes[logType].enhanced = true;\n          }\n        });\n      } else {\n        // If logTypes is undefined or null\n        // Initialize all log types with enhanced = true\n        angular.forEach(_logTypes, function(_logType) {\n          _logType.enhanced = true;\n        });\n      }\n    }\n\n    function before(logTypes, hooks) {\n      _addHooks('pre', logTypes, hooks);\n    }\n\n    function after(logTypes, hooks) {\n      _addHooks('post', logTypes, hooks);\n    }\n\n    function decorate(message) {\n\n    }\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.api', [])\n    .config(config);\n\n  config.$inject = [];\n\n  function config() {}\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.api')\n    .factory('websocketService', websocketService);\n\n  websocketService.$inject = ['$log', '$rootScope', '$q', '$timeout', 'DS'];\n\n  function websocketService($log, $rootScope, $q, $timeout, DS) {\n\n    var ws = null;\n    var connectionTimer;\n    var callbacks = {};\n    var currentRequestId = 0;\n    var websocketService = {\n      close: close,\n      connect: connect,\n      reconnect: reconnect,\n      send: send\n    };\n\n    return websocketService;\n\n    /*\n     * Private function: _getRequestId()\n     */\n    function _getRequestId() {\n      currentRequestId = currentRequestId + 1;\n      if(currentRequestId > 10000) {\n        currentRequestId = 0;\n      }\n      return currentRequestId;\n    };\n\n\n    /*\n     * Public method: close()\n     */\n    function close() {\n      if(ws) {\n        ws.close();\n        ws = null;\n      }\n    }\n\n    /*\n     * Public method: connect()\n     */\n    function connect(url) {\n      if(ws) {\n        return;\n      }\n\n      if(angular.isUndefined(url)) {\n        $log.error('guh.api.websocketService:factory', 'Missing argument: url');\n      }\n\n      ws = new WebSocket(url);\n\n      // Timeout if connecting takes to long (can take up to 1 minute, with the timeout only 2 seconds)\n      connectionTimer = $timeout(function() {\n        ws.close();\n        ws = null;\n      }, 2000);\n\n      ws.onopen = function(event) {\n        if(connectionTimer) {\n          $timeout.cancel(connectionTimer);\n        }\n\n        // Send broadcast event\n        $rootScope.$apply(function() {\n          $rootScope.$broadcast('WebsocketConnected', 'Successful connected to guh.');\n        });\n      };\n\n      ws.onclose = function(event) {\n        // Safari is not calling onerror but calls onclose with code = 1006\n        if(event.code === 1006) {\n          $rootScope.$apply(function() {\n            $rootScope.$broadcast('WebsocketConnectionError', 'There was an error connecting to guh.');\n          });\n        } else {\n          // Send broadcast event\n          $rootScope.$apply(function() {\n            $rootScope.$broadcast('WebsocketConnectionLost', 'The app has lost the connection to guh. Please check if you are connected to your network and if guh is running correctly.');\n          });\n        }\n      };\n\n      ws.onerror = function(event) {\n        // Send broadcast event\n        $rootScope.$apply(function() {\n          $rootScope.$broadcast('WebsocketConnectionError', 'There was an error connecting to guh.');\n        });\n      };\n\n      ws.onmessage = function(message) {\n        var data = angular.fromJson(message.data);\n        var injectedItem;\n\n        if(angular.isDefined(data.notification)) {\n          switch(data.notification) {\n            // Devices.DeviceAdded\n            case 'Devices.DeviceAdded':\n              var deviceId = data.params.device.id;\n              var device = DS.get('device', deviceId);\n\n              if(angular.isUndefined(device)) {\n                injectedItem = DS.inject('device', data.params.device);\n\n                // Send broadcast event\n                if(DS.is('device', injectedItem)) {\n                  $rootScope.$broadcast('ReloadView', injectedItem.deviceClass.name + ' was added.');\n                }          \n              }\n\n              break;\n\n\n            // Devices.DeviceChanged\n            case 'Devices.DeviceChanged':\n              var deviceId = data.params.device.id;\n              var device = DS.get('device', deviceId);\n\n              if(angular.isDefined(device)) {\n                injectedItem = DS.inject('device', data.params.device);\n\n                // Send broadcast event\n                if(DS.is('device', injectedItem)) {\n                  $rootScope.$broadcast('ReloadView', injectedItem.deviceClass.name + ' was changed.');\n                }\n              }\n\n              break;\n\n            // Devices.DeviceRemoved\n            case 'Devices.DeviceRemoved':\n              var deviceId = data.params.deviceId;\n              var ejectedItem = DS.eject('device', deviceId);\n\n              if(angular.isDefined(ejectedItem)) {\n                // Send broadcast event\n                $rootScope.$broadcast('ReloadView', 'Device was removed.', ejectedItem);\n              }\n\n              break;\n\n\n            // Devices.StateChanged\n            case 'Devices.StateChanged':\n              var deviceId = data.params.deviceId;\n              var stateTypeId = data.params.stateTypeId;\n              var value = data.params.value;\n              DS.inject('state', {\n                id: '' + deviceId + '_' + stateTypeId,\n                deviceId: deviceId,\n                stateTypeId: stateTypeId,\n                value: value\n              });\n              break;\n\n\n            // TODO: Events.EventTriggered\n\n\n            // TODO: Logging.LogDatabaseUpdated\n\n\n            // TODO: Logging.LogEntryAdded\n\n\n            // TODO: Rules.RuleActiveChanged\n\n\n            // Rules.RuleAdded\n            case 'Rules.RuleAdded':\n              var ruleId = data.params.rule.id;\n              var rule = DS.get('rule', ruleId);\n\n              if(angular.isUndefined(rule)) {\n                injectedItem = DS.inject('rule', data.params.rule);\n\n                // Send broadcast event\n                if(DS.is('rule', injectedItem)) {\n                  $rootScope.$broadcast('ReloadView', injectedItem.name + ' was added.');\n                }\n              }\n\n              break;\n\n\n            // Rules.ConfigurationChanged\n            case 'Rules.ConfigurationChanged':\n              var rule = data.params.rule;\n              injectedItem = DS.inject('rule', rule);\n\n              // Send broadcast event\n              if(DS.is('rule', injectedItem)) {\n                $rootScope.$broadcast('ReloadView', injectedItem.name + ' was updated.');\n              }\n\n              break;\n\n\n            // Rules.RuleRemoved\n            case 'Rules.RuleRemoved':\n              var ruleId = data.params.ruleId;\n              var ejectedItem = DS.eject('rule', ruleId);\n\n              if(angular.isDefined(ejectedItem)) {\n                // Send broadcast event\n                $rootScope.$broadcast('ReloadView', 'Rule was removed.');\n              }\n\n              break;\n\n\n            default:\n              // $log.warn('Type of notification not handled:', data);\n          }\n\n        // } else if(angular.isDefined(data.authenticationRequired)) {\n        } else if(angular.isDefined(data.id) && data.id === 0) {\n          $rootScope.$apply(function() {\n            $rootScope.$broadcast('InitialHandshake', data);\n          });\n        } else if(angular.isDefined(data.id)) {\n          if(data.status === 'success') {\n            if(angular.isDefined(data.params.deviceError) && data.params.deviceError !== 'DeviceErrorNoError') {\n              $rootScope.$apply(callbacks[data.id].callback.reject(data.params));\n            } else if(angular.isDefined(data.params.loggingError) && data.params.loggingError !== 'LoggingErrorNoError') {\n              $rootScope.$apply(callbacks[data.id].callback.reject(data.params));\n            } else if(angular.isDefined(data.params.ruleError) && data.params.ruleError !== 'RuleErrorNoError') {\n              $rootScope.$apply(callbacks[data.id].callback.reject(data.params));\n            } else {\n              $rootScope.$apply(callbacks[data.id].callback.resolve(data.params));\n            }\n          } else {\n            $rootScope.$apply(callbacks[data.id].callback.reject(data.error));\n          }\n          \n          delete callbacks[data.id];\n        }\n      };\n    }\n\n    /*\n     * Public method: reconnect(url)\n     */\n    function reconnect(url) {\n      websocketService.close();\n      websocketService.connect(url);\n    }\n\n    /*\n     * Public method: send(request)\n     */\n    function send(request) {\n      var defer = $q.defer();\n      var requestId = _getRequestId();\n\n      callbacks[requestId] = {\n        time: new Date(),\n        callback: defer\n      };\n\n      request.id = requestId;\n\n      console.log('SEND', request, angular.toJson(request));\n\n      ws.send(angular.toJson(request));\n\n      return defer.promise;\n    }\n\n  }\n\n}());"],"sourceRoot":"/source/"}