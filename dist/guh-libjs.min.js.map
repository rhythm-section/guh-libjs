{"version":3,"sources":["logging/hooks/logging-hooks-module.js","logging/hooks/logging-http-hook-provider.js","logging/hooks/logging-broadcast-hook-provider.js","vendor/vendor-module.js","vendor/lodash-vendor-service.js","vendor/localforage-vendor-service.js","utils/utils-module.js","utils/local-forage-service.js","utils/file-utils-service.js","models/models-module.js","models/vendor-model-service.js","models/state-type-model-service.js","models/state-model-service.js","models/settings-model-service.js","models/server-info-model-service.js","models/rule-model-service.js","models/plugin-model-service.js","models/param-type-model-service.js","models/models-helper.js","models/event-type-model-service.js","models/device-model-service.js","models/device-class-state-type-model-service.js","models/device-class-model-service.js","models/device-class-event-type-service.js","models/device-class-action-type-model-service.js","models/connection-model-service.js","models/authentication-model-service.js","models/action-type-model-service.js","logging/logging-module.js","logging/logging-provider.js","connection/connection-module.js","connection/websocket-connection-service.js","connection/local-websocket-connection-service.js","connection/cloud-websocket-connection-service.js","cloud/cloud-module.js","cloud/cloud-provider.js","api/api-module.js","api/api-service.js"],"names":["config","angular","module","$inject","guhLoggingHttpHook","_checkParameter","parameterName","parameter","isDefined","isString","error","_setServerAddress","locationServer","locationProtocol","locationHost","locationPort","$get","$http","logObject","post","data","then","response","console","log","payload","setProtocol","protocol","setHostname","hostname","setPort","port","getServer","location","provider","guhLoggingBroadcastHook","$rootScope","type","argsArray","args","slice","call","isArray","length","$broadcast","context","lodashService","$log","$window","_","factory","localforageService","localforage","LocalForage","localForageAdapter","DSLocalForageAdapter","localForageStore","JSData","DS","FileFactory","$templateCache","checkFile","path","file","cacheObject","get","undefined","File","DSProvider","defaults","debug","DSVendorFactory","$q","apiService","load","send","method","DSVendor","inject","vendors","getAll","defineResource","endpoint","idAttribute","name","relations","hasMany","deviceClass","localField","foreignKey","computed","methods","extend","run","DSStateTypeFactory","_addUiData","resource","attrs","regExp","searchUnit","replace","phrase","test","DSStateType","deviceClassStateType","afterInject","arrayOfAttrs","forEach","DSStateFactory","deviceId","params","states","values","map","state","DSState","belongsTo","device","localKey","parent","hasOne","stateType","compoundId","stateTypeId","value","DSSettingsFactory","registerAdapter","default","DSSettings","serverInfo","connection","DSServerInfoFactory","ServerInfo","settings","DSServerInfo","DSRuleFactory","_loadDetails","ruleDescription","ruleId","id","all","ruleDescriptions","DSRule","rule","rules","add","executeActions","self","this","executeExitActions","remove","DSPluginFactory","DSPlugin","plugins","DSParamTypeFactory","DSParamType","modelsHelper","app","checkTemplateUrl","templateUrl","pathElements","split","pop","join","fileExists","when","setBasePath","basePath","apiUrl","DSEventTypeFactory","paramTypes","getParamDescriptor","paramType","operator","paramDescriptor","DSEventType","DSDeviceFactory","_createStates","index","stateInstance","createInstance","isUndefined","_removeStates","eject","DSDevice","devices","getDescription","delimiter","vendorName","vendor","deviceClassName","pair","deviceClassId","deviceDescriptorId","deviceParams","confirmPairing","pairingTransactionId","secret","edit","deviceData","deviceParamTypes","deviceParamType","deviceParam","push","update","executeAction","actionType","jsonRpcParams","actionTypeId","key","getEventDescriptor","eventType","paramDescriptors","eventDescriptor","eventTypeId","getStateDescriptor","stateDescriptor","getAction","action","ruleActionParams","getRuleActionParams","afterEject","DSDeviceClassStateTypeFactory","DSDeviceClassStateType","DSDeviceClassFactory","DSDeviceClassActionType","DSDeviceClassEventType","DSDeviceClass","deviceClasses","_getInputPath","filename","_addUiTemplate","templateName","toLowerCase","_createDeviceClassActionsTypes","deviceClassActionTypes","deviceClassEventTypes","deviceClassStateTypes","actionTypes","eventTypes","stateTypes","actionTypeInstance","deviceClassActionTypesFiltered","filter","deviceClassActionType","deviceClassActionTypesId","deviceClassActionTypeInstance","eventTypeInstance","deviceClassEventTypesFiltered","deviceClassEventType","deviceClassEventTypesId","deviceClassEventTypeInstance","stateTypeInstance","deviceClassStateTypesFiltered","deviceClassStateTypesId","deviceClassStateTypeInstance","_mapStates","stateIds","pluck","contains","hasState","discover","discoveryParams","getCreateMethod","createMethodData","createMethods","indexOf","title","template","getSetupMethod","setupMethodData","setupMethod","getAllActionTypes","getAllEventTypes","getAllStateTypes","DSDeviceClassEventTypeFactory","DSDeviceClassActionTypeFactory","DSConnectionFactory","cloudWebsocketService","createTunnel","connectionId","tunnelData","tunnelCreated","DSConnection","create","tunnel","activationTimeStamp","clientConnection","serverConnection","isTunnelCreated","getConnections","DSAuthenticationFactory","authenticateConnection","token","connectionAuthenticated","isAuthenticated","cloudUserAuthenticated","DSAuthentication","DSActionTypeFactory","getParams","actionParamType","eventParamType","param","eventParamName","DSActionType","$provide","decorator","$injector","$delegate","guhLogging","_applyCallbacks","logType","logTypeData","getLogType","preCallbacks","preCallbackProvider","preCallback","isEnhanced","apply","postCallbacks","postCallbackProvider","postCallback","arguments","info","warn","Logging","_addHooks","prePost","logTypes","hooks","logTypesArray","hooksArray","logTypeCallbacks","hook","_hooks","_logTypes","_logType","enhanced","service","enhance","before","after","decorate","message","http","broadcast","websocket","websocketService","$timeout","close","ws","connect","url","WebSocket","connectionTimer","onopen","event","cancel","$apply","onclose","code","onerror","onmessage","fromJson","reconnect","request","toJson","noop","localWebsocketService","cloudService","_onmessage","_getOnMessageCallback","getOnMessageCallback","_getRequestId","currentRequestId","notification","_notificationHandler","server","version","_responseHandler","tunnelId","getTunnelId","status","authenticationError","callbacks","callback","reject","connectionError","resolve","defer","requestId","time","Date","promise","Cloud","login","username","password","ssl","baseUrl","loginUrl","headers","Content-Type","transformRequest","obj","str","p","encodeURIComponent","grant_type","grantType","authenticated","logout","setTunnelId","signupUrl","injectedItem","is","ejectedItem","deviceError","loggingError","ruleError","apiServiceProvider","connectionType"],"mappings":"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","file":"guh-libjs.min.js","sourcesContent":["/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.logging.hooks', [])\n    .config(config);\n\n  config.$inject = [];\n\n  function config() {}\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.logging.hooks')\n    .provider('guhLoggingHttpHook', guhLoggingHttpHook);\n\n  function guhLoggingHttpHook() {\n    // Variables\n    var locationProtocol = location.protocol;\n    var locationHost = location.hostname;\n    var locationPort = location.port;\n    var locationServer = locationProtocol + '//' + locationHost + ':' + locationPort;\n\n\n    var provider = {\n      // Provider methods (needed)\n      $get: ['$http', $get],\n\n      // Other methods\n      getServer: getServer,\n      setProtocol: setProtocol,\n      setHostname: setHostname,\n      setPort: setPort\n    };\n\n    return provider;\n\n\n    function _checkParameter(parameterName, parameter) {\n      try {\n        if(!angular.isDefined(parameter) || parameter === null) {\n          throw 'The parameter ' + parameterName + ' has to be defined.';\n        } else if(!angular.isString(parameter)) {\n          throw 'The value of ' + parameterName + ' has to be a string.';\n        }\n      } catch(error) {\n        return;\n      }\n    }\n\n    function _setServerAddress() {\n      locationServer = locationProtocol + '//' + locationHost + ':' + locationPort;\n    }\n\n\n    function $get($http) {\n      return function(logObject) {\n        $http\n          .post(locationServer, {\n            data: logObject\n          })\n          .then(function(response) {\n            console.log('Data successfully sent.', {\n              payload: logObject,\n              response: response\n            });\n          })\n          .catch(function(error) {\n            console.log('Data not sent.', {\n              payload: logObject,\n              error: error\n            })\n          });\n      }\n\n      // console.log('$get', $http);\n\n      // var service = {\n      //   // Variables\n      //   protocol: locationProtocol,\n      //   host: locationHost,\n      //   port: locationPort,\n      //   server: locationServer,\n\n      //   // Methods\n      //   addToQueue: addToQueue\n      // };\n\n      // return service;\n\n\n      // function addToQueue($http) {\n      //   console.log('addToQueue', $http);\n      // }\n    }\n\n    function setProtocol(protocol) {\n      _checkParameter('protocol', protocol);\n      locationProtocol = protocol;\n      _setServerAddress();\n    }\n\n    function setHostname(hostname) {\n      _checkParameter('hostname', hostname);\n      locationHost = hostname;\n      _setServerAddress();\n    }\n\n    function setPort(port) {\n      _checkParameter('port', port);\n      locationPort = port;\n      _setServerAddress();\n    }\n\n    function getServer() {\n      return locationServer;\n    }\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.logging.hooks')\n    .provider('guhLoggingBroadcastHook', guhLoggingBroadcastHook);\n\n  function guhLoggingBroadcastHook() {\n\n    var provider = {\n      // Provider methods (needed)\n      $get: ['$rootScope', $get]\n    };\n\n    return provider;\n\n\n    function $get($rootScope) {\n      return function(logObject) {\n        var type = logObject.type ? logObject.type : null;\n        var argsArray = logObject.args ? [].slice.call(logObject.args) : null;\n\n        if(angular.isArray(argsArray)) {\n          switch(argsArray.length) {\n            case 1:\n              if(!angular.isString(argsArray[0])) {\n                $rootScope.$broadcast('notification', {\n                  type: type,\n                  args: argsArray[0]\n                });\n              }\n              break;\n            case 2:\n              $rootScope.$broadcast('notification', {\n                type: type,\n                context: argsArray[0],\n                args: argsArray[1]\n              });\n              break;\n            default:\n              console.log('Wrong number of arguments.', logObject.type, logObject.args, argsArray.length);\n          }\n        }\n      }\n    }\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.vendor', [])\n    .config(config);\n\n  config.$inject = [];\n\n  function config() {}\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.vendor')\n    .factory('_', lodashService);\n\n  lodashService.$inject = ['$log', '$window'];\n\n  function lodashService($log, $window) {\n\n    if(!$window._) {\n      $log.error('guh.vendor.lodashService:factory', '_ is not defined on window object');\n    }\n\n    return $window._;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.vendor')\n    .factory('localforage', localforageService);\n\n  localforageService.$inject = ['$log', '$window'];\n\n  function localforageService($log, $window) {\n\n    if(!$window.localforage) {\n      $log.error('guh.vendor.localforageService:factory', 'localforage is not defined on window object');\n    }\n\n    return $window.localforage;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.utils', [])\n    .config(config);\n\n  config.$inject = [];\n\n  function config() {}\n\n  // module.exports = angular.module('guh.utils');\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n\n  angular\n    .module('guh.utils')\n    .factory('LocalForage', LocalForage);\n\n\n  LocalForage.$inject = ['$log'];\n\n  function LocalForage($log) {\n\n    // jshint unused:false \n    var LocalForage = {\n      localForageAdapter: new DSLocalForageAdapter(),\n      localForageStore: new JSData.DS()\n    };\n\n    return LocalForage;\n\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.utils')\n    .factory('File', FileFactory);\n\n  FileFactory.$inject = ['$log', '$templateCache'];\n\n  function FileFactory($log, $templateCache) {\n    \n    var File = {\n      checkFile: checkFile\n    };\n\n    return File;\n\n\n    /*\n     * Public method: checkFile(path, file)\n     */\n    function checkFile(path, file) {\n      // if(app.environment === 'production') {\n        // Production: One $templateCache entry per template\n        var cacheObject = $templateCache.get(path + file);\n\n        if(cacheObject !== undefined) {\n          return true;\n        } else {\n          return false;\n        }\n      /*} else if(app.environment === 'development') {\n        // Development: One HTML file per template\n        var request = new XMLHttpRequest();\n\n        request.open('HEAD', path + file, false);\n        request.send();\n\n        if(request.status === 200) {\n          return true;\n        } else {\n          return false;\n        }\n      }*/\n    }\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models', [\n      // Datastore\n      'js-data'\n    ])\n    .config(config);\n\n  config.$inject = ['DSProvider'];\n\n  function config(DSProvider) {\n    DSProvider\n      .defaults\n      .debug = false;\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSVendor', DSVendorFactory)\n    .run(function(DSVendor) {});\n\n  DSVendorFactory.$inject = ['$log', '$q', 'DS', 'apiService'];\n\n  function DSVendorFactory($log, $q, DS, apiService) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSVendor = DS.defineResource({\n\n      // API configuration\n      endpoint: 'vendors',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'vendor',\n      relations: {\n        hasMany: {\n          deviceClass: {\n            localField: 'deviceClasses',\n            foreignKey: 'vendorId'\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {}\n\n    });\n\n    angular.extend(DSVendor, {\n      load: load\n    });\n\n    return DSVendor;\n\n\n    function load() {\n      return apiService\n        .send({\n          method: 'Devices.GetSupportedVendors'\n        })\n        .then(function(data) {\n          DSVendor.inject(data.vendors);\n          return DSVendor.getAll();\n        });\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSStateType', DSStateTypeFactory)\n    .run(function(DSStateType) {});\n\n  DSStateTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSStateTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSStateType = DS.defineResource({\n\n      // API configuration\n      endpoint: 'statetypes',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'stateType',\n      relations: {\n        hasMany: {\n          deviceClassStateType: {\n            localField: 'deviceClassStateTypes',\n            foreignKey: 'stateTypeId'\n          },\n        }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {},\n\n      // Lifecycle hooks\n      afterInject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _addUiData(resource, attrs);\n          });\n        } else {\n          _addUiData(resource, attrs);\n        }\n      }\n\n    });\n\n    return DSStateType;\n\n\n    /*\n     * Private method: _addUiData(resource, attrs)\n     */\n    function _addUiData(resource, attrs) {\n      var regExp = /\\s\\[([^)]+)\\]/;                 // Value inside brackets []\n      var searchUnit = name.replace(regExp, '');    // Get value inside brackets\n      var phrase = attrs.name;\n\n      // If name contains the unit in brackets []\n      if(regExp.test(name)) {\n        phrase = searchUnit;\n      }\n\n      // phrase\n      attrs.phrase = 'When value of ' + phrase;\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSState', DSStateFactory)\n    .run(function(DSState) {});\n\n  DSStateFactory.$inject = ['$log', '$q', 'DS', 'apiService'];\n\n  function DSStateFactory($log, $q, DS, apiService) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSState = DS.defineResource({\n\n      // API configuration\n      endpoint: 'states',\n\n      // Model configuration\n      // idAttribute: 'stateTypeId',\n      idAttribute: 'compoundId',\n      name: 'state',\n      relations: {\n        belongsTo: {\n          device: {\n            localField: 'device',\n            localKey: 'deviceId',\n            parent: true\n          }\n        },\n        hasOne: {\n          stateType: {\n            localField: 'stateType',\n            localKey: 'stateTypeId'\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {\n        compoundId: ['deviceId', 'stateTypeId', 'value', function (deviceId, stateTypeId, value) {\n          return '' + deviceId + '_' + stateTypeId;\n        }]\n      },\n\n      // Instance methods\n      methods: {}\n\n    });\n\n    angular.extend(DSState, {\n      load: load\n    });\n\n    return DSState;\n\n\n    function load(deviceId) {\n      return apiService\n        .send({\n          method: 'Devices.GetStateValues',\n          params: {\n            deviceId: deviceId\n          }\n        })\n        .then(function(data) {\n          var states = data.values.map(function(state) {\n            state.deviceId = deviceId;\n            return state;\n          });\n          DSState.inject(states);\n          return DSState.getAll();\n        });\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSSettings', DSSettingsFactory)\n    .run(function(DSSettings) {});\n\n\n  DSSettingsFactory.$inject = ['$log', 'LocalForage'];\n\n  function DSSettingsFactory($log, LocalForage) {\n\n    LocalForage.localForageStore.registerAdapter('localForage', LocalForage.localForageAdapter, { default: true });\n\n    var DSSettings = LocalForage.localForageStore.defineResource({\n      name: 'settings',\n      relations: {\n        hasOne: {\n          serverInfo: {\n            localField: 'serverInfo',\n            foreignKey: 'settingsId'\n          }\n        },\n        hasMany: {\n          connection: {\n            localField: 'connections',\n            foreignKey: 'settingsId'\n          }\n        }\n      }\n    });\n\n    return DSSettings;\n\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSServerInfo', DSServerInfoFactory)\n    .run(function(DSServerInfo) {});\n\n\n  DSServerInfoFactory.$inject = ['$log', 'LocalForage'];\n\n  function DSServerInfoFactory($log, LocalForage) {\n\n    LocalForage.localForageStore.registerAdapter('localForage', LocalForage.localForageAdapter, { default: true });\n\n    var ServerInfo = LocalForage.localForageStore.defineResource({\n      name: 'serverInfo',\n      relations: {\n        belongsTo: {\n          settings: {\n            localField: 'settings',\n            foreignKey: 'settingsId',\n            parent: true\n          }\n        }\n      }\n    });\n\n    return ServerInfo;\n\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSRule', DSRuleFactory)\n    .run(function(DSRule) {});\n\n  DSRuleFactory.$inject = ['$log', '$q', 'DS', 'apiService'];\n\n  function DSRuleFactory($log, $q, DS, apiService) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSRule = DS.defineResource({\n\n      // API configuration\n      endpoint: 'rules',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'rule',\n      relations: {},\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {\n        // API\n        executeActions: executeActions,\n        executeExitActions: executeExitActions,\n        remove: remove\n      }\n\n    });\n\n    angular.extend(DSRule, {\n      load: load,\n      add: add\n    });\n\n    return DSRule;\n\n\n    function _loadDetails(ruleDescription) {\n      return apiService\n        .send({\n          method: 'Rules.GetRuleDetails',\n          params: {\n            ruleId: ruleDescription.id\n          }\n        });\n    }\n\n    function load() {\n      return apiService\n        .send({\n          method: 'Rules.GetRules'\n        })\n        .then(function(data) {\n          return $q.all(data.ruleDescriptions.map(function(ruleDescription) {\n            return _loadDetails(ruleDescription)\n              .then(function(data) {\n                DSRule.inject(data.rule);\n                return data.rule;\n              });\n          }));\n        })\n        .then(function(rules) {\n          return DSRule.getAll();\n        });\n    }\n\n    function add(rule) {\n      return apiService.send({\n        method: 'Rules.AddRule',\n        params: rule\n      });\n    }\n\n    /*\n     * Public method: executeActions()\n     */\n    function executeActions() {\n      /* jshint validthis: true */\n      var self = this;\n\n      return apiService.send({\n        method: 'Rules.ExecuteActions',\n        params: {\n          ruleId: self.id\n        }\n      });\n    }\n\n    /*\n     * Public method: executeExitActions()\n     */\n    function executeExitActions() {\n      /* jshint validthis: true */\n      var self = this;\n\n      return apiService.send({\n        method: 'Rules.ExecuteExitActions',\n        params: {\n          ruleId: self.id\n        }\n      });\n    }\n\n    /*\n     * Public method: remove()\n     */\n    function remove() {\n      /* jshint validthis: true */\n      var self = this;\n\n      return apiService.send({\n        method: 'Rules.RemoveRule',\n        params: {\n          ruleId: self.id\n        }\n      });\n    }\n\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSPlugin', DSPluginFactory)\n    .run(function(DSPlugin) {});\n\n  DSPluginFactory.$inject = ['$log', '$q', 'DS', 'apiService'];\n\n  function DSPluginFactory($log, $q, DS, apiService) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSPlugin = DS.defineResource({\n\n      // API configuration\n      endpoint: 'plugins',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'plugin',\n      relations: {},\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {}\n\n    });\n\n    angular.extend(DSPlugin, {\n      load: load\n    });\n\n    return DSPlugin;\n\n\n    function load() {\n      return apiService\n        .send({\n          method: 'Devices.GetPlugins'\n        })\n        .then(function(data) {\n          DSPlugin.inject(data.plugins);\n          return DSPlugin.getAll();\n        });\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSParamType', DSParamTypeFactory)\n    .run(function(DSParamType) {});\n\n  DSParamTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSParamTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSParamType = DS.defineResource({\n\n      // Model configuration\n      name: 'paramType',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId'\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {}\n\n    });\n\n    return DSParamType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('modelsHelper', modelsHelper);\n\n  modelsHelper.$inject = ['$log', '$q', 'DS', 'File', 'app'];\n\n  function modelsHelper($log, $q, DS, File, app) {\n\n    var modelsHelper = {\n      checkTemplateUrl: checkTemplateUrl,\n      setBasePath: setBasePath\n    };\n\n    return modelsHelper;\n\n\n    /*\n     * Private method: _getValue(guhType)\n     */\n    function _getValue(guhType) {\n      var type = (guhType.type === undefined) ? null : guhType.type;\n      var value;\n\n      switch(type) {\n        case 'Bool':\n          value = guhType.defaultValue || false;\n          break;\n        case 'Int':\n        case 'Uint':\n          value = guhType.defaultValue || 0;\n          break;\n        case 'Double':\n          value = guhType.defaultValue || 0.0;\n          break;\n        case 'Color':\n          value = guhType.defaultValue || '0,0,0';\n          break;\n        case 'String':\n          value = guhType.defaultValue || '';\n          break;\n        default:\n          value = guhType.defaultValue || undefined;\n          break;\n      }\n\n      return value;\n    }\n    \n\n    /*\n     * Public method: checkTemplateUrl(templateUrl)\n     */\n    function checkTemplateUrl(templateUrl) {\n      var pathElements = templateUrl.split('/');\n      var file = pathElements.pop();\n      var path = pathElements.join('/') + '/';\n\n      if(templateUrl !== undefined && templateUrl !== '') {\n        var fileExists = $q.when(File.checkFile(path, file))\n          .then(function(fileExists) {\n            if(fileExists) {\n              // $log.log('Template available', templateUrl);\n              return templateUrl;\n            } else {\n              // $log.warn('Template NOT available', templateUrl);\n              return path + 'template-not-available.html'; \n            }\n          });\n\n        return fileExists;\n      } else {\n        return path + 'template-not-defined.html';\n      }\n    }\n\n    /*\n     * Public method: setBasePath()\n     */\n    function setBasePath() {      \n      DS\n        .defaults\n        .basePath = app.apiUrl;\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSEventType', DSEventTypeFactory)\n    .run(function(DSEventType) {});\n\n  DSEventTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSEventTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSEventType = DS.defineResource({\n\n      // API configuration\n      endpoint: 'eventtypes',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'eventType',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId',\n            parent: true\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {\n        getParamDescriptor: getParamDescriptor\n      },\n\n      // Lifecycle hooks\n      afterInject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _addUiData(resource, attrs);\n          });\n        } else {\n          _addUiData(resource, attrs);\n        }\n      }\n\n    });\n\n    return DSEventType;\n\n\n    /*\n     * Private method: _addUiData(resource, attrs)\n     */\n    function _addUiData(resource, attrs) {\n      var paramTypes = attrs.paramTypes;\n      var phrase = 'When ' + attrs.name;\n\n      // Add phrase for moods\n      if(angular.isArray(paramTypes) && paramTypes.length === 0) {\n        attrs.phrase = phrase + ' is detected';\n      } else {\n        attrs.phrase = phrase + ' is detected and parameters are';\n      }\n    }\n\n\n    /*\n     * Public method: getParamDescriptors(paramType, value, operator)\n     */\n    function getParamDescriptor(paramType, value, operator) {\n      var paramDescriptor = {};\n\n      paramDescriptor = {\n        name: paramType.name,\n        operator: operator,\n        value: value\n      };\n\n      return paramDescriptor;\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDevice', DSDeviceFactory)\n    .run(function(DSDevice) {});\n\n  DSDeviceFactory.$inject = ['$log', '$q', 'DS', 'apiService'];\n\n  function DSDeviceFactory($log, $q, DS, apiService) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSDevice = DS.defineResource({\n\n      // API configuration\n      endpoint: 'devices',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'device',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId'\n          }\n        }\n\n        // Not working (error: \"Doh! You just changed the primary key of an object!\") because states are injected before the state primary keys are generated\n        // hasMany: {\n        //   state: {\n        //     localField: 'states',\n        //     foreignKey: 'deviceId'\n        //   }\n        // }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {\n        executeAction: executeAction,\n        remove: remove,\n        getDescription: getDescription,\n        getEventDescriptor: getEventDescriptor,\n        getStateDescriptor: getStateDescriptor,\n        getAction: getAction\n      },\n\n      // Lifecycle hooks\n      afterInject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _createStates(resource, attrs);\n          });\n        } else {\n          _createStates(resource, attrs);\n        }\n      },\n\n      afterEject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _removeStates(resource, attrs);\n          });\n        } else {\n          _removeStates(resource, attrs);\n        }\n      }\n\n    });\n\n    angular.extend(DSDevice, {\n      load: load,\n      add: add,\n      edit: edit,\n      pair: pair,\n      confirmPairing: confirmPairing\n    });\n\n    return DSDevice;\n    \n\n    /*\n     * Private method: _createStates(resource, attrs);\n     */\n    function _createStates(resource, attrs) {\n      var deviceId = attrs.id;\n      var states = attrs.states;\n\n      angular.forEach(states, function(state, index) {\n        state.deviceId = deviceId;\n\n        var stateInstance = DS.createInstance('state', state);\n        DS.inject('state', stateInstance);\n\n        if(angular.isUndefined(attrs.states)) {\n          attrs.states = [];\n        }\n        attrs.states[index] = DS.get('state', '' + deviceId + '_' + state.stateTypeId);\n      });\n    }\n\n    /*\n     * Private method: _removeStates(resource, attrs)\n     */\n    function _removeStates(resource, attrs) {\n      var deviceId = attrs.id;\n      var states = attrs.states;\n\n      angular.forEach(states, function(state, index) {\n        var ejectedItem = DS.eject('state', '' + deviceId + '_' + state.stateTypeId);\n      });\n    }\n\n\n    function load() {\n      return apiService\n        .send({\n          method: 'Devices.GetConfiguredDevices'\n        })\n        .then(function(data) {\n          DSDevice.inject(data.devices);\n          return DSDevice.getAll();\n        });\n    }\n\n    /*\n     * Public method: getDescription(delimiter)\n     */\n    function getDescription(delimiter) {\n      /* jshint validthis: true */\n      var self = this;\n      var vendorName = self.deviceClass.vendor.name;\n      var deviceClassName = self.deviceClass.name || '';\n\n      delimiter = delimiter || '-';\n\n      return (vendorName === deviceClassName) ? deviceClassName : (vendorName + delimiter + deviceClassName);\n    }\n\n    /*\n     * Public method: pair(deviceClassId, deviceDescriptorId, deviceParams, name)\n     */\n    function pair(deviceClassId, deviceDescriptorId, deviceParams, name) {\n      var params = {};\n\n      params.deviceClassId = deviceClassId || '';\n\n      if(angular.isDefined(deviceDescriptorId) && deviceDescriptorId !== '') {\n        params.deviceDescriptorId = deviceDescriptorId;\n      } else {\n        params.deviceParams = deviceParams || [];\n      }\n\n      if(angular.isDefined(name)) {\n        params.name = name;\n      }\n\n      return apiService.send({\n        method: 'Devices.PairDevice',\n        params: params\n      });\n    }\n\n    /*\n     * Public method: confirmPairing(pairingTransactionId, secret)\n     */\n    function confirmPairing(pairingTransactionId, secret) {\n      var params = {};\n      \n      params.pairingTransactionId = pairingTransactionId;\n\n      if(secret) {\n        params.secret = secret;\n      }\n\n      return apiService.send({\n        method: 'Devices.ConfirmPairing',\n        params: params\n      }); \n    }\n\n    /*\n     * Public method: add(deviceClassId, deviceDescriptorId, deviceParams, name)\n     */\n    function add(deviceClassId, deviceDescriptorId, deviceParams, name) {\n      var params = {};\n\n      // name\n      if(angular.isDefined(name) && name !== '') {\n        params.name = name;\n      }\n\n      // deviceClassId\n      if(angular.isDefined(deviceClassId) && deviceClassId  !== '') {\n        params.deviceClassId = deviceClassId;\n      }\n\n      // deviceDescriptorId or deviceParams\n      if(angular.isDefined(deviceDescriptorId) && deviceDescriptorId !== '') {\n        params.deviceDescriptorId = deviceDescriptorId;\n      } else if(angular.isDefined(deviceParams) && deviceParams !== []) {\n        params.deviceParams = deviceParams;\n      }\n\n      // Device gets inserted when notification \"Devices.DeviceAdded\" was received\n      return apiService.send({\n        method: 'Devices.AddConfiguredDevice',\n        params: params\n      });\n    }\n\n    /*\n     * Public method: edit(deviceId, deviceData)\n     */\n    function edit(deviceId, deviceData) {\n      var device = {};\n      deviceData = deviceData || {};\n\n      device.deviceDescriptorId = deviceData.id || '';\n\n      device.deviceParams = [];\n      angular.forEach(deviceData.deviceParamTypes, function(deviceParamType) {\n        var deviceParam = {};\n\n        deviceParam.name = deviceParamType.name;\n        deviceParam.value = deviceParamType.value;\n\n        device.deviceParams.push(deviceParam);\n      });\n\n      return DSDevice.update(deviceId, {device: device});\n    }\n\n    /*\n     * Public method: executeAction()\n     */\n    function executeAction(actionType, params) {\n      /* jshint validthis: true */\n      var self = this;\n      var jsonRpcParams = {\n        actionTypeId: actionType.id,\n        deviceId: self.id\n      };\n\n      if(angular.isDefined(params) && params !== {}) {\n        jsonRpcParams.params = params;\n      }\n\n      return apiService.send({\n        method: 'Actions.ExecuteAction',\n        params: jsonRpcParams\n      });\n    }\n\n    /*\n     * Public method: remove()\n     */\n    function remove(params) {\n      /* jshint validthis: true */\n      var self = this;\n      var jsonRpcParams = {\n        deviceId: self.id\n      };\n\n      if(angular.isDefined(params) && params !== {}) {\n        angular.forEach(params, function(value, key) {\n          jsonRpcParams[key] = value;\n        });\n      }\n\n      return apiService.send({\n        method: 'Devices.RemoveConfiguredDevice',\n        params: jsonRpcParams\n      });\n    }\n\n    /*\n     * Public method: getEventDescriptor(eventType, paramDescriptors)\n     */\n    function getEventDescriptor(eventType, paramDescriptors) {\n      /* jshint validthis: true */\n      var self = this;\n      var eventDescriptor = {};\n\n      eventDescriptor.deviceId = self.id;\n      eventDescriptor.eventTypeId = eventType.id;\n\n      if(angular.isDefined(paramDescriptors) && paramDescriptors.length > 0) {\n        eventDescriptor.paramDescriptors = paramDescriptors;\n      }\n\n      return eventDescriptor;     \n    }\n\n    /*\n     * Public method: getStateDescriptor(stateType, paramDescriptor)\n     */\n    function getStateDescriptor(stateType, paramDescriptor) {\n      /* jshint validthis: true */\n      var self = this;\n      var stateDescriptor = {};\n\n      stateDescriptor.deviceId = self.id;\n      stateDescriptor.operator = paramDescriptor.operator;\n      stateDescriptor.stateTypeId = stateType.id;\n      stateDescriptor.value = paramDescriptor.value;\n      \n      return stateDescriptor;\n    }\n\n\n    /*\n     * Public method: getAction(actionType, params)\n     */\n    function getAction(actionType, params) {\n      /* jshint validthis: true */\n      var self = this;\n      var action = {};\n      var ruleActionParams = [];\n\n      ruleActionParams = actionType.getRuleActionParams(params);\n      if(ruleActionParams.length > 0) {\n        action.ruleActionParams = ruleActionParams;\n      }\n\n      action.actionTypeId = actionType.id;\n      action.deviceId = self.id;\n\n      return action;\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDeviceClassStateType', DSDeviceClassStateTypeFactory)\n    .run(function(DSDeviceClassStateType) {});\n\n  DSDeviceClassStateTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSDeviceClassStateTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSDeviceClassStateType = DS.defineResource({\n\n      // Model configuration\n      name: 'deviceClassStateType',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId'\n          },\n          stateType: {\n            localField: 'stateType',\n            localKey: 'stateTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSDeviceClassStateType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDeviceClass', DSDeviceClassFactory)\n    .run(function(DSDeviceClass) {});\n\n  DSDeviceClassFactory.$inject = ['$log', '$q', 'DS', '_', 'apiService', 'modelsHelper', 'DSDeviceClassActionType', 'DSDeviceClassEventType', 'DSDeviceClassStateType'];\n\n  function DSDeviceClassFactory($log, $q, DS, _, apiService, modelsHelper, DSDeviceClassActionType, DSDeviceClassEventType, DSDeviceClassStateType) {\n    \n    var staticMethods = {};\n    var deviceClassActionTypesId = 0;\n    var deviceClassEventTypesId = 0;\n    var deviceClassStateTypesId = 0;\n\n    /*\n     * DataStore configuration\n     */\n    var DSDeviceClass = DS.defineResource({\n\n      // API configuration\n      endpoint: 'deviceclasses',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'deviceClass',\n      relations: {\n        belongsTo: {\n          vendor: {\n            localField: 'vendor',\n            localKey: 'vendorId',\n            // parent: true\n          }\n        },\n        hasMany: {\n          deviceClassActionType: {\n            localField: 'deviceClassActionTypes',\n            foreignKey: 'deviceClassId'\n          },\n          deviceClassEventType: {\n            localField: 'deviceClassEventTypes',\n            foreignKey: 'deviceClassId'\n          },\n          deviceClassStateType: {\n            localField: 'deviceClassStateTypes',\n            foreignKey: 'deviceClassId'\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {\n        templateUrl: ['name', _addUiTemplate]\n      },\n\n      // Instance methods\n      methods: {\n        discover: discover,\n        getCreateMethod: getCreateMethod,\n        getSetupMethod: getSetupMethod\n      },\n\n      // Lifecycle hooks\n      afterInject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _mapStates(resource, attrs);\n            _createDeviceClassActionsTypes(resource, attrs);\n          });\n        } else {\n          _mapStates(resource, attrs);\n          _createDeviceClassActionsTypes(resource, attrs);\n        }\n      }\n\n    });\n\n    DSDeviceClass.getAllActionTypes = function(deviceClassId) {\n      var deviceClassActionTypes = DSDeviceClassActionType.getAll();\n      var deviceClassActionTypesFiltered = deviceClassActionTypes.filter(function(deviceClassActionType) {\n        return deviceClassActionType.deviceClassId === deviceClassId;\n      });\n      var deviceClass = DS.get('deviceClass', deviceClassId);\n      var actionTypes = [];\n\n      angular.forEach(deviceClassActionTypesFiltered, function(deviceClassActionType) {\n        if(deviceClassActionType.deviceClassId === deviceClassId) {\n          var actionType = DS.get('actionType', deviceClassActionType.actionTypeId);\n          actionTypes.push(actionType);\n        }\n      });\n\n      return actionTypes;\n    };\n\n    DSDeviceClass.getAllEventTypes = function(deviceClassId) {\n      var deviceClassEventTypes = DSDeviceClassEventType.getAll();\n      var deviceClassEventTypesFiltered = deviceClassEventTypes.filter(function(deviceClassEventType) {\n        return deviceClassEventType.deviceClassId === deviceClassId;\n      });\n      var deviceClass = DS.get('deviceClass', deviceClassId);\n      var eventTypes = [];\n\n      angular.forEach(deviceClassEventTypesFiltered, function(deviceClassEventType) {\n        if(deviceClassEventType.deviceClassId === deviceClassId) {\n          var eventType = DS.get('eventType', deviceClassEventType.eventTypeId);\n          eventTypes.push(eventType);\n        }\n      });\n\n      return eventTypes;\n    };\n\n    DSDeviceClass.getAllStateTypes = function(deviceClassId) {\n      var deviceClassStateTypes = DSDeviceClassStateType.getAll();\n      var deviceClassStateTypesFiltered = deviceClassStateTypes.filter(function(deviceClassStateType) {\n        return deviceClassStateType.deviceClassId === deviceClassId;\n      });\n      var deviceClass = DS.get('deviceClass', deviceClassId);\n      var stateTypes = [];\n\n      angular.forEach(deviceClassStateTypesFiltered, function(deviceClassStateType) {\n        if(deviceClassStateType.deviceClassId === deviceClassId) {\n          var stateType = DS.get('stateType', deviceClassStateType.stateTypeId);\n          stateTypes.push(stateType);\n        }\n      });\n\n      return stateTypes;\n    };\n\n    angular.extend(DSDeviceClass, {\n      load: load\n    });\n\n    return DSDeviceClass;\n\n\n    function load() {\n      return apiService\n        .send({\n          method: 'Devices.GetSupportedDevices'\n        })\n        .then(function(data) {\n          DSDeviceClass.inject(data.deviceClasses);\n          return DSDeviceClass.getAll();\n        });\n    }\n\n\n    /*\n     * Private method: _getInputPath(name, filename)\n     */\n    function _getInputPath(name, filename) {\n      return 'app/containers/thing-details/device-class-templates/' + filename + '.html';\n    }\n\n    /*\n     * Private method: _addUiTemplate(name)\n     */\n    function _addUiTemplate(name) {\n      // Example: 'Elro Remote' => 'elro-remote'\n      var templateName = name\n        .toLowerCase()\n        .replace(/\\s/g, '-')\n        .replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, '');\n      var templateUrl = _getInputPath(name, 'device-class-' + templateName);\n\n      return modelsHelper.checkTemplateUrl(templateUrl);\n    }\n\n    /*\n     * Private method:_createDeviceClassActionsTypes()\n     */\n    function _createDeviceClassActionsTypes(resource, attrs) {\n      var deviceClassActionTypes = DS.getAll('deviceClassActionType');\n      var deviceClassEventTypes = DS.getAll('deviceClassEventType');\n      var deviceClassStateTypes = DS.getAll('deviceClassStateType');\n      var actionTypes = attrs.actionTypes;\n      var eventTypes = attrs.eventTypes;\n      var stateTypes = attrs.stateTypes;\n      var deviceClassId = attrs.id;\n\n      // ActionTypes\n      angular.forEach(actionTypes, function(actionType) {\n        // Create actionType\n        var actionTypeInstance = DS.createInstance('actionType', actionType);\n        DS.inject('actionType', actionTypeInstance);\n\n        // Filtered deviceClassActionTypes\n        var deviceClassActionTypesFiltered = deviceClassActionTypes.filter(function(deviceClassActionType) {\n          return deviceClassActionType.deviceClassId === deviceClassId && deviceClassActionType.actionTypeId === actionType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(deviceClassActionTypesFiltered) && deviceClassActionTypesFiltered.length === 0) {\n          // Create membership (deviceClass <-> actionType)\n          deviceClassActionTypesId = deviceClassActionTypesId + 1;\n          var deviceClassActionTypeInstance = DS.createInstance('deviceClassActionType', {\n            id: deviceClassActionTypesId,\n            deviceClassId: deviceClassId,\n            actionTypeId: actionType.id\n          });\n          DS.inject('deviceClassActionType', deviceClassActionTypeInstance);\n        }\n      });\n\n      // EventTypes\n      angular.forEach(eventTypes, function(eventType) {\n        // Create eventType\n        var eventTypeInstance = DS.createInstance('eventType', eventType);\n        DS.inject('eventType', eventTypeInstance);\n\n        // Filtered deviceClassEventTypes\n        var deviceClassEventTypesFiltered = deviceClassEventTypes.filter(function(deviceClassEventType) {\n          return deviceClassEventType.deviceClassId === deviceClassId && deviceClassEventType.eventTypeId === eventType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(deviceClassEventTypesFiltered) && deviceClassEventTypesFiltered.length === 0) {\n          // Create membership (deviceClass <-> eventType)\n          deviceClassEventTypesId = deviceClassEventTypesId + 1;\n          var deviceClassEventTypeInstance = DS.createInstance('deviceClassEventType', {\n            id: deviceClassEventTypesId,\n            deviceClassId: deviceClassId,\n            eventTypeId: eventType.id\n          });\n          DS.inject('deviceClassEventType', deviceClassEventTypeInstance);\n        }\n      });\n\n      // StateTypes\n      angular.forEach(stateTypes, function(stateType) {\n        // Create stateType\n        var stateTypeInstance = DS.createInstance('stateType', stateType);\n        DS.inject('stateType', stateTypeInstance);\n\n        // Filtered deviceClassStateTypes\n        var deviceClassStateTypesFiltered = deviceClassStateTypes.filter(function(deviceClassStateType) {\n          return deviceClassStateType.deviceClassId === deviceClassId && deviceClassStateType.stateTypeId === stateType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(deviceClassStateTypesFiltered) && deviceClassStateTypesFiltered.length === 0) {\n          // Create membership (deviceClass <-> actionType)\n          deviceClassStateTypesId = deviceClassStateTypesId + 1;\n          var deviceClassStateTypeInstance = DS.createInstance('deviceClassStateType', {\n            id: deviceClassStateTypesId,\n            deviceClassId: deviceClassId,\n            stateTypeId: stateType.id\n          });\n          DS.inject('deviceClassStateType', deviceClassStateTypeInstance);\n        }\n      });\n    }\n\n    /*\n     * Private method: _mapStates(resource, attrs)\n     */\n    function _mapStates(resource, attrs) {\n      var actionTypes = attrs.actionTypes;\n      var eventTypes = attrs.eventTypes;\n      var stateTypes = attrs.stateTypes;\n      // var stateIds = libs._.pluck(stateTypes, 'id');\n      var stateIds = _.pluck(stateTypes, 'id');\n\n      // Map actionTypes\n      angular.forEach(actionTypes, function(actionType) {\n        // Check if current actionType belongs to a stateType\n        if(_.contains(stateIds, actionType.id)) {\n          actionType.hasState = true;\n        } else {\n          actionType.hasState = false;\n        }\n      });\n\n      // Map eventTypes\n      angular.forEach(eventTypes, function(eventType) {\n        // Check if current eventType belongs to a stateType\n        if(_.contains(stateIds, eventType.id)) {\n          eventType.hasState = true;\n        } else {\n          eventType.hasState = false;\n        }\n      });\n    }\n\n\n    /*\n     * Public method: discover(discoveryParams)\n     */\n    function discover(discoveryParams) {\n      /* jshint validthis: true */\n      var self = this;\n\n      return apiService.send({\n        method: 'Devices.GetDiscoveredDevices',\n        params: {\n          deviceClassId: self.id,\n          discoveryParams: discoveryParams\n        }\n      });\n    }\n\n    /*\n     * Public method: getCreateMethod()\n     */\n    function getCreateMethod() {\n      /* jshint validthis: true */\n      var self = this;\n      var basePath = 'app/components/create-thing/templates/';\n      var createMethodData = null;\n\n      if(self.createMethods.indexOf('CreateMethodDiscovery') > -1) {\n        createMethodData = {\n          title: 'Discovery',\n          template: basePath + 'create-thing-discovery.html'\n        };\n      } else if(self.createMethods.indexOf('CreateMethodUser') > -1) {\n        createMethodData = {\n          title: 'User',\n          template: basePath + 'create-thing-user.html'\n        };\n      } else if(self.createMethods.indexOf('CreateMethodAuto') > -1) {\n        createMethodData = {\n          title: 'Auto',\n          template: null\n        };\n      } else {\n        $log.error('CreateMethod not implemented.');\n      }\n\n      return createMethodData;\n    }\n\n    /*\n     * Public method: getSetupMethod()\n     */\n    function getSetupMethod() {\n      /* jshint validthis: true */\n      var self = this;\n      var basePath = 'app/components/setup-thing/templates/';\n      var setupMethodData = {};\n\n      switch(self.setupMethod) {\n        case 'SetupMethodJustAdd':\n          setupMethodData = null;\n          break;\n        case 'SetupMethodDisplayPin':\n          setupMethodData = {\n            title: 'Display Pin',\n            template: basePath + 'setup-thing-display-pin.html'\n          };\n          break;\n        case 'SetupMethodEnterPin':\n          setupMethodData = {\n            title: 'Enter Pin',\n            template: basePath + 'setup-thing-enter-pin.html'\n          };\n          break;\n        case 'SetupMethodPushButton':\n          setupMethodData = {\n            title: 'Push Button',\n            template: basePath + 'setup-thing-push-button.html'\n          };\n          break;\n        default:\n          $log.error('SetupMethod not implemented.');\n          break;\n      }\n\n      return setupMethodData;\n    }\n\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDeviceClassEventType', DSDeviceClassEventTypeFactory)\n    .run(function(DSDeviceClassEventType) {});\n\n  DSDeviceClassEventTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSDeviceClassEventTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSDeviceClassEventType = DS.defineResource({\n\n      // Model configuration\n      name: 'deviceClassEventType',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId'\n          },\n          eventType: {\n            localField: 'eventType',\n            localKey: 'eventTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSDeviceClassEventType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDeviceClassActionType', DSDeviceClassActionTypeFactory)\n    .run(function(DSDeviceClassActionType) {});\n\n  DSDeviceClassActionTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSDeviceClassActionTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSDeviceClassActionType = DS.defineResource({\n\n      // Model configuration\n      name: 'deviceClassActionType',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId'\n          },\n          actionType: {\n            localField: 'actionType',\n            localKey: 'actionTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSDeviceClassActionType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSConnection', DSConnectionFactory)\n    .run(function(DSConnection) {});\n\n\n  DSConnectionFactory.$inject = ['$log', 'LocalForage', 'cloudWebsocketService'];\n\n  function DSConnectionFactory($log, LocalForage, cloudWebsocketService) {\n\n    LocalForage.localForageStore.registerAdapter('localForage', LocalForage.localForageAdapter, { default: true });\n\n    var tunnelCreated = false;\n\n    var DSConnection = LocalForage.localForageStore.defineResource({\n      name: 'connection',\n      relations: {\n        belongsTo: {\n          settings: {\n            localField: 'settings',\n            localKey: 'settingsId',\n            parent: true\n          }\n        }\n      }\n    });\n\n    angular.extend(DSConnection, {\n      getConnections: getConnections,\n      createTunnel: createTunnel,\n      isTunnelCreated: isTunnelCreated\n    });\n\n    return DSConnection;\n\n\n    /*\n     * Static method: createTunnel(connectionId)\n     */\n\n    function createTunnel(connectionId) {\n      if(connectionId) {\n        return cloudWebsocketService\n          .send({\n            method: 'Connection.CreateTunnel',\n            params: {\n              connectionId: connectionId\n            }\n          })\n          .then(function(tunnelData) {\n            tunnelCreated = true;\n\n            return DSConnection\n              .create({\n                id: tunnelData.tunnel.id,\n                activationTimeStamp: tunnelData.tunnel.activationTimeStamp,\n                clientConnection: tunnelData.tunnel.clientConnection,\n                // tunnelId: tunnelData.tunnel.id,\n                serverConnection: tunnelData.tunnel.serverConnection\n              })\n              .then(function(connection) {\n                return tunnelData.tunnel;\n              })\n              .catch(function(error) {\n                return error;\n              });\n          })\n          .catch(function(error) {\n            tunnelCreated = false;\n            return error;\n          });\n      } else {\n        $log.error('Parameter \"connectionId\" missing.');\n        tunnelCreated = false;\n      }\n    }\n\n    /*\n     * Static method: isTunnelCreated()\n     */\n\n    function isTunnelCreated() {\n      return tunnelCreated;\n    }\n\n    /*\n     * Static method: getConnections()\n     */\n\n    function getConnections() {\n      // $log.log('getConnections');\n\n      return cloudWebsocketService\n        .send({\n          method: 'Connection.GetConnections'\n        });\n    }\n\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSAuthentication', DSAuthenticationFactory)\n    .run(function(DSAuthentication) {});\n\n\n  DSAuthenticationFactory.$inject = ['$log', '$q', 'LocalForage', 'cloudWebsocketService'];\n  // DSAuthenticationFactory.$inject = ['$log', '$q', 'cloudService', 'LocalForage', 'apiService'];\n\n  function DSAuthenticationFactory($log, $q, LocalForage, cloudWebsocketService) {\n  // function DSAuthenticationFactory($log, $q, cloudService, LocalForage, apiService) {\n\n    LocalForage.localForageStore.registerAdapter('localForage', LocalForage.localForageAdapter, { default: true });\n\n    var cloudUserAuthenticated = false;\n    var connectionAuthenticated = false;\n\n    var DSAuthentication = LocalForage.localForageStore.defineResource({\n      name: 'authentication',\n      relations: {},\n      methods: {\n        isAuthenticated: isAuthenticated\n      }\n    });\n\n    angular.extend(DSAuthentication, {\n      // authenticateCloudUser: authenticateCloudUser,\n      authenticateConnection: authenticateConnection\n    });\n\n    return DSAuthentication;\n\n\n    /*\n     * Static method: authenticateCloudUser(username, password)\n     */\n\n    // function authenticateCloudUser(username, password) {\n    //   $log.log('DSAuthentication:factory.authenticateLocalUser', username, password);\n\n    //   // Fiware authentication\n    //   return cloudService\n    //     .login(username, password)\n    //     .then(function(response) {\n    //       if(angular.isDefined(response.data)) {\n    //         var data = response.data;\n\n    //         cloudUserAuthenticated = true;\n\n    //         return DSAuthentication.create({\n    //           id: 'cloudUser',\n    //           accessToken: data.access_token,\n    //           expiresIn: data.expires_in,\n    //           refreshToken: data.refresh_token,\n    //           tokenType: data.token_type\n    //         })\n    //         .then(function(response) {\n    //           return response;\n    //         })\n    //         .catch(function(error) {\n    //           return error;\n    //         });\n    //       } else {\n    //         return $q.reject('Field \"data\" missing in response.');\n    //       }\n    //     })\n    //     .catch(function(error) {\n    //       cloudUserAuthenticated = false;\n    //       return error;\n    //     });\n    // }\n\n    /*\n     * Static method: authenticateConnection(id, name, token, type)\n     */\n\n    function authenticateConnection(id, name, token, type) {\n      // $log.log('DSAuthentication:factory.authenticateConnection', id, name, token, type);\n      return cloudWebsocketService.send({\n        method: 'Authentication.Authenticate',\n        params: {\n          id: id,\n          name: name,\n          token: token,\n          type: type\n        }\n      })\n      .then(function(response) {\n        return response;\n\n        // if(angular.isDefined(response.connectionId)) {\n        //   connectionAuthenticated = true;\n\n        //   return DSAuthentication.create({\n        //     id: 'connection',\n        //     connectionId: id,\n        //     name: name,\n        //     token: token\n        //   })\n        //   .then(function(response) {\n        //     return response;\n        //   })\n        //   .catch(function(error) {\n        //     return error;\n        //   });\n        // } else {\n        //   return $q.reject('Field \"connectionId\" missing in response.');\n        // }\n      })\n      .catch(function(error) {\n        connectionAuthenticated = false;\n        return error;\n      });;\n    }\n\n\n    /*\n     * Public method: isLocalUserAuthenticated()\n     */\n\n    function isAuthenticated() {\n      // $log.log('isAuthenticated', this);\n\n      if(this.id === 'cloudUser') {\n        return cloudUserAuthenticated;  \n      }/* else if(this.id === 'connection') {\n        return connectionAuthenticated;\n      }*/ else {\n        return false;\n      }\n    }\n\n\n    /*\n     * Public method: isLocalUserAuthenticated()\n     */\n\n    // function isLocalUserAuthenticated() {\n\n    // }\n\n    /*\n     * Public method: isCloudUserAuthenticated()\n     */\n\n    // function isCloudUserAuthenticated() {\n\n    // }\n\n    /*\n     * Public method: isConnectionAuthenticated()\n     */\n\n    // function isConnectionAuthenticated() {\n\n    // }\n\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSActionType', DSActionTypeFactory)\n    .run(function(DSActionType) {});\n\n  DSActionTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSActionTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSActionType = DS.defineResource({\n\n      // API configuration\n      endpoint: 'actiontypes',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'actionType',\n      relations: {\n        hasMany: {\n          deviceClassActionType: {\n            localField: 'deviceClassActionTypes',\n            foreignKey: 'actionTypeId'\n          },\n        }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {\n        getParams: getParams,\n        getRuleActionParams: getRuleActionParams\n      },\n\n      // Lifecycle hooks\n      afterInject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _addUiData(resource, attrs);\n          });\n        } else {\n          _addUiData(resource, attrs);\n        }\n      }\n\n    });\n\n    return DSActionType;\n\n\n    /*\n     * Private method: _addUiData(resource, attrs)\n     */\n    function _addUiData(resource, attrs) {\n      var paramTypes = attrs.paramTypes;\n      \n      attrs.phrase = 'Execute \"' + attrs.name + '\"';\n\n      // Add phrase for moods\n      if(angular.isArray(paramTypes) && paramTypes.length > 0) {\n        attrs.phrase = attrs.phrase + ' with parameters';\n      }\n    }\n\n\n    /*\n     * Public method: getParams()\n     */\n    function getParams() {\n      /* jshint validthis: true */\n      var self = this;\n      var params = [];\n      var paramTypes = self.paramTypes;\n\n      angular.forEach(paramTypes, function(paramType) {\n        params.push({\n          name: paramType.name,\n          value: paramType.value\n        });\n      });\n\n      return params;\n    }\n\n    /*\n     * Public method: getRuleActionParams(params, actionParamType, eventParamType)\n     */\n    function getRuleActionParams(params, actionParamType, eventParamType) {\n      /* jshint validthis: true */\n      var self = this;\n      var ruleActionParams = [];\n\n      angular.forEach(params, function(param) {\n        if(actionParamType !== undefined && eventParamType !== undefined) {\n          if(param.name === actionParamType.name) {\n            ruleActionParams.push({\n              name: param.name,\n              eventParamName: eventParamType.name,\n              eventTypeId: eventParamType.eventDescriptor.eventTypeId\n            });\n          } else {\n            ruleActionParams.push({\n              name: param.name,\n              value: param.value\n            });\n          }\n        } else {\n          ruleActionParams.push({\n            name: param.name,\n            value: param.value\n          });\n        }\n      });\n\n      return ruleActionParams;\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.logging', [\n      'guh.logging.hooks'\n    ])\n    .config(config);\n\n  config.$inject = ['$provide'];\n\n  function config($provide) {\n    // Exceptions\n    // $provide.decorator('$exceptionHandler', ['$injector', '$delegate', 'Logging', function($injector, $delegate, Logging) {\n    //   if(!Logging.angularServiceEnhanced.$exceptionHandler) {\n    //     return $delegate;\n    //   }\n\n    //   return function(exception, cause) {\n    //     $delegate(exception, cause);\n    //   }\n    // }]);\n\n    // Logs\n    $provide.decorator('$log', ['$injector', '$delegate', 'guhLogging', function($injector, $delegate, guhLogging) {\n      var decorator = {\n        log: log,\n        info: info,\n        warn: warn,\n        error: error\n      };\n\n      return decorator;\n\n\n      function _applyCallbacks(logType, args) {\n        var logTypeData = guhLogging.getLogType(logType);\n\n        // Pre callbacks\n        angular.forEach(logTypeData.preCallbacks, function(preCallbackProvider) {\n          var preCallback = $injector.get(preCallbackProvider);\n          preCallback.call(preCallback, {\n            type: logType,\n            args: args\n          });\n        });\n\n        // Console\n        if(guhLogging.isEnhanced(logType)) {\n          $delegate[logType].apply($delegate, args);\n          guhLogging[logType].apply(null, args);\n        } else {\n          $delegate[logType].apply($delegate, args);\n        }\n\n        // Post callbacks\n        angular.forEach(logTypeData.postCallbacks, function(postCallbackProvider) {\n          var postCallback = $injector.get(postCallbackProvider);\n          postCallback.call(postCallback, {\n            type: logType,\n            args: args\n          });\n        });\n      }\n\n      function log() {\n        var args = arguments;\n        _applyCallbacks('log', args);\n      }\n\n      function info() {\n        var args = arguments;\n        _applyCallbacks('info', args);\n      }\n\n      function warn() {\n        var args = arguments;\n        _applyCallbacks('warn', args);\n      }\n\n      function error() {\n        var args = arguments;\n        _applyCallbacks('error', args);\n      }\n    }]);\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.logging')\n    .provider('guhLogging', Logging);\n\n  Logging.$inject = ['$injector'];\n\n  function Logging($injector) {\n    var _logTypes = {\n      log: {},\n      info: {},\n      warn: {},\n      error: {}\n    };\n\n    var _hooks = {\n      http: 'guhLoggingHttpHook',\n      broadcast: 'guhLoggingBroadcastHook',\n      websocket: null\n    };\n\n    var provider = {\n      $get: $get,\n      enhance: enhance,\n      before: before,\n      after: after,\n      decorate: decorate\n    };\n\n    return provider;\n\n\n    // function _getArrayFromString(string) {\n    //   if(!angular.isString(string)) {\n    //     return;\n    //   }\n    // }\n\n    function _addHooks(prePost, logTypes, hooks) {\n      try {\n        if(angular.isUndefined(logTypes) || logTypes === null || !angular.isString(logTypes)) {\n          throw 'Wrong argument type. The argument \"logTypes\" should be a comma seperated String.';\n        }\n        if(angular.isDefined(hooks) && hooks !== null && !angular.isString(hooks)) {\n          throw 'Wrong argument type. The argument \"hooks\" should be a comma seperated String.';\n        }\n      } catch(error) {\n        return error;\n      }\n\n      var logTypesArray = logTypes.replace(/\\s+/g, '').split(',');\n      var hooksArray = hooks.replace(/\\s+/g, '').split(',');\n      var logTypeCallbacks = [];\n\n      // Check hooks\n      var callback;\n      angular.forEach(hooksArray, function(hook) {\n        if(angular.isDefined(_hooks[hook]) && _hooks[hook] !== null) {\n          logTypeCallbacks.push(_hooks[hook]);\n        }\n      });\n\n      // Initialize all log types with preCallbacks = [] / postCallbacks = []\n      angular.forEach(_logTypes, function(_logType) {\n        _logType[prePost + 'Callbacks'] = [];\n      });\n\n      // Set defined callbacks for log types\n      angular.forEach(logTypesArray, function(logType) {\n        if(angular.isDefined(_logTypes[logType])) {\n          _logTypes[logType][prePost + 'Callbacks'] = logTypeCallbacks;\n        }\n      });\n    }\n\n    function _getEnhancedArguments(args) {\n      // console.log('args', args, angular.isObject(args), angular.isArray(args));\n\n      var argsArray = args ? [].slice.call(args) : args;\n\n      // console.log('argsArray', argsArray, argsArray.length, angular.isArray(argsArray), argsArray[0]);\n\n      if(argsArray.length === 1) {\n        return argsArray[0];\n      } else {\n        return args;\n      }\n    }\n\n    function _addTimestamp() {\n\n    }\n\n\n    function $get() {\n      var service = {\n        isEnhanced: isEnhanced,\n        log: log,\n        info: info,\n        warn: warn,\n        error: error,\n        getLogType: getLogType\n      };\n\n      return service;\n\n\n      function isEnhanced(logType) {\n        return (angular.isDefined(_logTypes[logType]) && angular.isDefined(_logTypes[logType].enhanced)) ? _logTypes[logType].enhanced : false;\n      }\n\n      function log() {\n        // var args = _getEnhancedArguments(arguments);\n        // console.log(arguments);\n      }\n\n      function info() {\n        // var args = _getEnhancedArguments(arguments);\n        // console.info(arguments);\n      }\n\n      function warn() {\n        // var args = _getEnhancedArguments(arguments);\n        // console.warn(arguments);\n      }\n\n      function error() {\n        // var args = _getEnhancedArguments(arguments);\n        // console.error(arguments);\n      }\n\n      function getLogType(logType) {\n        return _logTypes[logType];\n      }\n    }\n\n    function enhance(logTypes) {\n      try {\n        if(angular.isDefined(logTypes) && logTypes !== null && !angular.isString(logTypes)) {\n          throw 'Wrong argument type. The argument \"logTypes\" should be a comma seperated String.';\n        }\n      } catch(error) {\n        return error;\n      }\n\n      var logTypesArray = [];\n\n      // Set enhanced\n      if(angular.isString(logTypes)) {\n        logTypesArray = logTypes.replace(/\\s+/g, '').split(',');\n\n        // Initialize all log types with enhanced = false\n        angular.forEach(_logTypes, function(_logType) {\n          _logType.enhanced = false;\n        });\n\n        // Set defined enhanced values for log types\n        angular.forEach(logTypesArray, function(logType) {\n          if(angular.isDefined(_logTypes[logType])) {\n            _logTypes[logType].enhanced = true;\n          }\n        });\n      } else {\n        // If logTypes is undefined or null\n        // Initialize all log types with enhanced = true\n        angular.forEach(_logTypes, function(_logType) {\n          _logType.enhanced = true;\n        });\n      }\n    }\n\n    function before(logTypes, hooks) {\n      _addHooks('pre', logTypes, hooks);\n    }\n\n    function after(logTypes, hooks) {\n      _addHooks('post', logTypes, hooks);\n    }\n\n    function decorate(message) {\n\n    }\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.connection', [])\n    .config(config);\n\n  config.$inject = [];\n\n  function config() {}\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.connection')\n    .factory('websocketService', websocketService);\n\n  websocketService.$inject = ['$log', '$rootScope', '$q', '$timeout'];\n\n  function websocketService($log, $rootScope, $q, $timeout) {\n\n    var ws = null;\n    var connectionTimer;\n    var websocketService = {\n      close: close,\n      connect: connect,\n      reconnect: reconnect,\n      send: send,\n      onmessage: angular.noop\n    };\n\n    return websocketService;\n\n\n    function close() {\n      if(ws) {\n        ws.close();\n        ws = null;\n      }\n    }\n\n    function connect(url) {\n      if(ws) {\n        return;\n      }\n\n      if(angular.isUndefined(url)) {\n        $log.error('guh.api.websocketService:factory', 'Missing argument: url');\n      }\n\n      ws = new WebSocket(url);\n\n      // Timeout if connecting takes to long (can take up to 1 minute, with the timeout only 2 seconds)\n      connectionTimer = $timeout(function() {\n        ws.close();\n        ws = null;\n      }, 2000);\n\n      ws.onopen = function(event) {\n        if(connectionTimer) {\n          $timeout.cancel(connectionTimer);\n        }\n\n        $rootScope.$apply(function() {\n          $rootScope.$broadcast('WebsocketConnected', 'Successful connected to guh.');\n        });\n      };\n\n      ws.onclose = function(event) {\n        // Safari is not calling onerror but calls onclose with code = 1006\n        if(event.code === 1006) {\n          $rootScope.$apply(function() {\n            $rootScope.$broadcast('WebsocketConnectionError', 'There was an error connecting to guh.');\n          });\n        } else {\n          $rootScope.$apply(function() {\n            $rootScope.$broadcast('WebsocketConnectionLost', 'The app has lost the connection to guh. Please check if you are connected to your network and if guh is running correctly.');\n          });\n        }\n      };\n\n      ws.onerror = function(event) {\n        $rootScope.$apply(function() {\n          $rootScope.$broadcast('WebsocketConnectionError', 'There was an error connecting to guh.');\n        });\n\n        return event;\n      };\n\n      ws.onmessage = function(event) {\n        var response = angular.fromJson(event.data);\n\n        // $log.log('%cwebsocketService:onmessage', 'color: #da7469', response, websocketService);\n        websocketService.onmessage(response);\n      };\n    }\n\n    function reconnect(url) {\n      websocketService.close();\n      websocketService.connect(url);\n    }\n\n    function send(request) {\n      // $log.log('%cwebsocketService:send', 'color: #da7469', request);\n      ws.send(angular.toJson(request));\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.connection')\n    .factory('localWebsocketService', localWebsocketService);\n\n  localWebsocketService.$inject = ['$log', '$rootScope', '$q', 'cloudService', 'websocketService'];\n\n  function localWebsocketService($log, $rootScope, $q, cloudService, websocketService) {\n  \n    var currentRequestId = 0;\n    var callbacks = {};\n    var localWebsocketService = {\n      send: send,\n      onmessage: angular.noop,\n      getOnMessageCallback: _getOnMessageCallback\n    };\n\n    return localWebsocketService;\n\n\n    function _onmessage(response) {\n      // $log.log('%clocalWebsocket:_onmessage', 'color: #4f98da', response, callbacks);\n\n      localWebsocketService.onmessage(response);\n    }\n\n    function _getOnMessageCallback() {\n      return _onmessage;\n    }\n\n\n    function send(request) {\n      websocketService.send(request);\n    }\n\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.connection')\n    .factory('cloudWebsocketService', cloudWebsocketService);\n\n  cloudWebsocketService.$inject = ['$log', '$rootScope', '$q', 'cloudService', 'websocketService'];\n\n  function cloudWebsocketService($log, $rootScope, $q, cloudService, websocketService) {\n  \n    var currentRequestId = 0;\n    var callbacks = {};\n    var cloudWebsocketService = {\n      send: send,\n      onmessage: angular.noop,\n      getOnMessageCallback: _getOnMessageCallback\n    };\n\n    return cloudWebsocketService;\n\n\n    function _getRequestId() {\n      currentRequestId = currentRequestId + 1;\n\n      if(currentRequestId > 10000) {\n        currentRequestId = 0;\n      }\n\n      return currentRequestId;\n    }\n\n    function _onmessage(response) {\n      // $log.log('%ccloudWebsocket:_onmessage', 'color: #bada55', response, callbacks);\n\n      if(angular.isDefined(response.notification)) {\n        _notificationHandler(response);\n      } else if(angular.isDefined(response.server) &&\n                angular.isDefined(response.version)) {\n        $rootScope.$apply(function() {\n          $rootScope.$broadcast('InitialHandshake', response);\n        });\n      } else if(angular.isDefined(response.id)) {\n        _responseHandler(response);\n      }\n    }\n\n    function _getOnMessageCallback() {\n      return _onmessage;\n    }\n\n    function _notificationHandler(response) {\n      var notification = response.notification;\n\n      switch(notification) {\n        // TODO: Connection.ConnectionAdded\n\n\n        // TODO: Connection.ConnectionRemoved\n\n\n        case 'Connection.DataReceived':\n          if(angular.isDefined(response.params) &&\n            angular.isDefined(response.params.tunnelId) &&\n            response.params.tunnelId === cloudService.getTunnelId() &&\n            angular.isDefined(response.params.data)) {\n            cloudWebsocketService.onmessage(response.params.data);\n          }\n          break;\n\n        // TODO: Connection.TunnelAdded\n\n\n        // TODO: Connection.TunnelRemoved\n\n\n        default:\n          // $log.warn('cloudWebsocket:notification', 'Notification not handled.', response);\n      }\n    }\n\n    function _responseHandler(response) {\n      if(response.status === 'success') {\n        if(angular.isDefined(response.params.authenticationError) &&\n           response.params.authenticationError !== 'AuthenticationErrorSuccess') {\n          $rootScope.$apply(callbacks[response.id].callback.reject(response.params));\n        } else if(angular.isDefined(response.params.connectionError) &&\n                  response.params.connectionError !== 'ConnectionErrorNoError') {\n          $rootScope.$apply(callbacks[response.id].callback.reject(response.params));\n        }/* else if(angular.isDefined(response.params.authenticationError) ||\n                  angular.isDefined(response.params.connectionError)) {\n          // Response has to be from cloud (only responses with authenticationError or connectionError are coming from cloud)\n          $rootScope.$apply(callbacks[response.id].callback.resolve(response.params));\n        } */else {\n          $rootScope.$apply(callbacks[response.id].callback.resolve(response.params));\n        }\n      } else {\n        $rootScope.$apply(callbacks[response.id].callback.reject(response));\n      }\n\n      delete callbacks[response.id];\n    }\n\n\n    function send(request) {\n      var defer = $q.defer();\n      var requestId = _getRequestId();\n      var tunnelId = cloudService.getTunnelId();\n\n      callbacks[requestId] = {\n        time: new Date(),\n        callback: defer,\n        request: request\n      };\n\n      // var callbackString = '';\n      // angular.forEach(callbacks, function(value, key) {\n      //   callbackString = callbackString + key + '-' + value.request.method + ':';\n      // });\n      // $log.log('%ccloudWebsocketService:send', 'color: #bada55', requestId, request, callbackString);\n\n      if(angular.isDefined(tunnelId)) {\n        request = {\n          id: requestId,\n          method: 'Connection.SendData',\n          params: {\n            data: request,\n            tunnelId: tunnelId\n          }\n        };\n      } else {\n        request.id = requestId;\n      }\n\n      websocketService.send(request);\n\n      return defer.promise;\n    }\n\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.cloud', [])\n    .config(config);\n\n  config.$inject = [];\n\n  function config() {}\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.cloud')\n    .provider('cloudService', Cloud);\n\n  Cloud.$inject = [];\n\n  function Cloud() {\n    \n    var grantType = 'password';\n\n    var provider = {\n      ssl: true,\n      baseUrl: '',\n      loginUrl: '/auth/login',\n      signupUrl: '/auth/signup',\n      $get: $get\n    };\n\n    return provider;\n\n\n    /*\n     * Provider method: $get()\n     */\n\n    $get.$inject = ['$log', '$q', '$http'];\n\n    function $get($log, $q, $http) {\n      var authenticated = false;\n      var tunnelId;\n      var service = {\n        login: login,\n        logout: logout,\n        isAuthenticated: isAuthenticated,\n        getTunnelId: getTunnelId,\n        setTunnelId: setTunnelId,\n      };\n\n      return service;\n\n\n      /*\n       * Public method: login(username, password)\n       */\n      function login(username, password) {\n        var protocol = provider.ssl ? 'https' : 'http';\n\n        return $http({\n          method: 'POST',\n          url: protocol + '://' + provider.baseUrl + provider.loginUrl,\n          // http://stackoverflow.com/questions/24710503/how-do-i-post-urlencoded-form-data-with-http-in-angularjs\n          headers: {\n            'Content-Type' : 'application/x-www-form-urlencoded'\n          },\n          transformRequest: function(obj) {\n            var str = [];\n\n            for(var p in obj) {\n              str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\n            }\n            \n            return str.join('&');\n          },\n          data: {\n            'grant_type': grantType,\n            'username': username,\n            'password': password\n          }\n        }).then(function success(response) {\n          if(angular.isDefined(response.data)) {\n            var data = response.data;\n\n            authenticated = true;\n\n            // $log.log('success', response);\n\n            return data;\n          } else {\n            return $q.reject('Field \"data\" missing in response.');\n          }\n        }, function failure(error) {\n          authenticated = false;\n\n          return error;\n        });\n      }\n\n      /*\n       * Public method: logout()\n       */\n      function logout() {\n        $log.log('Cloud.logout');\n      }\n\n      /*\n       * Public method: isAuthenticated()\n       */\n      function isAuthenticated() {\n        return authenticated;\n      }\n\n      /*\n       * Public method: getTunnelId()\n       */\n      function getTunnelId() {\n        // $log.log('getTunnelId', tunnelId);\n        return tunnelId;\n      }\n\n      /*\n       * Public method: setTunnelId(id)\n       */\n      function setTunnelId(id) {\n        tunnelId = id;\n        // $log.log('setTunnelId', tunnelId);\n      }\n    }\n\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.api', [])\n    .config(config);\n\n  config.$inject = [];\n\n  function config() {}\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.api')\n    .provider('apiService', apiService);\n\n  // apiService.$inject = ['$log', '$rootScope', '$q', 'cloudService', 'localWebsocketService', 'cloudWebsocketService', 'DS'];\n  apiService.$inject = [];\n\n  // function apiService($log, $rootScope, $q, cloudService, localWebsocketService, cloudWebsocketService, DS) {\n  function apiService() {\n\n    var apiServiceProvider = {\n      connectionType: 'localWebsocketService',\n      $get: $get\n    };\n\n    return apiServiceProvider;\n\n\n    $get.$inject = ['$log', '$rootScope', '$q', 'cloudService', 'localWebsocketService', 'cloudWebsocketService', 'websocketService', 'DS'];\n\n    function $get($log, $rootScope, $q, cloudService, localWebsocketService, cloudWebsocketService, websocketService, DS) {\n      var currentRequestId = 0;\n      var callbacks = {};\n      var apiService = {\n        send: send\n      };\n\n      // Set callbacks\n      if(apiServiceProvider.connectionType === 'cloudWebsocket') {\n        cloudWebsocketService.onmessage = _onmessage;\n        websocketService.onmessage = cloudWebsocketService.getOnMessageCallback();\n      } else {\n        localWebsocketService.onmessage = _onmessage;\n      }\n\n      return apiService;\n\n\n      function _getRequestId() {\n        currentRequestId = currentRequestId + 1;\n\n        if(currentRequestId > 10000) {\n          currentRequestId = 0;\n        }\n\n        return currentRequestId;\n      }\n\n      function _onmessage(response) {\n        // $log.log('%capiService:_onmessage', 'color: #4f98da', response, callbacks);\n\n        if(angular.isDefined(response.notification)) {\n          _notificationHandler(response);\n        } else if(angular.isDefined(response.server) &&\n                  angular.isDefined(response.version)) {\n          $rootScope.$apply(function() {\n            $rootScope.$broadcast('InitialHandshake', response);\n          });\n        } else if(angular.isDefined(response.id)) {\n          _responseHandler(response);\n        }\n      }\n\n      function _notificationHandler(response) {\n        var notification = response.notification;\n\n        switch(notification) {\n          // TODO: Cloud.ConnectionStatusChanged\n\n          \n          // TODO: Configuration.BasicConfigurationChanged\n\n          \n          // TODO: Configuration.TcpServerConfigurationChanged\n\n          \n          // TODO: Configuration.WebServerConfigurationChanged\n\n          \n          // TODO: Configuration.WebSocketServerConfigurationChanged\n\n\n          // Devices.DeviceAdded\n          case 'Devices.DeviceAdded':\n            var deviceId = response.params.device.id;\n            var device = DS.get('device', deviceId);\n\n            if(angular.isUndefined(device)) {\n              var injectedItem = DS.inject('device', response.params.device);\n\n              if(DS.is('device', injectedItem)) {\n                $rootScope.$broadcast('ReloadView', injectedItem.deviceClass.name + ' was added.');\n              }          \n            }\n            break;\n\n\n          // TODO: Devices.DeviceChanged\n\n\n          // Devices.DeviceRemoved\n          case 'Devices.DeviceRemoved':\n            var deviceId = response.params.deviceId;\n            var ejectedItem = DS.eject('device', deviceId);\n\n            if(angular.isDefined(ejectedItem)) {\n              $rootScope.$broadcast('ReloadView', 'Device was removed.', ejectedItem);\n            }\n            break;\n\n\n          // Devices.StateChanged\n          case 'Devices.StateChanged':\n            var deviceId = response.params.deviceId;\n            var stateTypeId = response.params.stateTypeId;\n            var value = response.params.value;\n\n            DS.inject('state', {\n              id: '' + deviceId + '_' + stateTypeId,\n              deviceId: deviceId,\n              stateTypeId: stateTypeId,\n              value: value\n            });\n            break;\n\n\n          // TODO: Events.EventTriggered\n\n\n          // TODO: Logging.LogDatabaseUpdated\n\n\n          // TODO: Logging.LogEntryAdded\n\n\n          // TODO: Rules.RuleActiveChanged\n\n\n          // Rules.RuleAdded\n          case 'Rules.RuleAdded':\n            var ruleId = response.params.rule.id;\n            var rule = DS.get('rule', ruleId);\n\n            if(angular.isUndefined(rule)) {\n              var injectedItem = DS.inject('rule', response.params.rule);\n\n              if(DS.is('rule', injectedItem)) {\n                $rootScope.$broadcast('ReloadView', injectedItem.name + ' was added.');\n              }\n            }\n            break;\n\n\n          // Rules.ConfigurationChanged\n          case 'Rules.ConfigurationChanged':\n            var rule = response.params.rule;\n            var injectedItem = DS.inject('rule', rule);\n\n            if(DS.is('rule', injectedItem)) {\n              $rootScope.$broadcast('ReloadView', injectedItem.name + ' was updated.');\n            }\n            break;\n\n          // Rules.RuleRemoved\n          case 'Rules.RuleRemoved':\n            var ruleId = response.params.ruleId;\n            var ejectedItem = DS.eject('rule', ruleId);\n\n            if(angular.isDefined(ejectedItem)) {\n              $rootScope.$broadcast('ReloadView', 'Rule was removed.');\n            }\n            break;\n\n          default:\n            $log.warn('apiService:notification', 'Notification \"' + notification + '\" not handled.', response);\n        }\n      }\n\n      function _responseHandler(response) {      \n        if(response.status === 'success') {\n          if(angular.isDefined(response.params.deviceError) && response.params.deviceError !== 'DeviceErrorNoError') {\n            $rootScope.$apply(callbacks[response.id].callback.reject(response.params));\n          } else if(angular.isDefined(response.params.loggingError) && response.params.loggingError !== 'LoggingErrorNoError') {\n            $rootScope.$apply(callbacks[response.id].callback.reject(response.params));\n          } else if(angular.isDefined(response.params.ruleError) && response.params.ruleError !== 'RuleErrorNoError') {\n            $rootScope.$apply(callbacks[response.id].callback.reject(response.params));\n          } else if(angular.isDefined(response.params.connectionError) && response.params.connectionError !== 'ConnectionErrorNoError') {\n            $rootScope.$apply(callbacks[response.id].callback.reject(response.params));\n          } else {\n            $rootScope.$apply(callbacks[response.id].callback.resolve(response.params));\n          }\n        } else {\n          $rootScope.$apply(callbacks[response.id].callback.reject(response));\n        }\n\n        delete callbacks[response.id];\n      }\n\n\n      function send(request) {\n        var defer = $q.defer();\n        var requestId = _getRequestId();\n        var tunnelId = cloudService.getTunnelId();\n\n        request.id = requestId;\n\n        callbacks[requestId] = {\n          time: new Date(),\n          callback: defer,\n          request: request\n        };\n\n        // var callbackString = '';\n        // angular.forEach(callbacks, function(value, key) {\n        //   callbackString = callbackString + key + '-' + value.request.method + ':';\n        // });\n        // $log.log('%capiService:send', 'color: #4f98da', requestId, request, callbackString);\n\n        if(angular.isDefined(tunnelId)) {\n          cloudWebsocketService.send(request);\n        } else {\n          localWebsocketService.send(request);\n        }\n\n        return defer.promise;\n      }\n    }\n\n  }\n\n}());"],"sourceRoot":"/source/"}