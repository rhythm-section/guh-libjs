{"version":3,"sources":["logging/hooks/logging-hooks-module.js","logging/hooks/logging-http-hook-provider.js","logging/hooks/logging-broadcast-hook-provider.js","vendor/vendor-module.js","vendor/lodash-vendor-service.js","vendor/localforage-vendor-service.js","models/models-module.js","models/vendor-model-service.js","models/state-type-model-service.js","models/state-model-service.js","models/settings-model-service.js","models/server-info-model-service.js","models/rule-model-service.js","models/plugin-param-type-model-service.js","models/plugin-model-service.js","models/param-type-model-service.js","models/models-helper.js","models/event-type-param-type-model-service.js","models/event-type-model-service.js","models/device-model-service.js","models/device-class-state-type-model-service.js","models/device-class-param-type-model-service.js","models/device-class-model-service.js","models/device-class-event-type-service.js","models/device-class-discovery-param-type-model-service.js","models/device-class-action-type-model-service.js","models/connection-model-service.js","models/action-type-param-type-model-service.js","models/action-type-model-service.js","utils/utils-module.js","utils/local-forage-service.js","utils/file-utils-service.js","api/api-module.js","api/websocket-api-service.js","logging/logging-module.js","logging/logging-provider.js"],"names":["config","angular","module","$inject","guhLoggingHttpHook","_checkParameter","parameterName","parameter","isDefined","isString","error","_setServerAddress","locationServer","locationProtocol","locationHost","locationPort","$get","$http","logObject","post","data","then","response","console","log","payload","setProtocol","protocol","setHostname","hostname","setPort","port","getServer","location","provider","guhLoggingBroadcastHook","$rootScope","type","argsArray","args","slice","call","isArray","length","$broadcast","context","lodashService","$log","$window","_","factory","localforageService","localforage","DSProvider","defaults","debug","DSVendorFactory","$q","DS","websocketService","load","send","method","DSVendor","inject","vendors","getAll","defineResource","endpoint","idAttribute","name","relations","hasMany","deviceClass","localField","foreignKey","computed","methods","extend","run","DSStateTypeFactory","_addUiData","resource","attrs","regExp","searchUnit","replace","phrase","test","DSStateType","deviceClassStateType","afterInject","arrayOfAttrs","forEach","DSStateFactory","deviceId","params","states","values","map","state","DSState","belongsTo","device","localKey","parent","hasOne","stateType","compoundId","stateTypeId","value","DSSettingsFactory","LocalForage","localForageStore","registerAdapter","localForageAdapter","default","DSSettings","serverInfo","connection","DSServerInfoFactory","ServerInfo","settings","DSServerInfo","DSRuleFactory","_loadDetails","ruleDescription","ruleId","id","all","ruleDescriptions","DSRule","rule","rules","add","executeActions","self","this","executeExitActions","remove","DSPluginParamTypeFactory","DSPluginParamType","plugin","paramType","DSPluginFactory","_createPluginParamTypes","pluginParamTypes","paramTypes","pluginId","paramTypeInstance","createInstance","pluginParamTypesFiltered","filter","pluginParamType","paramTypeId","pluginParamTypesId","pluginParamTypeInstance","DSPlugin","plugins","DSParamTypeFactory","DSParamType","deviceClassDiscoveryParamType","deviceClassParamType","actionTypeParamType","eventTypeParamType","modelsHelper","File","app","checkTemplateUrl","templateUrl","pathElements","split","file","pop","path","join","undefined","fileExists","when","checkFile","setBasePath","basePath","apiUrl","DSEventTypeParamTypeFactory","DSEventTypeParamType","eventType","DSEventTypeFactory","_createEventTypeParamTypes","eventTypeParamTypes","eventTypeId","eventTypeParamTypesFiltered","eventTypeParamTypesId","eventTypeParamTypeInstance","getParamDescriptor","operator","paramDescriptor","DSEventType","DSDeviceFactory","_createStates","index","stateInstance","isUndefined","get","_removeStates","eject","DSDevice","devices","getDescription","delimiter","vendorName","vendor","deviceClassName","pair","deviceClassId","deviceDescriptorId","deviceParams","confirmPairing","pairingTransactionId","secret","edit","jsonRpcParams","reconfigure","deviceData","executeAction","actionType","actionTypeId","key","getEventDescriptor","paramDescriptors","eventDescriptor","getStateDescriptor","stateDescriptor","getAction","action","ruleActionParams","getRuleActionParams","afterEject","DSDeviceClassStateTypeFactory","DSDeviceClassStateType","DSDeviceClassParamTypeFactory","DSDeviceClassParamType","DSDeviceClassFactory","DSDeviceClassActionType","DSDeviceClassEventType","DSDeviceClass","deviceClasses","_getInputPath","filename","_addUiTemplate","templateName","toLowerCase","_createDeviceClassParamTypes","deviceClassDiscoveryParamTypes","deviceClassParamTypes","deviceClassActionTypes","deviceClassEventTypes","deviceClassStateTypes","discoveryParamTypes","actionTypes","eventTypes","stateTypes","discoveryParamType","discoveryParamTypeInstance","deviceClassDiscoveryParamTypesFiltered","deviceClassDiscoveryParamTypesId","deviceClassDiscoveryParamTypeInstance","deviceClassParamTypesFiltered","deviceClassParamTypesId","deviceClassParamTypeInstance","actionTypeInstance","deviceClassActionTypesFiltered","deviceClassActionType","deviceClassActionTypesId","deviceClassActionTypeInstance","eventTypeInstance","deviceClassEventTypesFiltered","deviceClassEventType","deviceClassEventTypesId","deviceClassEventTypeInstance","stateTypeInstance","deviceClassStateTypesFiltered","deviceClassStateTypesId","deviceClassStateTypeInstance","_mapStates","stateIds","pluck","contains","hasState","discover","discoveryParams","getCreateMethod","createMethodData","createMethods","indexOf","title","template","getSetupMethod","setupMethodData","setupMethod","getAllActionTypes","push","getAllEventTypes","getAllStateTypes","DSDeviceClassEventTypeFactory","DSDeviceClassDiscoveryParamTypeFactory","DSDeviceClassDiscoveryParamType","DSDeviceClassActionTypeFactory","DSConnectionFactory","Connection","DSConnection","DSActionTypeParamTypeFactory","DSActionTypeParamType","DSActionTypeFactory","_createActionTypeParamTypes","actionTypeParamTypes","actionTypeParamTypesFiltered","actionTypeParamTypesId","actionTypeParamTypeInstance","getParams","actionParamType","eventParamType","param","eventParamName","DSActionType","DSLocalForageAdapter","JSData","FileFactory","$templateCache","cacheObject","$timeout","_getRequestId","currentRequestId","close","ws","connect","url","WebSocket","connectionTimer","onopen","event","cancel","$apply","onclose","code","onerror","onmessage","message","fromJson","notification","injectedItem","is","ejectedItem","status","deviceError","callbacks","callback","reject","loggingError","ruleError","resolve","reconnect","request","defer","requestId","time","Date","toJson","promise","$provide","decorator","$injector","$delegate","guhLogging","_applyCallbacks","logType","logTypeData","getLogType","preCallbacks","preCallbackProvider","preCallback","isEnhanced","apply","postCallbacks","postCallbackProvider","postCallback","arguments","info","warn","Logging","_addHooks","prePost","logTypes","hooks","logTypesArray","hooksArray","logTypeCallbacks","hook","_hooks","_logTypes","_logType","enhanced","service","enhance","before","after","decorate","http","broadcast","websocket"],"mappings":"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","file":"guh-libjs.min.js","sourcesContent":["/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.logging.hooks', [])\n    .config(config);\n\n  config.$inject = [];\n\n  function config() {}\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.logging.hooks')\n    .provider('guhLoggingHttpHook', guhLoggingHttpHook);\n\n  function guhLoggingHttpHook() {\n    // Variables\n    var locationProtocol = location.protocol;\n    var locationHost = location.hostname;\n    var locationPort = location.port;\n    var locationServer = locationProtocol + '//' + locationHost + ':' + locationPort;\n\n\n    var provider = {\n      // Provider methods (needed)\n      $get: ['$http', $get],\n\n      // Other methods\n      getServer: getServer,\n      setProtocol: setProtocol,\n      setHostname: setHostname,\n      setPort: setPort\n    };\n\n    return provider;\n\n\n    function _checkParameter(parameterName, parameter) {\n      try {\n        if(!angular.isDefined(parameter) || parameter === null) {\n          throw 'The parameter ' + parameterName + ' has to be defined.';\n        } else if(!angular.isString(parameter)) {\n          throw 'The value of ' + parameterName + ' has to be a string.';\n        }\n      } catch(error) {\n        return;\n      }\n    }\n\n    function _setServerAddress() {\n      locationServer = locationProtocol + '//' + locationHost + ':' + locationPort;\n    }\n\n\n    function $get($http) {\n      return function(logObject) {\n        $http\n          .post(locationServer, {\n            data: logObject\n          })\n          .then(function(response) {\n            console.log('Data successfully sent.', {\n              payload: logObject,\n              response: response\n            });\n          })\n          .catch(function(error) {\n            console.log('Data not sent.', {\n              payload: logObject,\n              error: error\n            })\n          });\n      }\n\n      // console.log('$get', $http);\n\n      // var service = {\n      //   // Variables\n      //   protocol: locationProtocol,\n      //   host: locationHost,\n      //   port: locationPort,\n      //   server: locationServer,\n\n      //   // Methods\n      //   addToQueue: addToQueue\n      // };\n\n      // return service;\n\n\n      // function addToQueue($http) {\n      //   console.log('addToQueue', $http);\n      // }\n    }\n\n    function setProtocol(protocol) {\n      _checkParameter('protocol', protocol);\n      locationProtocol = protocol;\n      _setServerAddress();\n    }\n\n    function setHostname(hostname) {\n      _checkParameter('hostname', hostname);\n      locationHost = hostname;\n      _setServerAddress();\n    }\n\n    function setPort(port) {\n      _checkParameter('port', port);\n      locationPort = port;\n      _setServerAddress();\n    }\n\n    function getServer() {\n      return locationServer;\n    }\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.logging.hooks')\n    .provider('guhLoggingBroadcastHook', guhLoggingBroadcastHook);\n\n  function guhLoggingBroadcastHook() {\n\n    var provider = {\n      // Provider methods (needed)\n      $get: ['$rootScope', $get]\n    };\n\n    return provider;\n\n\n    function $get($rootScope) {\n      return function(logObject) {\n        var type = logObject.type ? logObject.type : null;\n        var argsArray = logObject.args ? [].slice.call(logObject.args) : null;\n\n        if(angular.isArray(argsArray)) {\n          switch(argsArray.length) {\n            case 1:\n              if(!angular.isString(argsArray[0])) {\n                $rootScope.$broadcast('notification', {\n                  type: type,\n                  args: argsArray[0]\n                });\n              }\n              break;\n            case 2:\n              $rootScope.$broadcast('notification', {\n                type: type,\n                context: argsArray[0],\n                args: argsArray[1]\n              });\n              break;\n            default:\n              console.log('Wrong number of arguments.', logObject.type, logObject.args, argsArray.length);\n          }\n        }\n      }\n    }\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.vendor', [])\n    .config(config);\n\n  config.$inject = [];\n\n  function config() {}\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.vendor')\n    .factory('_', lodashService);\n\n  lodashService.$inject = ['$log', '$window'];\n\n  function lodashService($log, $window) {\n\n    if(!$window._) {\n      $log.error('guh.vendor.lodashService:factory', '_ is not defined on window object');\n    }\n\n    return $window._;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.vendor')\n    .factory('localforage', localforageService);\n\n  localforageService.$inject = ['$log', '$window'];\n\n  function localforageService($log, $window) {\n\n    if(!$window.localforage) {\n      $log.error('guh.vendor.localforageService:factory', 'localforage is not defined on window object');\n    }\n\n    return $window.localforage;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models', [\n      // Datastore\n      'js-data'\n    ])\n    .config(config);\n\n  config.$inject = ['DSProvider'];\n\n  function config(DSProvider) {\n    DSProvider\n      .defaults\n      .debug = false;\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSVendor', DSVendorFactory)\n    .run(function(DSVendor) {});\n\n  DSVendorFactory.$inject = ['$log', '$q', 'DS', 'websocketService'];\n\n  function DSVendorFactory($log, $q, DS, websocketService) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSVendor = DS.defineResource({\n\n      // API configuration\n      endpoint: 'vendors',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'vendor',\n      relations: {\n        hasMany: {\n          deviceClass: {\n            localField: 'deviceClasses',\n            foreignKey: 'vendorId'\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {}\n\n    });\n\n    angular.extend(DSVendor, {\n      load: load\n    });\n\n    return DSVendor;\n\n\n    function load() {\n      return websocketService\n        .send({\n          method: 'Devices.GetSupportedVendors'\n        })\n        .then(function(data) {\n          DSVendor.inject(data.vendors);\n          return DSVendor.getAll();\n        });\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSStateType', DSStateTypeFactory)\n    .run(function(DSStateType) {});\n\n  DSStateTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSStateTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSStateType = DS.defineResource({\n\n      // API configuration\n      endpoint: 'statetypes',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'stateType',\n      relations: {\n        hasMany: {\n          deviceClassStateType: {\n            localField: 'deviceClassStateTypes',\n            foreignKey: 'stateTypeId'\n          },\n        }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {},\n\n      // Lifecycle hooks\n      afterInject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _addUiData(resource, attrs);\n          });\n        } else {\n          _addUiData(resource, attrs);\n        }\n      }\n\n    });\n\n    return DSStateType;\n\n\n    /*\n     * Private method: _addUiData(resource, attrs)\n     */\n    function _addUiData(resource, attrs) {\n      var regExp = /\\s\\[([^)]+)\\]/;                 // Value inside brackets []\n      var searchUnit = name.replace(regExp, '');    // Get value inside brackets\n      var phrase = attrs.name;\n\n      // If name contains the unit in brackets []\n      if(regExp.test(name)) {\n        phrase = searchUnit;\n      }\n\n      // phrase\n      attrs.phrase = 'When value of ' + phrase;\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSState', DSStateFactory)\n    .run(function(DSState) {});\n\n  DSStateFactory.$inject = ['$log', '$q', 'DS', 'websocketService'];\n\n  function DSStateFactory($log, $q, DS, websocketService) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSState = DS.defineResource({\n\n      // API configuration\n      endpoint: 'states',\n\n      // Model configuration\n      // idAttribute: 'stateTypeId',\n      idAttribute: 'compoundId',\n      name: 'state',\n      relations: {\n        belongsTo: {\n          device: {\n            localField: 'device',\n            localKey: 'deviceId',\n            parent: true\n          }\n        },\n        hasOne: {\n          stateType: {\n            localField: 'stateType',\n            localKey: 'stateTypeId'\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {\n        compoundId: ['deviceId', 'stateTypeId', 'value', function (deviceId, stateTypeId, value) {\n          return '' + deviceId + '_' + stateTypeId;\n        }]\n      },\n\n      // Instance methods\n      methods: {}\n\n    });\n\n    angular.extend(DSState, {\n      load: load\n    });\n\n    return DSState;\n\n\n    function load(deviceId) {\n      return websocketService\n        .send({\n          method: 'Devices.GetStateValues',\n          params: {\n            deviceId: deviceId\n          }\n        })\n        .then(function(data) {\n          var states = data.values.map(function(state) {\n            state.deviceId = deviceId;\n            return state;\n          });\n          DSState.inject(states);\n          return DSState.getAll();\n        });\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSSettings', DSSettingsFactory)\n    .run(function(DSSettings) {});\n\n\n  DSSettingsFactory.$inject = ['$log', 'LocalForage'];\n\n  function DSSettingsFactory($log, LocalForage) {\n\n    LocalForage.localForageStore.registerAdapter('localForage', LocalForage.localForageAdapter, { default: true });\n\n    var DSSettings = LocalForage.localForageStore.defineResource({\n      name: 'settings',\n      relations: {\n        hasOne: {\n          serverInfo: {\n            localField: 'serverInfo',\n            foreignKey: 'settingsId'\n          }\n        },\n        hasMany: {\n          connection: {\n            localField: 'connections',\n            foreignKey: 'settingsId'\n          }\n        }\n      }\n    });\n\n    return DSSettings;\n\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSServerInfo', DSServerInfoFactory)\n    .run(function(DSServerInfo) {});\n\n\n  DSServerInfoFactory.$inject = ['$log', 'LocalForage'];\n\n  function DSServerInfoFactory($log, LocalForage) {\n\n    LocalForage.localForageStore.registerAdapter('localForage', LocalForage.localForageAdapter, { default: true });\n\n    var ServerInfo = LocalForage.localForageStore.defineResource({\n      name: 'serverInfo',\n      relations: {\n        belongsTo: {\n          settings: {\n            localField: 'settings',\n            foreignKey: 'settingsId',\n            parent: true\n          }\n        }\n      }\n    });\n\n    return ServerInfo;\n\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSRule', DSRuleFactory)\n    .run(function(DSRule) {});\n\n  DSRuleFactory.$inject = ['$log', '$q', 'DS', 'websocketService'];\n\n  function DSRuleFactory($log, $q, DS, websocketService) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSRule = DS.defineResource({\n\n      // API configuration\n      endpoint: 'rules',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'rule',\n      relations: {},\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {\n        // API\n        executeActions: executeActions,\n        executeExitActions: executeExitActions,\n        remove: remove\n      }\n\n    });\n\n    angular.extend(DSRule, {\n      load: load,\n      add: add\n    });\n\n    return DSRule;\n\n\n    function _loadDetails(ruleDescription) {\n      return websocketService\n        .send({\n          method: 'Rules.GetRuleDetails',\n          params: {\n            ruleId: ruleDescription.id\n          }\n        });\n    }\n\n    function load() {\n      return websocketService\n        .send({\n          method: 'Rules.GetRules'\n        })\n        .then(function(data) {\n          return $q.all(data.ruleDescriptions.map(function(ruleDescription) {\n            return _loadDetails(ruleDescription)\n              .then(function(data) {\n                DSRule.inject(data.rule);\n                return data.rule;\n              });\n          }));\n        })\n        .then(function(rules) {\n          return DSRule.getAll();\n        });\n    }\n\n    function add(rule) {\n      return websocketService.send({\n        method: 'Rules.AddRule',\n        params: rule\n      });\n    }\n\n    /*\n     * Public method: executeActions()\n     */\n    function executeActions() {\n      /* jshint validthis: true */\n      var self = this;\n\n      return websocketService.send({\n        method: 'Rules.ExecuteActions',\n        params: {\n          ruleId: self.id\n        }\n      });\n    }\n\n    /*\n     * Public method: executeExitActions()\n     */\n    function executeExitActions() {\n      /* jshint validthis: true */\n      var self = this;\n\n      return websocketService.send({\n        method: 'Rules.ExecuteExitActions',\n        params: {\n          ruleId: self.id\n        }\n      });\n    }\n\n    /*\n     * Public method: remove()\n     */\n    function remove() {\n      /* jshint validthis: true */\n      var self = this;\n\n      return websocketService.send({\n        method: 'Rules.RemoveRule',\n        params: {\n          ruleId: self.id\n        }\n      });\n    }\n\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSPluginParamType', DSPluginParamTypeFactory)\n    .run(function(DSPluginParamType) {});\n\n  DSPluginParamTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSPluginParamTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSPluginParamType = DS.defineResource({\n\n      // Model configuration\n      name: 'pluginParamType',\n      relations: {\n        belongsTo: {\n          plugin: {\n            localField: 'plugin',\n            localKey: 'pluginId'\n          },\n          paramType: {\n            localField: 'paramType',\n            localKey: 'paramTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSPluginParamType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSPlugin', DSPluginFactory)\n    .run(function(DSPlugin) {});\n\n  DSPluginFactory.$inject = ['$log', '$q', 'DS', 'websocketService'];\n\n  function DSPluginFactory($log, $q, DS, websocketService) {\n    \n    var staticMethods = {};\n    var pluginParamTypesId = 0;\n\n    /*\n     * DataStore configuration\n     */\n    var DSPlugin = DS.defineResource({\n\n      // API configuration\n      endpoint: 'plugins',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'plugin',\n      relations: {\n        hasMany: {\n          pluginParamType: {\n            localField: 'pluginParamTypes',\n            foreignKey: 'pluginId'\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {},\n\n      // Lifecycle hooks\n      afterInject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _createPluginParamTypes(resource, attrs);\n          });\n        } else {\n          _createPluginParamTypes(resource, attrs);\n        }\n      }\n\n    });\n\n    angular.extend(DSPlugin, {\n      load: load\n    });\n\n    return DSPlugin;\n\n\n    /*\n     * Private method: _createPluginParamTypes()\n     */\n    function _createPluginParamTypes(resource, attrs) {\n      var pluginParamTypes = DS.getAll('pluginParamType');\n      var paramTypes = attrs.paramTypes;\n      var pluginId = attrs.id;\n\n\n      // ParamTypes\n      angular.forEach(paramTypes, function(paramType) {\n        // Create paramType\n        var paramTypeInstance = DS.createInstance('paramType', paramType);\n        DS.inject('paramType', paramTypeInstance);\n\n        // Filtered actionTypeParamTypes\n        var pluginParamTypesFiltered = pluginParamTypes.filter(function(pluginParamType) {\n          return pluginParamType.pluginId === pluginId && pluginParamType.paramTypeId === paramType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(pluginParamTypesFiltered) && pluginParamTypesFiltered.length === 0) {\n          // Create membership (plugin <-> paramType)\n          pluginParamTypesId = pluginParamTypesId + 1;\n          var pluginParamTypeInstance = DS.createInstance('pluginParamType', {\n            id: pluginParamTypesId,\n            pluginId: pluginId,\n            paramTypeId: paramType.id\n          });\n          DS.inject('pluginParamType', pluginParamTypeInstance);\n        }\n      });\n    }\n\n\n    function load() {\n      return websocketService\n        .send({\n          method: 'Devices.GetPlugins'\n        })\n        .then(function(data) {\n          DSPlugin.inject(data.plugins);\n          return DSPlugin.getAll();\n        });\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSParamType', DSParamTypeFactory)\n    .run(function(DSParamType) {});\n\n  DSParamTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSParamTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSParamType = DS.defineResource({\n\n      // Model configuration\n      name: 'paramType',\n      relations: {\n        hasMany: {\n          deviceClassDiscoveryParamType: {\n            localField: 'deviceClassDiscoveryParamTypes',\n            foreignKey: 'paramTypeId'\n          },\n          deviceClassParamType: {\n            localField: 'deviceClassParamTypes',\n            foreignKey: 'paramTypeId'\n          },\n          actionTypeParamType: {\n            localField: 'actionTypeParamTypes',\n            foreignKey: 'paramTypeId'\n          },\n          eventTypeParamType: {\n            localField: 'eventTypeParamTypes',\n            foreignKey: 'paramTypeId'\n          },\n          pluginParamType: {\n            localField: 'pluginParamTypes',\n            foreignKey: 'paramTypeId'\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {}\n\n    });\n\n    return DSParamType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('modelsHelper', modelsHelper);\n\n  modelsHelper.$inject = ['$log', '$q', 'DS', 'File', 'app'];\n\n  function modelsHelper($log, $q, DS, File, app) {\n\n    var modelsHelper = {\n      checkTemplateUrl: checkTemplateUrl,\n      setBasePath: setBasePath\n    };\n\n    return modelsHelper;\n\n\n    /*\n     * Private method: _getValue(guhType)\n     */\n    function _getValue(guhType) {\n      var type = (guhType.type === undefined) ? null : guhType.type;\n      var value;\n\n      switch(type) {\n        case 'Bool':\n          value = guhType.defaultValue || false;\n          break;\n        case 'Int':\n        case 'Uint':\n          value = guhType.defaultValue || 0;\n          break;\n        case 'Double':\n          value = guhType.defaultValue || 0.0;\n          break;\n        case 'Color':\n          value = guhType.defaultValue || '0,0,0';\n          break;\n        case 'String':\n          value = guhType.defaultValue || '';\n          break;\n        default:\n          value = guhType.defaultValue || undefined;\n          break;\n      }\n\n      return value;\n    }\n    \n\n    /*\n     * Public method: checkTemplateUrl(templateUrl)\n     */\n    function checkTemplateUrl(templateUrl) {\n      var pathElements = templateUrl.split('/');\n      var file = pathElements.pop();\n      var path = pathElements.join('/') + '/';\n\n      if(templateUrl !== undefined && templateUrl !== '') {\n        var fileExists = $q.when(File.checkFile(path, file))\n          .then(function(fileExists) {\n            if(fileExists) {\n              // $log.log('Template available', templateUrl);\n              return templateUrl;\n            } else {\n              // $log.warn('Template NOT available', templateUrl);\n              return path + 'template-not-available.html'; \n            }\n          });\n\n        return fileExists;\n      } else {\n        return path + 'template-not-defined.html';\n      }\n    }\n\n    /*\n     * Public method: setBasePath()\n     */\n    function setBasePath() {      \n      DS\n        .defaults\n        .basePath = app.apiUrl;\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSEventTypeParamType', DSEventTypeParamTypeFactory)\n    .run(function(DSEventTypeParamType) {});\n\n  DSEventTypeParamTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSEventTypeParamTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSEventTypeParamType = DS.defineResource({\n\n      // Model configuration\n      name: 'eventTypeParamType',\n      relations: {\n        belongsTo: {\n          eventType: {\n            localField: 'eventType',\n            localKey: 'eventTypeId'\n          },\n          paramType: {\n            localField: 'paramType',\n            localKey: 'paramTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSEventTypeParamType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSEventType', DSEventTypeFactory)\n    .run(function(DSEventType) {});\n\n  DSEventTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSEventTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n    var eventTypeParamTypesId = 0;\n\n    /*\n     * DataStore configuration\n     */\n    var DSEventType = DS.defineResource({\n\n      // API configuration\n      endpoint: 'eventtypes',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'eventType',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId',\n            parent: true\n          }\n        },\n        hasMany: {\n          eventTypeParamType: {\n            localField: 'eventTypeParamTypes',\n            foreignKey: 'eventTypeId'\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {\n        getParamDescriptor: getParamDescriptor\n      },\n\n      // Lifecycle hooks\n      afterInject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _addUiData(resource, attrs);\n            _createEventTypeParamTypes(resource, attrs);\n          });\n        } else {\n          _addUiData(resource, attrs);\n          _createEventTypeParamTypes(resource, attrs);\n        }\n      }\n\n    });\n\n    return DSEventType;\n\n\n    /*\n     * Private method: _addUiData(resource, attrs)\n     */\n    function _addUiData(resource, attrs) {\n      var paramTypes = attrs.paramTypes;\n      var phrase = 'When ' + attrs.name;\n\n      // Add phrase for moods\n      if(angular.isArray(paramTypes) && paramTypes.length === 0) {\n        attrs.phrase = phrase + ' is detected';\n      } else {\n        attrs.phrase = phrase + ' is detected and parameters are';\n      }\n    }\n\n    /*\n     * Private method:_createEventTypeParamTypes()\n     */\n    function _createEventTypeParamTypes(resource, attrs) {\n      var eventTypeParamTypes = DS.getAll('eventTypeParamType');\n      var paramTypes = attrs.paramTypes;\n      var eventTypeId = attrs.id;\n\n\n      // ParamTypes\n      angular.forEach(paramTypes, function(paramType) {\n        // Create paramType\n        var paramTypeInstance = DS.createInstance('paramType', paramType);\n        DS.inject('paramType', paramTypeInstance);\n\n        // Filtered eventTypeParamTypes\n        var eventTypeParamTypesFiltered = eventTypeParamTypes.filter(function(eventTypeParamType) {\n          return eventTypeParamType.eventTypeId === eventTypeId && eventTypeParamType.paramTypeId === paramType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(eventTypeParamTypesFiltered) && eventTypeParamTypesFiltered.length === 0) {\n          // Create membership (deviceClass <-> paramType)\n          eventTypeParamTypesId = eventTypeParamTypesId + 1;\n          var eventTypeParamTypeInstance = DS.createInstance('eventTypeParamType', {\n            id: eventTypeParamTypesId,\n            eventTypeId: eventTypeId,\n            paramTypeId: paramType.id\n          });\n          DS.inject('eventTypeParamType', eventTypeParamTypeInstance);\n        }\n      });\n    }\n\n\n    /*\n     * Public method: getParamDescriptors(paramType, value, operator)\n     */\n    function getParamDescriptor(paramType, value, operator) {\n      var paramDescriptor = {};\n\n      paramDescriptor = {\n        name: paramType.name,\n        operator: operator,\n        value: value\n      };\n\n      return paramDescriptor;\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDevice', DSDeviceFactory)\n    .run(function(DSDevice) {});\n\n  DSDeviceFactory.$inject = ['$log', '$q', 'DS', 'websocketService'];\n\n  function DSDeviceFactory($log, $q, DS, websocketService) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSDevice = DS.defineResource({\n\n      // API configuration\n      endpoint: 'devices',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'device',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId'\n          }\n        }\n\n        // Not working (error: \"Doh! You just changed the primary key of an object!\") because states are injected before the state primary keys are generated\n        // hasMany: {\n        //   state: {\n        //     localField: 'states',\n        //     foreignKey: 'deviceId'\n        //   }\n        // }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {\n        edit: edit,\n        executeAction: executeAction,\n        remove: remove,\n        getDescription: getDescription,\n        getEventDescriptor: getEventDescriptor,\n        getStateDescriptor: getStateDescriptor,\n        getAction: getAction\n      },\n\n      // Lifecycle hooks\n      afterInject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _createStates(resource, attrs);\n          });\n        } else {\n          _createStates(resource, attrs);\n        }\n      },\n\n      afterEject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _removeStates(resource, attrs);\n          });\n        } else {\n          _removeStates(resource, attrs);\n        }\n      }\n\n    });\n\n    angular.extend(DSDevice, {\n      load: load,\n      add: add,\n      reconfigure: reconfigure,\n      pair: pair,\n      confirmPairing: confirmPairing\n    });\n\n    return DSDevice;\n    \n\n    /*\n     * Private method: _createStates(resource, attrs);\n     */\n    function _createStates(resource, attrs) {\n      var deviceId = attrs.id;\n      var states = attrs.states;\n\n      angular.forEach(states, function(state, index) {\n        state.deviceId = deviceId;\n\n        var stateInstance = DS.createInstance('state', state);\n        DS.inject('state', stateInstance);\n\n        if(angular.isUndefined(attrs.states)) {\n          attrs.states = [];\n        }\n        attrs.states[index] = DS.get('state', '' + deviceId + '_' + state.stateTypeId);\n      });\n    }\n\n    /*\n     * Private method: _removeStates(resource, attrs)\n     */\n    function _removeStates(resource, attrs) {\n      var deviceId = attrs.id;\n      var states = attrs.states;\n\n      angular.forEach(states, function(state, index) {\n        var ejectedItem = DS.eject('state', '' + deviceId + '_' + state.stateTypeId);\n      });\n    }\n\n\n    function load() {\n      return websocketService\n        .send({\n          method: 'Devices.GetConfiguredDevices'\n        })\n        .then(function(data) {\n          DSDevice.inject(data.devices);\n          return DSDevice.getAll();\n        });\n    }\n\n    /*\n     * Public method: getDescription(delimiter)\n     */\n    function getDescription(delimiter) {\n      /* jshint validthis: true */\n      var self = this;\n      var vendorName = self.deviceClass.vendor.name;\n      var deviceClassName = self.deviceClass.name || '';\n\n      delimiter = delimiter || '-';\n\n      return (vendorName === deviceClassName) ? deviceClassName : (vendorName + delimiter + deviceClassName);\n    }\n\n    /*\n     * Public method: pair(deviceClassId, deviceDescriptorId, deviceParams, name)\n     */\n    function pair(deviceClassId, deviceDescriptorId, deviceParams, name) {\n      var params = {};\n\n      params.deviceClassId = deviceClassId || '';\n\n      if(angular.isDefined(deviceDescriptorId) && deviceDescriptorId !== '') {\n        params.deviceDescriptorId = deviceDescriptorId;\n      } else {\n        params.deviceParams = deviceParams || [];\n      }\n\n      if(angular.isDefined(name)) {\n        params.name = name;\n      }\n\n      return websocketService.send({\n        method: 'Devices.PairDevice',\n        params: params\n      });\n    }\n\n    /*\n     * Public method: confirmPairing(pairingTransactionId, secret)\n     */\n    function confirmPairing(pairingTransactionId, secret) {\n      var params = {};\n      \n      params.pairingTransactionId = pairingTransactionId;\n\n      if(secret) {\n        params.secret = secret;\n      }\n\n      return websocketService.send({\n        method: 'Devices.ConfirmPairing',\n        params: params\n      }); \n    }\n\n    /*\n     * Public method: add(deviceClassId, deviceDescriptorId, deviceParams, name)\n     */\n    function add(deviceClassId, deviceDescriptorId, deviceParams, name) {\n      var params = {};\n\n      // name\n      if(angular.isDefined(name) && name !== '') {\n        params.name = name;\n      }\n\n      // deviceClassId\n      if(angular.isDefined(deviceClassId) && deviceClassId  !== '') {\n        params.deviceClassId = deviceClassId;\n      }\n\n      // deviceDescriptorId or deviceParams\n      if(angular.isDefined(deviceDescriptorId) && deviceDescriptorId !== '') {\n        params.deviceDescriptorId = deviceDescriptorId;\n      } else if(angular.isDefined(deviceParams) && deviceParams !== []) {\n        params.deviceParams = deviceParams;\n      }\n\n      // Device gets inserted when notification \"Devices.DeviceAdded\" was received\n      return websocketService.send({\n        method: 'Devices.AddConfiguredDevice',\n        params: params\n      });\n    }\n\n    /*\n     * Public method: edit(deviceId, name)\n     */\n    function edit(deviceId, name) {\n      /* jshint validthis: true */\n      var self = this;\n      var jsonRpcParams = {\n        deviceId: self.id,\n        name: name\n      };\n\n      return websocketService.send({\n        method: 'Devices.EditDevice',\n        params: jsonRpcParams\n      });\n    }\n\n    /*\n     * Public method: reconfigure(deviceId, deviceData)\n     */\n    function reconfigure(deviceId, deviceData) {\n      // var device = {};\n      // deviceData = deviceData || {};\n\n      // device.deviceDescriptorId = deviceData.id || '';\n\n      // device.deviceParams = [];\n      // angular.forEach(deviceData.deviceParamTypes, function(deviceParamType) {\n      //   var deviceParam = {};\n\n      //   deviceParam.name = deviceParamType.name;\n      //   deviceParam.value = deviceParamType.value;\n\n      //   device.deviceParams.push(deviceParam);\n      // });\n\n      // return DSDevice.update(deviceId, {device: device});\n    }\n\n    /*\n     * Public method: executeAction()\n     */\n    function executeAction(actionType, params) {\n      /* jshint validthis: true */\n      var self = this;\n      var jsonRpcParams = {\n        actionTypeId: actionType.id,\n        deviceId: self.id\n      };\n\n      if(angular.isDefined(params) && params !== {}) {\n        jsonRpcParams.params = params;\n      }\n\n      return websocketService.send({\n        method: 'Actions.ExecuteAction',\n        params: jsonRpcParams\n      });\n    }\n\n    /*\n     * Public method: remove()\n     */\n    function remove(params) {\n      /* jshint validthis: true */\n      var self = this;\n      var jsonRpcParams = {\n        deviceId: self.id\n      };\n\n      if(angular.isDefined(params) && params !== {}) {\n        angular.forEach(params, function(value, key) {\n          jsonRpcParams[key] = value;\n        });\n      }\n\n      return websocketService.send({\n        method: 'Devices.RemoveConfiguredDevice',\n        params: jsonRpcParams\n      });\n    }\n\n    /*\n     * Public method: getEventDescriptor(eventType, paramDescriptors)\n     */\n    function getEventDescriptor(eventType, paramDescriptors) {\n      /* jshint validthis: true */\n      var self = this;\n      var eventDescriptor = {};\n\n      eventDescriptor.deviceId = self.id;\n      eventDescriptor.eventTypeId = eventType.id;\n\n      if(angular.isDefined(paramDescriptors) && paramDescriptors.length > 0) {\n        eventDescriptor.paramDescriptors = paramDescriptors;\n      }\n\n      return eventDescriptor;     \n    }\n\n    /*\n     * Public method: getStateDescriptor(stateType, paramDescriptor)\n     */\n    function getStateDescriptor(stateType, paramDescriptor) {\n      /* jshint validthis: true */\n      var self = this;\n      var stateDescriptor = {};\n\n      stateDescriptor.deviceId = self.id;\n      stateDescriptor.operator = paramDescriptor.operator;\n      stateDescriptor.stateTypeId = stateType.id;\n      stateDescriptor.value = paramDescriptor.value;\n      \n      return stateDescriptor;\n    }\n\n\n    /*\n     * Public method: getAction(actionType, params)\n     */\n    function getAction(actionType, params) {\n      /* jshint validthis: true */\n      var self = this;\n      var action = {};\n      var ruleActionParams = [];\n\n      ruleActionParams = actionType.getRuleActionParams(params);\n      if(ruleActionParams.length > 0) {\n        action.ruleActionParams = ruleActionParams;\n      }\n\n      action.actionTypeId = actionType.id;\n      action.deviceId = self.id;\n\n      return action;\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDeviceClassStateType', DSDeviceClassStateTypeFactory)\n    .run(function(DSDeviceClassStateType) {});\n\n  DSDeviceClassStateTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSDeviceClassStateTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSDeviceClassStateType = DS.defineResource({\n\n      // Model configuration\n      name: 'deviceClassStateType',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId'\n          },\n          stateType: {\n            localField: 'stateType',\n            localKey: 'stateTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSDeviceClassStateType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDeviceClassParamType', DSDeviceClassParamTypeFactory)\n    .run(function(DSDeviceClassParamType) {});\n\n  DSDeviceClassParamTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSDeviceClassParamTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSDeviceClassParamType = DS.defineResource({\n\n      // Model configuration\n      name: 'deviceClassParamType',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId'\n          },\n          paramType: {\n            localField: 'paramType',\n            localKey: 'paramTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSDeviceClassParamType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDeviceClass', DSDeviceClassFactory)\n    .run(function(DSDeviceClass) {});\n\n  DSDeviceClassFactory.$inject = ['$log', '$q', 'DS', '_', 'websocketService', 'modelsHelper', 'DSDeviceClassParamType', 'DSDeviceClassActionType', 'DSDeviceClassEventType', 'DSDeviceClassStateType'];\n\n  function DSDeviceClassFactory($log, $q, DS, _, websocketService, modelsHelper, DSDeviceClassParamType, DSDeviceClassActionType, DSDeviceClassEventType, DSDeviceClassStateType) {\n    \n    var staticMethods = {};\n    var deviceClassDiscoveryParamTypesId = 0;\n    var deviceClassParamTypesId = 0;\n    var deviceClassActionTypesId = 0;\n    var deviceClassEventTypesId = 0;\n    var deviceClassStateTypesId = 0;\n\n    /*\n     * DataStore configuration\n     */\n    var DSDeviceClass = DS.defineResource({\n\n      // API configuration\n      endpoint: 'deviceclasses',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'deviceClass',\n      relations: {\n        belongsTo: {\n          vendor: {\n            localField: 'vendor',\n            localKey: 'vendorId',\n            // parent: true\n          }\n        },\n        hasMany: {\n          deviceClassDiscoveryParamType: {\n            localField: 'deviceClassDiscoveryParamTypes',\n            foreignKey: 'deviceClassId'\n          },\n          deviceClassParamType: {\n            localField: 'deviceClassParamTypes',\n            foreignKey: 'deviceClassId'\n          },\n          deviceClassActionType: {\n            localField: 'deviceClassActionTypes',\n            foreignKey: 'deviceClassId'\n          },\n          deviceClassEventType: {\n            localField: 'deviceClassEventTypes',\n            foreignKey: 'deviceClassId'\n          },\n          deviceClassStateType: {\n            localField: 'deviceClassStateTypes',\n            foreignKey: 'deviceClassId'\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {\n        templateUrl: ['name', _addUiTemplate]\n      },\n\n      // Instance methods\n      methods: {\n        discover: discover,\n        getCreateMethod: getCreateMethod,\n        getSetupMethod: getSetupMethod\n      },\n\n      // Lifecycle hooks\n      afterInject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _mapStates(resource, attrs);\n            _createDeviceClassParamTypes(resource, attrs);\n          });\n        } else {\n          _mapStates(resource, attrs);\n          _createDeviceClassParamTypes(resource, attrs);\n        }\n      }\n\n    });\n\n    DSDeviceClass.getAllActionTypes = function(deviceClassId) {\n      var deviceClassActionTypes = DSDeviceClassActionType.getAll();\n      var deviceClassActionTypesFiltered = deviceClassActionTypes.filter(function(deviceClassActionType) {\n        return deviceClassActionType.deviceClassId === deviceClassId;\n      });\n      var deviceClass = DS.get('deviceClass', deviceClassId);\n      var actionTypes = [];\n\n      angular.forEach(deviceClassActionTypesFiltered, function(deviceClassActionType) {\n        if(deviceClassActionType.deviceClassId === deviceClassId) {\n          var actionType = DS.get('actionType', deviceClassActionType.actionTypeId);\n          actionTypes.push(actionType);\n        }\n      });\n\n      return actionTypes;\n    };\n\n    DSDeviceClass.getAllEventTypes = function(deviceClassId) {\n      var deviceClassEventTypes = DSDeviceClassEventType.getAll();\n      var deviceClassEventTypesFiltered = deviceClassEventTypes.filter(function(deviceClassEventType) {\n        return deviceClassEventType.deviceClassId === deviceClassId;\n      });\n      var deviceClass = DS.get('deviceClass', deviceClassId);\n      var eventTypes = [];\n\n      angular.forEach(deviceClassEventTypesFiltered, function(deviceClassEventType) {\n        if(deviceClassEventType.deviceClassId === deviceClassId) {\n          var eventType = DS.get('eventType', deviceClassEventType.eventTypeId);\n          eventTypes.push(eventType);\n        }\n      });\n\n      return eventTypes;\n    };\n\n    DSDeviceClass.getAllStateTypes = function(deviceClassId) {\n      var deviceClassStateTypes = DSDeviceClassStateType.getAll();\n      var deviceClassStateTypesFiltered = deviceClassStateTypes.filter(function(deviceClassStateType) {\n        return deviceClassStateType.deviceClassId === deviceClassId;\n      });\n      var deviceClass = DS.get('deviceClass', deviceClassId);\n      var stateTypes = [];\n\n      angular.forEach(deviceClassStateTypesFiltered, function(deviceClassStateType) {\n        if(deviceClassStateType.deviceClassId === deviceClassId) {\n          var stateType = DS.get('stateType', deviceClassStateType.stateTypeId);\n          stateTypes.push(stateType);\n        }\n      });\n\n      return stateTypes;\n    };\n\n    angular.extend(DSDeviceClass, {\n      load: load\n    });\n\n    return DSDeviceClass;\n\n\n    function load() {\n      return websocketService\n        .send({\n          method: 'Devices.GetSupportedDevices'\n        })\n        .then(function(data) {\n          DSDeviceClass.inject(data.deviceClasses);\n          return DSDeviceClass.getAll();\n        });\n    }\n\n\n    /*\n     * Private method: _getInputPath(name, filename)\n     */\n    function _getInputPath(name, filename) {\n      return 'app/containers/thing-details/device-class-templates/' + filename + '.html';\n    }\n\n    /*\n     * Private method: _addUiTemplate(name)\n     */\n    function _addUiTemplate(name) {\n      // Example: 'Elro Remote' => 'elro-remote'\n      var templateName = name\n        .toLowerCase()\n        .replace(/\\s/g, '-')\n        .replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, '');\n      var templateUrl = _getInputPath(name, 'device-class-' + templateName);\n\n      return modelsHelper.checkTemplateUrl(templateUrl);\n    }\n\n    /*\n     * Private method:_createDeviceClassParamTypes()\n     */\n    function _createDeviceClassParamTypes(resource, attrs) {\n      var deviceClassDiscoveryParamTypes = DS.getAll('deviceClassDiscoveryParamType');\n      var deviceClassParamTypes = DS.getAll('deviceClassParamType');\n      var deviceClassActionTypes = DS.getAll('deviceClassActionType');\n      var deviceClassEventTypes = DS.getAll('deviceClassEventType');\n      var deviceClassStateTypes = DS.getAll('deviceClassStateType');\n      var discoveryParamTypes = attrs.discoveryParamTypes;\n      var paramTypes = attrs.paramTypes;\n      var actionTypes = attrs.actionTypes;\n      var eventTypes = attrs.eventTypes;\n      var stateTypes = attrs.stateTypes;\n      var deviceClassId = attrs.id;\n\n\n      // DiscoveryParamTypes\n      angular.forEach(discoveryParamTypes, function(discoveryParamType) {\n        // Create discoveryParamType\n        var discoveryParamTypeInstance = DS.createInstance('paramType', discoveryParamType);\n        DS.inject('paramType', discoveryParamTypeInstance);\n\n        // Filtered deviceClassDiscoveryParamTypes\n        var deviceClassDiscoveryParamTypesFiltered = deviceClassDiscoveryParamTypes.filter(function(deviceClassDiscoveryParamType) {\n          return deviceClassDiscoveryParamType.deviceClassId === deviceClassId && deviceClassDiscoveryParamType.paramTypeId === discoveryParamType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(deviceClassDiscoveryParamTypesFiltered) && deviceClassDiscoveryParamTypesFiltered.length === 0) {\n          // Create membership (deviceClass <-> discoveryParamType)\n          deviceClassDiscoveryParamTypesId = deviceClassDiscoveryParamTypesId + 1;\n          var deviceClassDiscoveryParamTypeInstance = DS.createInstance('deviceClassDiscoveryParamType', {\n            id: deviceClassDiscoveryParamTypesId,\n            deviceClassId: deviceClassId,\n            paramTypeId: discoveryParamType.id\n          });\n          DS.inject('deviceClassDiscoveryParamType', deviceClassDiscoveryParamTypeInstance);\n        }\n      });\n\n      // ParamTypes\n      angular.forEach(paramTypes, function(paramType) {\n        // Create paramType\n        var paramTypeInstance = DS.createInstance('paramType', paramType);\n        DS.inject('paramType', paramTypeInstance);\n\n        // Filtered deviceClassParamTypes\n        var deviceClassParamTypesFiltered = deviceClassParamTypes.filter(function(deviceClassParamType) {\n          return deviceClassParamType.deviceClassId === deviceClassId && deviceClassParamType.paramTypeId === paramType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(deviceClassParamTypesFiltered) && deviceClassParamTypesFiltered.length === 0) {\n          // Create membership (deviceClass <-> paramType)\n          deviceClassParamTypesId = deviceClassParamTypesId + 1;\n          var deviceClassParamTypeInstance = DS.createInstance('deviceClassParamType', {\n            id: deviceClassParamTypesId,\n            deviceClassId: deviceClassId,\n            paramTypeId: paramType.id\n          });\n          DS.inject('deviceClassParamType', deviceClassParamTypeInstance);\n        }\n      });\n\n      // ActionTypes\n      angular.forEach(actionTypes, function(actionType) {\n        // Create actionType\n        var actionTypeInstance = DS.createInstance('actionType', actionType);\n        DS.inject('actionType', actionTypeInstance);\n\n        // Filtered deviceClassActionTypes\n        var deviceClassActionTypesFiltered = deviceClassActionTypes.filter(function(deviceClassActionType) {\n          return deviceClassActionType.deviceClassId === deviceClassId && deviceClassActionType.actionTypeId === actionType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(deviceClassActionTypesFiltered) && deviceClassActionTypesFiltered.length === 0) {\n          // Create membership (deviceClass <-> actionType)\n          deviceClassActionTypesId = deviceClassActionTypesId + 1;\n          var deviceClassActionTypeInstance = DS.createInstance('deviceClassActionType', {\n            id: deviceClassActionTypesId,\n            deviceClassId: deviceClassId,\n            actionTypeId: actionType.id\n          });\n          DS.inject('deviceClassActionType', deviceClassActionTypeInstance);\n        }\n      });\n\n      // EventTypes\n      angular.forEach(eventTypes, function(eventType) {\n        // Create eventType\n        var eventTypeInstance = DS.createInstance('eventType', eventType);\n        DS.inject('eventType', eventTypeInstance);\n\n        // Filtered deviceClassEventTypes\n        var deviceClassEventTypesFiltered = deviceClassEventTypes.filter(function(deviceClassEventType) {\n          return deviceClassEventType.deviceClassId === deviceClassId && deviceClassEventType.eventTypeId === eventType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(deviceClassEventTypesFiltered) && deviceClassEventTypesFiltered.length === 0) {\n          // Create membership (deviceClass <-> eventType)\n          deviceClassEventTypesId = deviceClassEventTypesId + 1;\n          var deviceClassEventTypeInstance = DS.createInstance('deviceClassEventType', {\n            id: deviceClassEventTypesId,\n            deviceClassId: deviceClassId,\n            eventTypeId: eventType.id\n          });\n          DS.inject('deviceClassEventType', deviceClassEventTypeInstance);\n        }\n      });\n\n      // StateTypes\n      angular.forEach(stateTypes, function(stateType) {\n        // Create stateType\n        var stateTypeInstance = DS.createInstance('stateType', stateType);\n        DS.inject('stateType', stateTypeInstance);\n\n        // Filtered deviceClassStateTypes\n        var deviceClassStateTypesFiltered = deviceClassStateTypes.filter(function(deviceClassStateType) {\n          return deviceClassStateType.deviceClassId === deviceClassId && deviceClassStateType.stateTypeId === stateType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(deviceClassStateTypesFiltered) && deviceClassStateTypesFiltered.length === 0) {\n          // Create membership (deviceClass <-> actionType)\n          deviceClassStateTypesId = deviceClassStateTypesId + 1;\n          var deviceClassStateTypeInstance = DS.createInstance('deviceClassStateType', {\n            id: deviceClassStateTypesId,\n            deviceClassId: deviceClassId,\n            stateTypeId: stateType.id\n          });\n          DS.inject('deviceClassStateType', deviceClassStateTypeInstance);\n        }\n      });\n    }\n\n    /*\n     * Private method: _mapStates(resource, attrs)\n     */\n    function _mapStates(resource, attrs) {\n      var actionTypes = attrs.actionTypes;\n      var eventTypes = attrs.eventTypes;\n      var stateTypes = attrs.stateTypes;\n      // var stateIds = libs._.pluck(stateTypes, 'id');\n      var stateIds = _.pluck(stateTypes, 'id');\n\n      // Map actionTypes\n      angular.forEach(actionTypes, function(actionType) {\n        // Check if current actionType belongs to a stateType\n        if(_.contains(stateIds, actionType.id)) {\n          actionType.hasState = true;\n        } else {\n          actionType.hasState = false;\n        }\n      });\n\n      // Map eventTypes\n      angular.forEach(eventTypes, function(eventType) {\n        // Check if current eventType belongs to a stateType\n        if(_.contains(stateIds, eventType.id)) {\n          eventType.hasState = true;\n        } else {\n          eventType.hasState = false;\n        }\n      });\n    }\n\n\n    /*\n     * Public method: discover(discoveryParams)\n     */\n    function discover(discoveryParams) {\n      /* jshint validthis: true */\n      var self = this;\n\n      return websocketService.send({\n        method: 'Devices.GetDiscoveredDevices',\n        params: {\n          deviceClassId: self.id,\n          discoveryParams: discoveryParams\n        }\n      });\n    }\n\n    /*\n     * Public method: getCreateMethod()\n     */\n    function getCreateMethod() {\n      /* jshint validthis: true */\n      var self = this;\n      var basePath = 'app/components/create-thing/templates/';\n      var createMethodData = null;\n\n      if(self.createMethods.indexOf('CreateMethodDiscovery') > -1) {\n        createMethodData = {\n          title: 'Discovery',\n          template: basePath + 'create-thing-discovery.html'\n        };\n      } else if(self.createMethods.indexOf('CreateMethodUser') > -1) {\n        createMethodData = {\n          title: 'User',\n          template: basePath + 'create-thing-user.html'\n        };\n      } else if(self.createMethods.indexOf('CreateMethodAuto') > -1) {\n        createMethodData = {\n          title: 'Auto',\n          template: null\n        };\n      } else {\n        $log.error('CreateMethod not implemented.');\n      }\n\n      return createMethodData;\n    }\n\n    /*\n     * Public method: getSetupMethod()\n     */\n    function getSetupMethod() {\n      /* jshint validthis: true */\n      var self = this;\n      var basePath = 'app/components/setup-thing/templates/';\n      var setupMethodData = {};\n\n      switch(self.setupMethod) {\n        case 'SetupMethodJustAdd':\n          setupMethodData = null;\n          break;\n        case 'SetupMethodDisplayPin':\n          setupMethodData = {\n            title: 'Display Pin',\n            template: basePath + 'setup-thing-display-pin.html'\n          };\n          break;\n        case 'SetupMethodEnterPin':\n          setupMethodData = {\n            title: 'Enter Pin',\n            template: basePath + 'setup-thing-enter-pin.html'\n          };\n          break;\n        case 'SetupMethodPushButton':\n          setupMethodData = {\n            title: 'Push Button',\n            template: basePath + 'setup-thing-push-button.html'\n          };\n          break;\n        default:\n          $log.error('SetupMethod not implemented.');\n          break;\n      }\n\n      return setupMethodData;\n    }\n\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDeviceClassEventType', DSDeviceClassEventTypeFactory)\n    .run(function(DSDeviceClassEventType) {});\n\n  DSDeviceClassEventTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSDeviceClassEventTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSDeviceClassEventType = DS.defineResource({\n\n      // Model configuration\n      name: 'deviceClassEventType',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId'\n          },\n          eventType: {\n            localField: 'eventType',\n            localKey: 'eventTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSDeviceClassEventType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDeviceClassDiscoveryParamType', DSDeviceClassDiscoveryParamTypeFactory)\n    .run(function(DSDeviceClassDiscoveryParamType) {});\n\n  DSDeviceClassDiscoveryParamTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSDeviceClassDiscoveryParamTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSDeviceClassDiscoveryParamType = DS.defineResource({\n\n      // Model configuration\n      name: 'deviceClassDiscoveryParamType',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId'\n          },\n          paramType: {\n            localField: 'discoveryParamType',\n            localKey: 'paramTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSDeviceClassDiscoveryParamType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDeviceClassActionType', DSDeviceClassActionTypeFactory)\n    .run(function(DSDeviceClassActionType) {});\n\n  DSDeviceClassActionTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSDeviceClassActionTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSDeviceClassActionType = DS.defineResource({\n\n      // Model configuration\n      name: 'deviceClassActionType',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId'\n          },\n          actionType: {\n            localField: 'actionType',\n            localKey: 'actionTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSDeviceClassActionType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSConnection', DSConnectionFactory)\n    .run(function(DSConnection) {});\n\n\n  DSConnectionFactory.$inject = ['$log', 'LocalForage'];\n\n  function DSConnectionFactory($log, LocalForage) {\n\n    LocalForage.localForageStore.registerAdapter('localForage', LocalForage.localForageAdapter, { default: true });\n\n    var Connection = LocalForage.localForageStore.defineResource({\n      name: 'connection',\n      relations: {\n        belongsTo: {\n          settings: {\n            localField: 'settings',\n            localKey: 'settingsId',\n            parent: true\n          }\n        }\n      }\n    });\n\n    return Connection;\n\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSActionTypeParamType', DSActionTypeParamTypeFactory)\n    .run(function(DSActionTypeParamType) {});\n\n  DSActionTypeParamTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSActionTypeParamTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSActionTypeParamType = DS.defineResource({\n\n      // Model configuration\n      name: 'actionTypeParamType',\n      relations: {\n        belongsTo: {\n          actionType: {\n            localField: 'actionType',\n            localKey: 'actionTypeId'\n          },\n          paramType: {\n            localField: 'paramType',\n            localKey: 'paramTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSActionTypeParamType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSActionType', DSActionTypeFactory)\n    .run(function(DSActionType) {});\n\n  DSActionTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSActionTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n    var actionTypeParamTypesId = 0;\n\n    /*\n     * DataStore configuration\n     */\n    var DSActionType = DS.defineResource({\n\n      // API configuration\n      endpoint: 'actiontypes',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'actionType',\n      relations: {\n        hasMany: {\n          deviceClassActionType: {\n            localField: 'deviceClassActionTypes',\n            foreignKey: 'actionTypeId'\n          },\n          actionTypeParamType: {\n            localField: 'actionTypeParamTypes',\n            foreignKey: 'actionTypeId'\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {\n        getParams: getParams,\n        getRuleActionParams: getRuleActionParams\n      },\n\n      // Lifecycle hooks\n      afterInject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _addUiData(resource, attrs);\n            _createActionTypeParamTypes(resource, attrs);\n          });\n        } else {\n          _addUiData(resource, attrs);\n          _createActionTypeParamTypes(resource, attrs);\n        }\n      }\n\n    });\n\n    return DSActionType;\n\n\n    /*\n     * Private method: _addUiData(resource, attrs)\n     */\n    function _addUiData(resource, attrs) {\n      var paramTypes = attrs.paramTypes;\n      \n      attrs.phrase = 'Execute \"' + attrs.name + '\"';\n\n      // Add phrase for moods\n      if(angular.isArray(paramTypes) && paramTypes.length > 0) {\n        attrs.phrase = attrs.phrase + ' with parameters';\n      }\n    }\n\n    /*\n     * Private method:_createActionTypeParamTypes()\n     */\n    function _createActionTypeParamTypes(resource, attrs) {\n      var actionTypeParamTypes = DS.getAll('actionTypeParamType');\n      var paramTypes = attrs.paramTypes;\n      var actionTypeId = attrs.id;\n\n\n      // ParamTypes\n      angular.forEach(paramTypes, function(paramType) {\n        // Create paramType\n        var paramTypeInstance = DS.createInstance('paramType', paramType);\n        DS.inject('paramType', paramTypeInstance);\n\n        // Filtered actionTypeParamTypes\n        var actionTypeParamTypesFiltered = actionTypeParamTypes.filter(function(actionTypeParamType) {\n          return actionTypeParamType.actionTypeId === actionTypeId && actionTypeParamType.paramTypeId === paramType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(actionTypeParamTypesFiltered) && actionTypeParamTypesFiltered.length === 0) {\n          // Create membership (deviceClass <-> paramType)\n          actionTypeParamTypesId = actionTypeParamTypesId + 1;\n          var actionTypeParamTypeInstance = DS.createInstance('actionTypeParamType', {\n            id: actionTypeParamTypesId,\n            actionTypeId: actionTypeId,\n            paramTypeId: paramType.id\n          });\n          DS.inject('actionTypeParamType', actionTypeParamTypeInstance);\n        }\n      });\n    }\n\n\n    /*\n     * Public method: getParams()\n     */\n    function getParams() {\n      /* jshint validthis: true */\n      var self = this;\n      var params = [];\n      var paramTypes = self.paramTypes;\n\n      angular.forEach(paramTypes, function(paramType) {\n        params.push({\n          id: paramType.id,\n          value: paramType.value\n        });\n      });\n\n      return params;\n    }\n\n    /*\n     * Public method: getRuleActionParams(params, actionParamType, eventParamType)\n     */\n    function getRuleActionParams(params, actionParamType, eventParamType) {\n      /* jshint validthis: true */\n      var self = this;\n      var ruleActionParams = [];\n\n      angular.forEach(params, function(param) {\n        if(actionParamType !== undefined && eventParamType !== undefined) {\n          if(param.paramTypeId === actionParamType.id) {\n            ruleActionParams.push({\n              paramTypeId: param.paramTypeId,\n              eventParamName: eventParamType.name,\n              eventTypeId: eventParamType.eventDescriptor.eventTypeId\n            });\n          } else {\n            ruleActionParams.push({\n              paramTypeId: param.paramTypeId,\n              value: param.value\n            });\n          }\n        } else {\n          ruleActionParams.push({\n            paramTypeId: param.paramTypeId,\n            value: param.value\n          });\n        }\n      });\n\n      return ruleActionParams;\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.utils', [])\n    .config(config);\n\n  config.$inject = [];\n\n  function config() {}\n\n  // module.exports = angular.module('guh.utils');\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n\n  angular\n    .module('guh.utils')\n    .factory('LocalForage', LocalForage);\n\n\n  LocalForage.$inject = ['$log'];\n\n  function LocalForage($log) {\n\n    // jshint unused:false \n    var LocalForage = {\n      localForageAdapter: new DSLocalForageAdapter(),\n      localForageStore: new JSData.DS()\n    };\n\n    return LocalForage;\n\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.utils')\n    .factory('File', FileFactory);\n\n  FileFactory.$inject = ['$log', '$templateCache'];\n\n  function FileFactory($log, $templateCache) {\n    \n    var File = {\n      checkFile: checkFile\n    };\n\n    return File;\n\n\n    /*\n     * Public method: checkFile(path, file)\n     */\n    function checkFile(path, file) {\n      // if(app.environment === 'production') {\n        // Production: One $templateCache entry per template\n        var cacheObject = $templateCache.get(path + file);\n\n        if(cacheObject !== undefined) {\n          return true;\n        } else {\n          return false;\n        }\n      /*} else if(app.environment === 'development') {\n        // Development: One HTML file per template\n        var request = new XMLHttpRequest();\n\n        request.open('HEAD', path + file, false);\n        request.send();\n\n        if(request.status === 200) {\n          return true;\n        } else {\n          return false;\n        }\n      }*/\n    }\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.api', [])\n    .config(config);\n\n  config.$inject = [];\n\n  function config() {}\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.api')\n    .factory('websocketService', websocketService);\n\n  websocketService.$inject = ['$log', '$rootScope', '$q', '$timeout', 'DS'];\n\n  function websocketService($log, $rootScope, $q, $timeout, DS) {\n\n    var ws = null;\n    var connectionTimer;\n    var callbacks = {};\n    var currentRequestId = 0;\n    var websocketService = {\n      close: close,\n      connect: connect,\n      reconnect: reconnect,\n      send: send\n    };\n\n    return websocketService;\n\n    /*\n     * Private function: _getRequestId()\n     */\n    function _getRequestId() {\n      currentRequestId = currentRequestId + 1;\n      if(currentRequestId > 10000) {\n        currentRequestId = 0;\n      }\n      return currentRequestId;\n    };\n\n\n    /*\n     * Public method: close()\n     */\n    function close() {\n      if(ws) {\n        ws.close();\n        ws = null;\n      }\n    }\n\n    /*\n     * Public method: connect()\n     */\n    function connect(url) {\n      if(ws) {\n        return;\n      }\n\n      if(angular.isUndefined(url)) {\n        $log.error('guh.api.websocketService:factory', 'Missing argument: url');\n      }\n\n      ws = new WebSocket(url);\n\n      // Timeout if connecting takes to long (can take up to 1 minute, with the timeout only 2 seconds)\n      connectionTimer = $timeout(function() {\n        ws.close();\n        ws = null;\n      }, 2000);\n\n      ws.onopen = function(event) {\n        if(connectionTimer) {\n          $timeout.cancel(connectionTimer);\n        }\n\n        // Send broadcast event\n        $rootScope.$apply(function() {\n          $rootScope.$broadcast('WebsocketConnected', 'Successful connected to guh.');\n        });\n      };\n\n      ws.onclose = function(event) {\n        // Safari is not calling onerror but calls onclose with code = 1006\n        if(event.code === 1006) {\n          $rootScope.$apply(function() {\n            $rootScope.$broadcast('WebsocketConnectionError', 'There was an error connecting to guh.');\n          });\n        } else {\n          // Send broadcast event\n          $rootScope.$apply(function() {\n            $rootScope.$broadcast('WebsocketConnectionLost', 'The app has lost the connection to guh. Please check if you are connected to your network and if guh is running correctly.');\n          });\n        }\n      };\n\n      ws.onerror = function(event) {\n        // Send broadcast event\n        $rootScope.$apply(function() {\n          $rootScope.$broadcast('WebsocketConnectionError', 'There was an error connecting to guh.');\n        });\n      };\n\n      ws.onmessage = function(message) {\n        var data = angular.fromJson(message.data);\n\n        if(angular.isDefined(data.notification)) {\n          switch(data.notification) {\n            // Devices.DeviceAdded\n            case 'Devices.DeviceAdded':\n              var deviceId = data.params.device.id;\n              var device = DS.get('device', deviceId);\n\n              if(angular.isUndefined(device)) {\n                var injectedItem = DS.inject('device', data.params.device);\n\n                // Send broadcast event\n                if(DS.is('device', injectedItem)) {\n                  $rootScope.$broadcast('ReloadView', injectedItem.deviceClass.name + ' was added.');\n                }          \n              }\n\n              break;\n\n\n            // TODO: Devices.DeviceChanged\n\n\n            // Devices.DeviceRemoved\n            case 'Devices.DeviceRemoved':\n              var deviceId = data.params.deviceId;\n              var ejectedItem = DS.eject('device', deviceId);\n\n              if(angular.isDefined(ejectedItem)) {\n                // Send broadcast event\n                $rootScope.$broadcast('ReloadView', 'Device was removed.', ejectedItem);\n              }\n\n              break;\n\n\n            // Devices.StateChanged\n            case 'Devices.StateChanged':\n              var deviceId = data.params.deviceId;\n              var stateTypeId = data.params.stateTypeId;\n              var value = data.params.value;\n              DS.inject('state', {\n                id: '' + deviceId + '_' + stateTypeId,\n                deviceId: deviceId,\n                stateTypeId: stateTypeId,\n                value: value\n              });\n              break;\n\n\n            // TODO: Events.EventTriggered\n\n\n            // TODO: Logging.LogDatabaseUpdated\n\n\n            // TODO: Logging.LogEntryAdded\n\n\n            // TODO: Rules.RuleActiveChanged\n\n\n            // Rules.RuleAdded\n            case 'Rules.RuleAdded':\n              var ruleId = data.params.rule.id;\n              var rule = DS.get('rule', ruleId);\n\n              if(angular.isUndefined(rule)) {\n                var injectedItem = DS.inject('rule', data.params.rule);\n\n                // Send broadcast event\n                if(DS.is('rule', injectedItem)) {\n                  $rootScope.$broadcast('ReloadView', injectedItem.name + ' was added.');\n                }\n              }\n\n              break;\n\n\n            // Rules.ConfigurationChanged\n            case 'Rules.ConfigurationChanged':\n              var rule = data.params.rule;\n              var injectedItem = DS.inject('rule', rule);\n\n              // Send broadcast event\n              if(DS.is('rule', injectedItem)) {\n                $rootScope.$broadcast('ReloadView', injectedItem.name + ' was updated.');\n              }\n\n              break;\n\n\n            // Rules.RuleRemoved\n            case 'Rules.RuleRemoved':\n              var ruleId = data.params.ruleId;\n              var ejectedItem = DS.eject('rule', ruleId);\n\n              if(angular.isDefined(ejectedItem)) {\n                // Send broadcast event\n                $rootScope.$broadcast('ReloadView', 'Rule was removed.');\n              }\n\n              break;\n\n\n            default:\n              // $log.warn('Type of notification not handled:', data);\n          }\n\n        // } else if(angular.isDefined(data.authenticationRequired)) {\n        } else if(angular.isDefined(data.id) && data.id === 0) {\n          $rootScope.$apply(function() {\n            $rootScope.$broadcast('InitialHandshake', data);\n          });\n        } else if(angular.isDefined(data.id)) {\n          if(data.status === 'success') {\n            if(angular.isDefined(data.params.deviceError) && data.params.deviceError !== 'DeviceErrorNoError') {\n              $rootScope.$apply(callbacks[data.id].callback.reject(data.params));\n            } else if(angular.isDefined(data.params.loggingError) && data.params.loggingError !== 'LoggingErrorNoError') {\n              $rootScope.$apply(callbacks[data.id].callback.reject(data.params));\n            } else if(angular.isDefined(data.params.ruleError) && data.params.ruleError !== 'RuleErrorNoError') {\n              $rootScope.$apply(callbacks[data.id].callback.reject(data.params));\n            } else {\n              $rootScope.$apply(callbacks[data.id].callback.resolve(data.params));\n            }\n          } else {\n            $rootScope.$apply(callbacks[data.id].callback.reject(data.error));\n          }\n          \n          delete callbacks[data.id];\n        }\n      };\n    }\n\n    /*\n     * Public method: reconnect(url)\n     */\n    function reconnect(url) {\n      websocketService.close();\n      websocketService.connect(url);\n    }\n\n    /*\n     * Public method: send(request)\n     */\n    function send(request) {\n      var defer = $q.defer();\n      var requestId = _getRequestId();\n\n      callbacks[requestId] = {\n        time: new Date(),\n        callback: defer\n      };\n\n      request.id = requestId;\n\n      ws.send(angular.toJson(request));\n\n      return defer.promise;\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.logging', [\n      'guh.logging.hooks'\n    ])\n    .config(config);\n\n  config.$inject = ['$provide'];\n\n  function config($provide) {\n    // Exceptions\n    // $provide.decorator('$exceptionHandler', ['$injector', '$delegate', 'Logging', function($injector, $delegate, Logging) {\n    //   if(!Logging.angularServiceEnhanced.$exceptionHandler) {\n    //     return $delegate;\n    //   }\n\n    //   return function(exception, cause) {\n    //     $delegate(exception, cause);\n    //   }\n    // }]);\n\n    // Logs\n    $provide.decorator('$log', ['$injector', '$delegate', 'guhLogging', function($injector, $delegate, guhLogging) {\n      var decorator = {\n        log: log,\n        info: info,\n        warn: warn,\n        error: error\n      };\n\n      return decorator;\n\n\n      function _applyCallbacks(logType, args) {\n        var logTypeData = guhLogging.getLogType(logType);\n\n        // Pre callbacks\n        angular.forEach(logTypeData.preCallbacks, function(preCallbackProvider) {\n          var preCallback = $injector.get(preCallbackProvider);\n          preCallback.call(preCallback, {\n            type: logType,\n            args: args\n          });\n        });\n\n        // Console\n        if(guhLogging.isEnhanced(logType)) {\n          $delegate[logType].apply($delegate, args);\n          guhLogging[logType].apply(null, args);\n        } else {\n          $delegate[logType].apply($delegate, args);\n        }\n\n        // Post callbacks\n        angular.forEach(logTypeData.postCallbacks, function(postCallbackProvider) {\n          var postCallback = $injector.get(postCallbackProvider);\n          postCallback.call(postCallback, {\n            type: logType,\n            args: args\n          });\n        });\n      }\n\n      function log() {\n        var args = arguments;\n        _applyCallbacks('log', args);\n      }\n\n      function info() {\n        var args = arguments;\n        _applyCallbacks('info', args);\n      }\n\n      function warn() {\n        var args = arguments;\n        _applyCallbacks('warn', args);\n      }\n\n      function error() {\n        var args = arguments;\n        _applyCallbacks('error', args);\n      }\n    }]);\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.logging')\n    .provider('guhLogging', Logging);\n\n  Logging.$inject = ['$injector'];\n\n  function Logging($injector) {\n    var _logTypes = {\n      log: {},\n      info: {},\n      warn: {},\n      error: {}\n    };\n\n    var _hooks = {\n      http: 'guhLoggingHttpHook',\n      broadcast: 'guhLoggingBroadcastHook',\n      websocket: null\n    };\n\n    var provider = {\n      $get: $get,\n      enhance: enhance,\n      before: before,\n      after: after,\n      decorate: decorate\n    };\n\n    return provider;\n\n\n    // function _getArrayFromString(string) {\n    //   if(!angular.isString(string)) {\n    //     return;\n    //   }\n    // }\n\n    function _addHooks(prePost, logTypes, hooks) {\n      try {\n        if(angular.isUndefined(logTypes) || logTypes === null || !angular.isString(logTypes)) {\n          throw 'Wrong argument type. The argument \"logTypes\" should be a comma seperated String.';\n        }\n        if(angular.isDefined(hooks) && hooks !== null && !angular.isString(hooks)) {\n          throw 'Wrong argument type. The argument \"hooks\" should be a comma seperated String.';\n        }\n      } catch(error) {\n        return error;\n      }\n\n      var logTypesArray = logTypes.replace(/\\s+/g, '').split(',');\n      var hooksArray = hooks.replace(/\\s+/g, '').split(',');\n      var logTypeCallbacks = [];\n\n      // Check hooks\n      var callback;\n      angular.forEach(hooksArray, function(hook) {\n        if(angular.isDefined(_hooks[hook]) && _hooks[hook] !== null) {\n          logTypeCallbacks.push(_hooks[hook]);\n        }\n      });\n\n      // Initialize all log types with preCallbacks = [] / postCallbacks = []\n      angular.forEach(_logTypes, function(_logType) {\n        _logType[prePost + 'Callbacks'] = [];\n      });\n\n      // Set defined callbacks for log types\n      angular.forEach(logTypesArray, function(logType) {\n        if(angular.isDefined(_logTypes[logType])) {\n          _logTypes[logType][prePost + 'Callbacks'] = logTypeCallbacks;\n        }\n      });\n    }\n\n    function _getEnhancedArguments(args) {\n      // console.log('args', args, angular.isObject(args), angular.isArray(args));\n\n      var argsArray = args ? [].slice.call(args) : args;\n\n      // console.log('argsArray', argsArray, argsArray.length, angular.isArray(argsArray), argsArray[0]);\n\n      if(argsArray.length === 1) {\n        return argsArray[0];\n      } else {\n        return args;\n      }\n    }\n\n    function _addTimestamp() {\n\n    }\n\n\n    function $get() {\n      var service = {\n        isEnhanced: isEnhanced,\n        log: log,\n        info: info,\n        warn: warn,\n        error: error,\n        getLogType: getLogType\n      };\n\n      return service;\n\n\n      function isEnhanced(logType) {\n        return (angular.isDefined(_logTypes[logType]) && angular.isDefined(_logTypes[logType].enhanced)) ? _logTypes[logType].enhanced : false;\n      }\n\n      function log() {\n        // var args = _getEnhancedArguments(arguments);\n        // console.log(arguments);\n      }\n\n      function info() {\n        // var args = _getEnhancedArguments(arguments);\n        // console.info(arguments);\n      }\n\n      function warn() {\n        // var args = _getEnhancedArguments(arguments);\n        // console.warn(arguments);\n      }\n\n      function error() {\n        // var args = _getEnhancedArguments(arguments);\n        // console.error(arguments);\n      }\n\n      function getLogType(logType) {\n        return _logTypes[logType];\n      }\n    }\n\n    function enhance(logTypes) {\n      try {\n        if(angular.isDefined(logTypes) && logTypes !== null && !angular.isString(logTypes)) {\n          throw 'Wrong argument type. The argument \"logTypes\" should be a comma seperated String.';\n        }\n      } catch(error) {\n        return error;\n      }\n\n      var logTypesArray = [];\n\n      // Set enhanced\n      if(angular.isString(logTypes)) {\n        logTypesArray = logTypes.replace(/\\s+/g, '').split(',');\n\n        // Initialize all log types with enhanced = false\n        angular.forEach(_logTypes, function(_logType) {\n          _logType.enhanced = false;\n        });\n\n        // Set defined enhanced values for log types\n        angular.forEach(logTypesArray, function(logType) {\n          if(angular.isDefined(_logTypes[logType])) {\n            _logTypes[logType].enhanced = true;\n          }\n        });\n      } else {\n        // If logTypes is undefined or null\n        // Initialize all log types with enhanced = true\n        angular.forEach(_logTypes, function(_logType) {\n          _logType.enhanced = true;\n        });\n      }\n    }\n\n    function before(logTypes, hooks) {\n      _addHooks('pre', logTypes, hooks);\n    }\n\n    function after(logTypes, hooks) {\n      _addHooks('post', logTypes, hooks);\n    }\n\n    function decorate(message) {\n\n    }\n  }\n\n}());\n"],"sourceRoot":"/source/"}