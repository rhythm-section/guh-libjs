{"version":3,"sources":["logging/hooks/logging-hooks-module.js","logging/hooks/logging-http-hook-provider.js","logging/hooks/logging-broadcast-hook-provider.js","vendor/vendor-module.js","vendor/lodash-vendor-service.js","vendor/localforage-vendor-service.js","api/api-module.js","api/websocket-api-service.js","utils/utils-module.js","utils/local-forage-service.js","utils/file-utils-service.js","models/models-module.js","models/vendor-model-service.js","models/state-type-model-service.js","models/state-model-service.js","models/settings-model-service.js","models/server-info-model-service.js","models/rule-model-service.js","models/plugin-param-type-model-service.js","models/plugin-model-service.js","models/param-type-model-service.js","models/models-helper.js","models/logging-model-service.js","models/event-type-param-type-model-service.js","models/event-type-model-service.js","models/device-model-service.js","models/device-class-state-type-model-service.js","models/device-class-param-type-model-service.js","models/device-class-model-service.js","models/device-class-event-type-service.js","models/device-class-discovery-param-type-model-service.js","models/device-class-action-type-model-service.js","models/connection-model-service.js","models/action-type-param-type-model-service.js","models/action-type-model-service.js","logging/logging-module.js","logging/logging-provider.js"],"names":["config","angular","module","$inject","guhLoggingHttpHook","_checkParameter","parameterName","parameter","isDefined","isString","error","_setServerAddress","locationServer","locationProtocol","locationHost","locationPort","$get","$http","logObject","post","data","then","response","console","log","payload","setProtocol","protocol","setHostname","hostname","setPort","port","getServer","location","provider","guhLoggingBroadcastHook","$rootScope","type","argsArray","args","slice","call","isArray","length","$broadcast","context","lodashService","$log","$window","_","factory","localforageService","localforage","websocketService","$q","$timeout","DS","_getRequestId","currentRequestId","close","ws","connect","url","isUndefined","WebSocket","connectionTimer","onopen","event","cancel","$apply","onclose","code","onerror","onmessage","message","fromJson","notification","deviceId","params","device","id","get","injectedItem","inject","is","deviceClass","name","ejectedItem","eject","stateTypeId","value","ruleId","rule","status","deviceError","callbacks","callback","reject","loggingError","ruleError","resolve","reconnect","send","request","defer","requestId","time","Date","toJson","promise","LocalForage","localForageAdapter","DSLocalForageAdapter","localForageStore","JSData","FileFactory","$templateCache","checkFile","path","file","cacheObject","undefined","File","DSProvider","defaults","debug","DSVendorFactory","load","method","DSVendor","vendors","getAll","defineResource","endpoint","idAttribute","relations","hasMany","localField","foreignKey","computed","methods","extend","run","DSStateTypeFactory","_addUiData","resource","attrs","regExp","searchUnit","replace","phrase","test","DSStateType","deviceClassStateType","afterInject","arrayOfAttrs","forEach","DSStateFactory","states","values","map","state","DSState","belongsTo","localKey","parent","hasOne","stateType","compoundId","DSSettingsFactory","registerAdapter","default","DSSettings","serverInfo","connection","DSServerInfoFactory","ServerInfo","settings","DSServerInfo","DSRuleFactory","_loadDetails","ruleDescription","all","ruleDescriptions","DSRule","rules","add","executeActions","self","this","executeExitActions","remove","DSPluginParamTypeFactory","DSPluginParamType","plugin","paramType","DSPluginFactory","_createPluginParamTypes","pluginParamTypes","paramTypes","pluginId","paramTypeInstance","createInstance","pluginParamTypesFiltered","filter","pluginParamType","paramTypeId","pluginParamTypesId","pluginParamTypeInstance","DSPlugin","plugins","DSParamTypeFactory","DSParamType","deviceClassDiscoveryParamType","deviceClassParamType","actionTypeParamType","eventTypeParamType","modelsHelper","app","checkTemplateUrl","templateUrl","pathElements","split","pop","join","fileExists","when","setBasePath","basePath","apiUrl","DSLoggingFactory","getLogEntries","filters","jsonRpcParams","deviceIds","eventTypes","loggingLevels","loggingSources","timeFilters","typeIds","DSLogging","DSEventTypeParamTypeFactory","DSEventTypeParamType","eventType","DSEventTypeFactory","_createEventTypeParamTypes","eventTypeParamTypes","eventTypeId","eventTypeParamTypesFiltered","eventTypeParamTypesId","eventTypeParamTypeInstance","getParamDescriptor","operator","paramDescriptor","DSEventType","DSDeviceFactory","_createStates","index","stateInstance","_removeStates","DSDevice","devices","getDescription","delimiter","vendorName","vendor","deviceClassName","pair","deviceClassId","deviceDescriptorId","deviceParams","confirmPairing","pairingTransactionId","secret","edit","deviceData","deviceParamTypes","deviceParamType","deviceParam","push","update","executeAction","actionType","actionTypeId","key","getEventDescriptor","paramDescriptors","eventDescriptor","getStateDescriptor","stateDescriptor","getAction","action","ruleActionParams","getRuleActionParams","afterEject","DSDeviceClassStateTypeFactory","DSDeviceClassStateType","DSDeviceClassParamTypeFactory","DSDeviceClassParamType","DSDeviceClassFactory","DSDeviceClassActionType","DSDeviceClassEventType","DSDeviceClass","deviceClasses","_getInputPath","filename","_addUiTemplate","templateName","toLowerCase","_createDeviceClassParamTypes","deviceClassDiscoveryParamTypes","deviceClassParamTypes","deviceClassActionTypes","deviceClassEventTypes","deviceClassStateTypes","discoveryParamTypes","actionTypes","stateTypes","discoveryParamType","discoveryParamTypeInstance","deviceClassDiscoveryParamTypesFiltered","deviceClassDiscoveryParamTypesId","deviceClassDiscoveryParamTypeInstance","deviceClassParamTypesFiltered","deviceClassParamTypesId","deviceClassParamTypeInstance","actionTypeInstance","deviceClassActionTypesFiltered","deviceClassActionType","deviceClassActionTypesId","deviceClassActionTypeInstance","eventTypeInstance","deviceClassEventTypesFiltered","deviceClassEventType","deviceClassEventTypesId","deviceClassEventTypeInstance","stateTypeInstance","deviceClassStateTypesFiltered","deviceClassStateTypesId","deviceClassStateTypeInstance","_mapStates","stateIds","pluck","contains","hasState","discover","discoveryParams","getCreateMethod","createMethodData","createMethods","indexOf","title","template","getSetupMethod","setupMethodData","setupMethod","getAllActionTypes","getAllEventTypes","getAllStateTypes","DSDeviceClassEventTypeFactory","DSDeviceClassDiscoveryParamTypeFactory","DSDeviceClassDiscoveryParamType","DSDeviceClassActionTypeFactory","DSConnectionFactory","Connection","DSConnection","DSActionTypeParamTypeFactory","DSActionTypeParamType","DSActionTypeFactory","_createActionTypeParamTypes","actionTypeParamTypes","actionTypeParamTypesFiltered","actionTypeParamTypesId","actionTypeParamTypeInstance","getParams","actionParamType","eventParamType","param","eventParamName","DSActionType","$provide","decorator","$injector","$delegate","guhLogging","_applyCallbacks","logType","logTypeData","getLogType","preCallbacks","preCallbackProvider","preCallback","isEnhanced","apply","postCallbacks","postCallbackProvider","postCallback","arguments","info","warn","Logging","_addHooks","prePost","logTypes","hooks","logTypesArray","hooksArray","logTypeCallbacks","hook","_hooks","_logTypes","_logType","enhanced","service","enhance","before","after","decorate","http","broadcast","websocket"],"mappings":"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","file":"guh-libjs.min.js","sourcesContent":["/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.logging.hooks', [])\n    .config(config);\n\n  config.$inject = [];\n\n  function config() {}\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.logging.hooks')\n    .provider('guhLoggingHttpHook', guhLoggingHttpHook);\n\n  function guhLoggingHttpHook() {\n    // Variables\n    var locationProtocol = location.protocol;\n    var locationHost = location.hostname;\n    var locationPort = location.port;\n    var locationServer = locationProtocol + '//' + locationHost + ':' + locationPort;\n\n\n    var provider = {\n      // Provider methods (needed)\n      $get: ['$http', $get],\n\n      // Other methods\n      getServer: getServer,\n      setProtocol: setProtocol,\n      setHostname: setHostname,\n      setPort: setPort\n    };\n\n    return provider;\n\n\n    function _checkParameter(parameterName, parameter) {\n      try {\n        if(!angular.isDefined(parameter) || parameter === null) {\n          throw 'The parameter ' + parameterName + ' has to be defined.';\n        } else if(!angular.isString(parameter)) {\n          throw 'The value of ' + parameterName + ' has to be a string.';\n        }\n      } catch(error) {\n        return;\n      }\n    }\n\n    function _setServerAddress() {\n      locationServer = locationProtocol + '//' + locationHost + ':' + locationPort;\n    }\n\n\n    function $get($http) {\n      return function(logObject) {\n        $http\n          .post(locationServer, {\n            data: logObject\n          })\n          .then(function(response) {\n            console.log('Data successfully sent.', {\n              payload: logObject,\n              response: response\n            });\n          })\n          .catch(function(error) {\n            console.log('Data not sent.', {\n              payload: logObject,\n              error: error\n            })\n          });\n      }\n\n      // console.log('$get', $http);\n\n      // var service = {\n      //   // Variables\n      //   protocol: locationProtocol,\n      //   host: locationHost,\n      //   port: locationPort,\n      //   server: locationServer,\n\n      //   // Methods\n      //   addToQueue: addToQueue\n      // };\n\n      // return service;\n\n\n      // function addToQueue($http) {\n      //   console.log('addToQueue', $http);\n      // }\n    }\n\n    function setProtocol(protocol) {\n      _checkParameter('protocol', protocol);\n      locationProtocol = protocol;\n      _setServerAddress();\n    }\n\n    function setHostname(hostname) {\n      _checkParameter('hostname', hostname);\n      locationHost = hostname;\n      _setServerAddress();\n    }\n\n    function setPort(port) {\n      _checkParameter('port', port);\n      locationPort = port;\n      _setServerAddress();\n    }\n\n    function getServer() {\n      return locationServer;\n    }\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.logging.hooks')\n    .provider('guhLoggingBroadcastHook', guhLoggingBroadcastHook);\n\n  function guhLoggingBroadcastHook() {\n\n    var provider = {\n      // Provider methods (needed)\n      $get: ['$rootScope', $get]\n    };\n\n    return provider;\n\n\n    function $get($rootScope) {\n      return function(logObject) {\n        var type = logObject.type ? logObject.type : null;\n        var argsArray = logObject.args ? [].slice.call(logObject.args) : null;\n\n        if(angular.isArray(argsArray)) {\n          switch(argsArray.length) {\n            case 1:\n              if(!angular.isString(argsArray[0])) {\n                $rootScope.$broadcast('notification', {\n                  type: type,\n                  args: argsArray[0]\n                });\n              }\n              break;\n            case 2:\n              $rootScope.$broadcast('notification', {\n                type: type,\n                context: argsArray[0],\n                args: argsArray[1]\n              });\n              break;\n            default:\n              console.log('Wrong number of arguments.', logObject.type, logObject.args, argsArray.length);\n          }\n        }\n      }\n    }\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.vendor', [])\n    .config(config);\n\n  config.$inject = [];\n\n  function config() {}\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.vendor')\n    .factory('_', lodashService);\n\n  lodashService.$inject = ['$log', '$window'];\n\n  function lodashService($log, $window) {\n\n    if(!$window._) {\n      $log.error('guh.vendor.lodashService:factory', '_ is not defined on window object');\n    }\n\n    return $window._;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.vendor')\n    .factory('localforage', localforageService);\n\n  localforageService.$inject = ['$log', '$window'];\n\n  function localforageService($log, $window) {\n\n    if(!$window.localforage) {\n      $log.error('guh.vendor.localforageService:factory', 'localforage is not defined on window object');\n    }\n\n    return $window.localforage;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.api', [])\n    .config(config);\n\n  config.$inject = [];\n\n  function config() {}\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.api')\n    .factory('websocketService', websocketService);\n\n  websocketService.$inject = ['$log', '$rootScope', '$q', '$timeout', 'DS'];\n\n  function websocketService($log, $rootScope, $q, $timeout, DS) {\n\n    var ws = null;\n    var connectionTimer;\n    var callbacks = {};\n    var currentRequestId = 0;\n    var websocketService = {\n      close: close,\n      connect: connect,\n      reconnect: reconnect,\n      send: send\n    };\n\n    return websocketService;\n\n    /*\n     * Private function: _getRequestId()\n     */\n    function _getRequestId() {\n      currentRequestId = currentRequestId + 1;\n      if(currentRequestId > 10000) {\n        currentRequestId = 0;\n      }\n      return currentRequestId;\n    };\n\n\n    /*\n     * Public method: close()\n     */\n    function close() {\n      if(ws) {\n        ws.close();\n        ws = null;\n      }\n    }\n\n    /*\n     * Public method: connect()\n     */\n    function connect(url) {\n      if(ws) {\n        return;\n      }\n\n      if(angular.isUndefined(url)) {\n        $log.error('guh.api.websocketService:factory', 'Missing argument: url');\n      }\n\n      ws = new WebSocket(url);\n\n      // Timeout if connecting takes to long (can take up to 1 minute, with the timeout only 2 seconds)\n      connectionTimer = $timeout(function() {\n        ws.close();\n        ws = null;\n      }, 2000);\n\n      ws.onopen = function(event) {\n        if(connectionTimer) {\n          $timeout.cancel(connectionTimer);\n        }\n\n        // Send broadcast event\n        $rootScope.$apply(function() {\n          $rootScope.$broadcast('WebsocketConnected', 'Successful connected to guh.');\n        });\n      };\n\n      ws.onclose = function(event) {\n        // Safari is not calling onerror but calls onclose with code = 1006\n        if(event.code === 1006) {\n          $rootScope.$apply(function() {\n            $rootScope.$broadcast('WebsocketConnectionError', 'There was an error connecting to guh.');\n          });\n        } else {\n          // Send broadcast event\n          $rootScope.$apply(function() {\n            $rootScope.$broadcast('WebsocketConnectionLost', 'The app has lost the connection to guh. Please check if you are connected to your network and if guh is running correctly.');\n          });\n        }\n      };\n\n      ws.onerror = function(event) {\n        // Send broadcast event\n        $rootScope.$apply(function() {\n          $rootScope.$broadcast('WebsocketConnectionError', 'There was an error connecting to guh.');\n        });\n      };\n\n      ws.onmessage = function(message) {\n        var data = angular.fromJson(message.data);\n\n        if(angular.isDefined(data.notification)) {\n          switch(data.notification) {\n            // Devices.DeviceAdded\n            case 'Devices.DeviceAdded':\n              var deviceId = data.params.device.id;\n              var device = DS.get('device', deviceId);\n\n              if(angular.isUndefined(device)) {\n                var injectedItem = DS.inject('device', data.params.device);\n\n                // Send broadcast event\n                if(DS.is('device', injectedItem)) {\n                  $rootScope.$broadcast('ReloadView', injectedItem.deviceClass.name + ' was added.');\n                }          \n              }\n\n              break;\n\n\n            // TODO: Devices.DeviceChanged\n\n\n            // Devices.DeviceRemoved\n            case 'Devices.DeviceRemoved':\n              var deviceId = data.params.deviceId;\n              var ejectedItem = DS.eject('device', deviceId);\n\n              if(angular.isDefined(ejectedItem)) {\n                // Send broadcast event\n                $rootScope.$broadcast('ReloadView', 'Device was removed.', ejectedItem);\n              }\n\n              break;\n\n\n            // Devices.StateChanged\n            case 'Devices.StateChanged':\n              var deviceId = data.params.deviceId;\n              var stateTypeId = data.params.stateTypeId;\n              var value = data.params.value;\n              DS.inject('state', {\n                id: '' + deviceId + '_' + stateTypeId,\n                deviceId: deviceId,\n                stateTypeId: stateTypeId,\n                value: value\n              });\n              break;\n\n\n            // TODO: Events.EventTriggered\n\n\n            // TODO: Logging.LogDatabaseUpdated\n\n\n            // TODO: Logging.LogEntryAdded\n\n\n            // TODO: Rules.RuleActiveChanged\n\n\n            // Rules.RuleAdded\n            case 'Rules.RuleAdded':\n              var ruleId = data.params.rule.id;\n              var rule = DS.get('rule', ruleId);\n\n              if(angular.isUndefined(rule)) {\n                var injectedItem = DS.inject('rule', data.params.rule);\n\n                // Send broadcast event\n                if(DS.is('rule', injectedItem)) {\n                  $rootScope.$broadcast('ReloadView', injectedItem.name + ' was added.');\n                }\n              }\n\n              break;\n\n\n            // Rules.ConfigurationChanged\n            case 'Rules.ConfigurationChanged':\n              var rule = data.params.rule;\n              var injectedItem = DS.inject('rule', rule);\n\n              // Send broadcast event\n              if(DS.is('rule', injectedItem)) {\n                $rootScope.$broadcast('ReloadView', injectedItem.name + ' was updated.');\n              }\n\n              break;\n\n\n            // Rules.RuleRemoved\n            case 'Rules.RuleRemoved':\n              var ruleId = data.params.ruleId;\n              var ejectedItem = DS.eject('rule', ruleId);\n\n              if(angular.isDefined(ejectedItem)) {\n                // Send broadcast event\n                $rootScope.$broadcast('ReloadView', 'Rule was removed.');\n              }\n\n              break;\n\n\n            default:\n              // $log.warn('Type of notification not handled:', data);\n          }\n\n        // } else if(angular.isDefined(data.authenticationRequired)) {\n        } else if(angular.isDefined(data.id) && data.id === 0) {\n          $rootScope.$apply(function() {\n            $rootScope.$broadcast('InitialHandshake', data);\n          });\n        } else if(angular.isDefined(data.id)) {\n          if(data.status === 'success') {\n            if(angular.isDefined(data.params.deviceError) && data.params.deviceError !== 'DeviceErrorNoError') {\n              $rootScope.$apply(callbacks[data.id].callback.reject(data.params));\n            } else if(angular.isDefined(data.params.loggingError) && data.params.loggingError !== 'LoggingErrorNoError') {\n              $rootScope.$apply(callbacks[data.id].callback.reject(data.params));\n            } else if(angular.isDefined(data.params.ruleError) && data.params.ruleError !== 'RuleErrorNoError') {\n              $rootScope.$apply(callbacks[data.id].callback.reject(data.params));\n            } else if(angular.isDefined(data.params.loggingError) && data.params.loggingError !== 'LoggingErrorNoError') {\n              $rootScope.$apply(callbacks[data.id].callback.reject(data.params));\n            } else {\n              $rootScope.$apply(callbacks[data.id].callback.resolve(data.params));\n            }\n          } else {\n            $rootScope.$apply(callbacks[data.id].callback.reject(data.error));\n          }\n          \n          delete callbacks[data.id];\n        }\n      };\n    }\n\n    /*\n     * Public method: reconnect(url)\n     */\n    function reconnect(url) {\n      websocketService.close();\n      websocketService.connect(url);\n    }\n\n    /*\n     * Public method: send(request)\n     */\n    function send(request) {\n      var defer = $q.defer();\n      var requestId = _getRequestId();\n\n      callbacks[requestId] = {\n        time: new Date(),\n        callback: defer\n      };\n\n      request.id = requestId;\n\n      ws.send(angular.toJson(request));\n\n      return defer.promise;\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.utils', [])\n    .config(config);\n\n  config.$inject = [];\n\n  function config() {}\n\n  // module.exports = angular.module('guh.utils');\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n\n  angular\n    .module('guh.utils')\n    .factory('LocalForage', LocalForage);\n\n\n  LocalForage.$inject = ['$log'];\n\n  function LocalForage($log) {\n\n    // jshint unused:false \n    var LocalForage = {\n      localForageAdapter: new DSLocalForageAdapter(),\n      localForageStore: new JSData.DS()\n    };\n\n    return LocalForage;\n\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.utils')\n    .factory('File', FileFactory);\n\n  FileFactory.$inject = ['$log', '$templateCache'];\n\n  function FileFactory($log, $templateCache) {\n    \n    var File = {\n      checkFile: checkFile\n    };\n\n    return File;\n\n\n    /*\n     * Public method: checkFile(path, file)\n     */\n    function checkFile(path, file) {\n      // if(app.environment === 'production') {\n        // Production: One $templateCache entry per template\n        var cacheObject = $templateCache.get(path + file);\n\n        if(cacheObject !== undefined) {\n          return true;\n        } else {\n          return false;\n        }\n      /*} else if(app.environment === 'development') {\n        // Development: One HTML file per template\n        var request = new XMLHttpRequest();\n\n        request.open('HEAD', path + file, false);\n        request.send();\n\n        if(request.status === 200) {\n          return true;\n        } else {\n          return false;\n        }\n      }*/\n    }\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models', [\n      // Datastore\n      'js-data'\n    ])\n    .config(config);\n\n  config.$inject = ['DSProvider'];\n\n  function config(DSProvider) {\n    DSProvider\n      .defaults\n      .debug = false;\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSVendor', DSVendorFactory)\n    .run(function(DSVendor) {});\n\n  DSVendorFactory.$inject = ['$log', '$q', 'DS', 'websocketService'];\n\n  function DSVendorFactory($log, $q, DS, websocketService) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSVendor = DS.defineResource({\n\n      // API configuration\n      endpoint: 'vendors',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'vendor',\n      relations: {\n        hasMany: {\n          deviceClass: {\n            localField: 'deviceClasses',\n            foreignKey: 'vendorId'\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {}\n\n    });\n\n    angular.extend(DSVendor, {\n      load: load\n    });\n\n    return DSVendor;\n\n\n    function load() {\n      return websocketService\n        .send({\n          method: 'Devices.GetSupportedVendors'\n        })\n        .then(function(data) {\n          DSVendor.inject(data.vendors);\n          return DSVendor.getAll();\n        });\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSStateType', DSStateTypeFactory)\n    .run(function(DSStateType) {});\n\n  DSStateTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSStateTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSStateType = DS.defineResource({\n\n      // API configuration\n      endpoint: 'statetypes',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'stateType',\n      relations: {\n        hasMany: {\n          deviceClassStateType: {\n            localField: 'deviceClassStateTypes',\n            foreignKey: 'stateTypeId'\n          },\n        }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {},\n\n      // Lifecycle hooks\n      afterInject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _addUiData(resource, attrs);\n          });\n        } else {\n          _addUiData(resource, attrs);\n        }\n      }\n\n    });\n\n    return DSStateType;\n\n\n    /*\n     * Private method: _addUiData(resource, attrs)\n     */\n    function _addUiData(resource, attrs) {\n      var regExp = /\\s\\[([^)]+)\\]/;                 // Value inside brackets []\n      var searchUnit = name.replace(regExp, '');    // Get value inside brackets\n      var phrase = attrs.name;\n\n      // If name contains the unit in brackets []\n      if(regExp.test(name)) {\n        phrase = searchUnit;\n      }\n\n      // phrase\n      attrs.phrase = 'When value of ' + phrase;\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSState', DSStateFactory)\n    .run(function(DSState) {});\n\n  DSStateFactory.$inject = ['$log', '$q', 'DS', 'websocketService'];\n\n  function DSStateFactory($log, $q, DS, websocketService) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSState = DS.defineResource({\n\n      // API configuration\n      endpoint: 'states',\n\n      // Model configuration\n      // idAttribute: 'stateTypeId',\n      idAttribute: 'compoundId',\n      name: 'state',\n      relations: {\n        belongsTo: {\n          device: {\n            localField: 'device',\n            localKey: 'deviceId',\n            parent: true\n          }\n        },\n        hasOne: {\n          stateType: {\n            localField: 'stateType',\n            localKey: 'stateTypeId'\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {\n        compoundId: ['deviceId', 'stateTypeId', 'value', function (deviceId, stateTypeId, value) {\n          return '' + deviceId + '_' + stateTypeId;\n        }]\n      },\n\n      // Instance methods\n      methods: {}\n\n    });\n\n    angular.extend(DSState, {\n      load: load\n    });\n\n    return DSState;\n\n\n    function load(deviceId) {\n      return websocketService\n        .send({\n          method: 'Devices.GetStateValues',\n          params: {\n            deviceId: deviceId\n          }\n        })\n        .then(function(data) {\n          var states = data.values.map(function(state) {\n            state.deviceId = deviceId;\n            return state;\n          });\n          DSState.inject(states);\n          return DSState.getAll();\n        });\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSSettings', DSSettingsFactory)\n    .run(function(DSSettings) {});\n\n\n  DSSettingsFactory.$inject = ['$log', 'LocalForage'];\n\n  function DSSettingsFactory($log, LocalForage) {\n\n    LocalForage.localForageStore.registerAdapter('localForage', LocalForage.localForageAdapter, { default: true });\n\n    var DSSettings = LocalForage.localForageStore.defineResource({\n      name: 'settings',\n      relations: {\n        hasOne: {\n          serverInfo: {\n            localField: 'serverInfo',\n            foreignKey: 'settingsId'\n          }\n        },\n        hasMany: {\n          connection: {\n            localField: 'connections',\n            foreignKey: 'settingsId'\n          }\n        }\n      }\n    });\n\n    return DSSettings;\n\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSServerInfo', DSServerInfoFactory)\n    .run(function(DSServerInfo) {});\n\n\n  DSServerInfoFactory.$inject = ['$log', 'LocalForage'];\n\n  function DSServerInfoFactory($log, LocalForage) {\n\n    LocalForage.localForageStore.registerAdapter('localForage', LocalForage.localForageAdapter, { default: true });\n\n    var ServerInfo = LocalForage.localForageStore.defineResource({\n      name: 'serverInfo',\n      relations: {\n        belongsTo: {\n          settings: {\n            localField: 'settings',\n            foreignKey: 'settingsId',\n            parent: true\n          }\n        }\n      }\n    });\n\n    return ServerInfo;\n\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSRule', DSRuleFactory)\n    .run(function(DSRule) {});\n\n  DSRuleFactory.$inject = ['$log', '$q', 'DS', 'websocketService'];\n\n  function DSRuleFactory($log, $q, DS, websocketService) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSRule = DS.defineResource({\n\n      // API configuration\n      endpoint: 'rules',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'rule',\n      relations: {},\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {\n        // API\n        executeActions: executeActions,\n        executeExitActions: executeExitActions,\n        remove: remove\n      }\n\n    });\n\n    angular.extend(DSRule, {\n      load: load,\n      add: add\n    });\n\n    return DSRule;\n\n\n    function _loadDetails(ruleDescription) {\n      return websocketService\n        .send({\n          method: 'Rules.GetRuleDetails',\n          params: {\n            ruleId: ruleDescription.id\n          }\n        });\n    }\n\n    function load() {\n      return websocketService\n        .send({\n          method: 'Rules.GetRules'\n        })\n        .then(function(data) {\n          return $q.all(data.ruleDescriptions.map(function(ruleDescription) {\n            return _loadDetails(ruleDescription)\n              .then(function(data) {\n                DSRule.inject(data.rule);\n                return data.rule;\n              });\n          }));\n        })\n        .then(function(rules) {\n          return DSRule.getAll();\n        });\n    }\n\n    function add(rule) {\n      return websocketService.send({\n        method: 'Rules.AddRule',\n        params: rule\n      });\n    }\n\n    /*\n     * Public method: executeActions()\n     */\n    function executeActions() {\n      /* jshint validthis: true */\n      var self = this;\n\n      return websocketService.send({\n        method: 'Rules.ExecuteActions',\n        params: {\n          ruleId: self.id\n        }\n      });\n    }\n\n    /*\n     * Public method: executeExitActions()\n     */\n    function executeExitActions() {\n      /* jshint validthis: true */\n      var self = this;\n\n      return websocketService.send({\n        method: 'Rules.ExecuteExitActions',\n        params: {\n          ruleId: self.id\n        }\n      });\n    }\n\n    /*\n     * Public method: remove()\n     */\n    function remove() {\n      /* jshint validthis: true */\n      var self = this;\n\n      return websocketService.send({\n        method: 'Rules.RemoveRule',\n        params: {\n          ruleId: self.id\n        }\n      });\n    }\n\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSPluginParamType', DSPluginParamTypeFactory)\n    .run(function(DSPluginParamType) {});\n\n  DSPluginParamTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSPluginParamTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSPluginParamType = DS.defineResource({\n\n      // Model configuration\n      name: 'pluginParamType',\n      relations: {\n        belongsTo: {\n          plugin: {\n            localField: 'plugin',\n            localKey: 'pluginId'\n          },\n          paramType: {\n            localField: 'paramType',\n            localKey: 'paramTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSPluginParamType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSPlugin', DSPluginFactory)\n    .run(function(DSPlugin) {});\n\n  DSPluginFactory.$inject = ['$log', '$q', 'DS', 'websocketService'];\n\n  function DSPluginFactory($log, $q, DS, websocketService) {\n    \n    var staticMethods = {};\n    var pluginParamTypesId = 0;\n\n    /*\n     * DataStore configuration\n     */\n    var DSPlugin = DS.defineResource({\n\n      // API configuration\n      endpoint: 'plugins',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'plugin',\n      relations: {\n        hasMany: {\n          pluginParamType: {\n            localField: 'pluginParamTypes',\n            foreignKey: 'pluginId'\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {},\n\n      // Lifecycle hooks\n      afterInject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _createPluginParamTypes(resource, attrs);\n          });\n        } else {\n          _createPluginParamTypes(resource, attrs);\n        }\n      }\n\n    });\n\n    angular.extend(DSPlugin, {\n      load: load\n    });\n\n    return DSPlugin;\n\n\n    /*\n     * Private method: _createPluginParamTypes()\n     */\n    function _createPluginParamTypes(resource, attrs) {\n      var pluginParamTypes = DS.getAll('pluginParamType');\n      var paramTypes = attrs.paramTypes;\n      var pluginId = attrs.id;\n\n\n      // ParamTypes\n      angular.forEach(paramTypes, function(paramType) {\n        // Create paramType\n        var paramTypeInstance = DS.createInstance('paramType', paramType);\n        DS.inject('paramType', paramTypeInstance);\n\n        // Filtered actionTypeParamTypes\n        var pluginParamTypesFiltered = pluginParamTypes.filter(function(pluginParamType) {\n          return pluginParamType.pluginId === pluginId && pluginParamType.paramTypeId === paramType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(pluginParamTypesFiltered) && pluginParamTypesFiltered.length === 0) {\n          // Create membership (plugin <-> paramType)\n          pluginParamTypesId = pluginParamTypesId + 1;\n          var pluginParamTypeInstance = DS.createInstance('pluginParamType', {\n            id: pluginParamTypesId,\n            pluginId: pluginId,\n            paramTypeId: paramType.id\n          });\n          DS.inject('pluginParamType', pluginParamTypeInstance);\n        }\n      });\n    }\n\n\n    function load() {\n      return websocketService\n        .send({\n          method: 'Devices.GetPlugins'\n        })\n        .then(function(data) {\n          DSPlugin.inject(data.plugins);\n          return DSPlugin.getAll();\n        });\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSParamType', DSParamTypeFactory)\n    .run(function(DSParamType) {});\n\n  DSParamTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSParamTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSParamType = DS.defineResource({\n\n      // Model configuration\n      name: 'paramType',\n      relations: {\n        hasMany: {\n          deviceClassDiscoveryParamType: {\n            localField: 'deviceClassDiscoveryParamTypes',\n            foreignKey: 'paramTypeId'\n          },\n          deviceClassParamType: {\n            localField: 'deviceClassParamTypes',\n            foreignKey: 'paramTypeId'\n          },\n          actionTypeParamType: {\n            localField: 'actionTypeParamTypes',\n            foreignKey: 'paramTypeId'\n          },\n          eventTypeParamType: {\n            localField: 'eventTypeParamTypes',\n            foreignKey: 'paramTypeId'\n          },\n          pluginParamType: {\n            localField: 'pluginParamTypes',\n            foreignKey: 'paramTypeId'\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {}\n\n    });\n\n    return DSParamType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('modelsHelper', modelsHelper);\n\n  modelsHelper.$inject = ['$log', '$q', 'DS', 'File', 'app'];\n\n  function modelsHelper($log, $q, DS, File, app) {\n\n    var modelsHelper = {\n      checkTemplateUrl: checkTemplateUrl,\n      setBasePath: setBasePath\n    };\n\n    return modelsHelper;\n\n\n    /*\n     * Private method: _getValue(guhType)\n     */\n    function _getValue(guhType) {\n      var type = (guhType.type === undefined) ? null : guhType.type;\n      var value;\n\n      switch(type) {\n        case 'Bool':\n          value = guhType.defaultValue || false;\n          break;\n        case 'Int':\n        case 'Uint':\n          value = guhType.defaultValue || 0;\n          break;\n        case 'Double':\n          value = guhType.defaultValue || 0.0;\n          break;\n        case 'Color':\n          value = guhType.defaultValue || '0,0,0';\n          break;\n        case 'String':\n          value = guhType.defaultValue || '';\n          break;\n        default:\n          value = guhType.defaultValue || undefined;\n          break;\n      }\n\n      return value;\n    }\n    \n\n    /*\n     * Public method: checkTemplateUrl(templateUrl)\n     */\n    function checkTemplateUrl(templateUrl) {\n      var pathElements = templateUrl.split('/');\n      var file = pathElements.pop();\n      var path = pathElements.join('/') + '/';\n\n      if(templateUrl !== undefined && templateUrl !== '') {\n        var fileExists = $q.when(File.checkFile(path, file))\n          .then(function(fileExists) {\n            if(fileExists) {\n              // $log.log('Template available', templateUrl);\n              return templateUrl;\n            } else {\n              // $log.warn('Template NOT available', templateUrl);\n              return path + 'template-not-available.html'; \n            }\n          });\n\n        return fileExists;\n      } else {\n        return path + 'template-not-defined.html';\n      }\n    }\n\n    /*\n     * Public method: setBasePath()\n     */\n    function setBasePath() {      \n      DS\n        .defaults\n        .basePath = app.apiUrl;\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSLogging', DSLoggingFactory)\n    .run(function(DSLogging) {});\n\n  DSLoggingFactory.$inject = ['$log', 'DS', 'websocketService'];\n\n  function DSLoggingFactory($log, DS, websocketService) {\n    \n    /*\n     * DataStore configuration\n     */\n    var DSLogging = DS.defineResource({\n\n      // API configuration\n      endpoint: 'logging',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'logging',\n      relations: {},\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {}\n\n    });\n\n    angular.extend(DSLogging, {\n      getLogEntries: getLogEntries\n      // load: load,\n      // add: add,\n      // edit: edit,\n      // pair: pair,\n      // confirmPairing: confirmPairing\n    });\n\n    return DSLogging;\n\n\n    /*\n     * Public method: getLogEntries(filters)\n     */\n    function getLogEntries(filters) {\n      /* jshint validthis: true */\n      var self = this;\n      var jsonRpcParams = {};\n\n      // deviceIds\n      if(angular.isArray(filters.deviceIds) && filters.deviceIds.length > 0) {\n        jsonRpcParams.deviceIds = filters.deviceIds;\n      }\n\n      // eventTypes\n      if(angular.isArray(filters.eventTypes) && filters.eventTypes.length > 0) {\n        jsonRpcParams.eventTypes = filters.eventTypes;\n      }\n\n      // loggingLevels\n      if(angular.isArray(filters.loggingLevels) && filters.loggingLevels.length > 0) {\n        jsonRpcParams.loggingLevels = filters.loggingLevels;\n      }\n\n      // loggingSources\n      if(angular.isArray(filters.loggingSources) && filters.loggingSources.length > 0) {\n        jsonRpcParams.loggingSources = filters.loggingSources;\n      }\n\n      // timeFilters\n      if(angular.isArray(filters.timeFilters) && filters.timeFilters.length > 0) {\n        jsonRpcParams.timeFilters = filters.timeFilters;\n      }\n\n      // typeIds\n      if(angular.isArray(filters.typeIds) && filters.typeIds.length > 0) {\n        jsonRpcParams.typeIds = filters.typeIds;\n      }\n\n      // values\n      if(angular.isArray(filters.values) && filters.values.length > 0) {\n        jsonRpcParams.values = filters.values;\n      }\n\n      return websocketService.send({\n          method: 'Logging.GetLogEntries',\n          params: jsonRpcParams\n        });\n    }\n\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSEventTypeParamType', DSEventTypeParamTypeFactory)\n    .run(function(DSEventTypeParamType) {});\n\n  DSEventTypeParamTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSEventTypeParamTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSEventTypeParamType = DS.defineResource({\n\n      // Model configuration\n      name: 'eventTypeParamType',\n      relations: {\n        belongsTo: {\n          eventType: {\n            localField: 'eventType',\n            localKey: 'eventTypeId'\n          },\n          paramType: {\n            localField: 'paramType',\n            localKey: 'paramTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSEventTypeParamType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSEventType', DSEventTypeFactory)\n    .run(function(DSEventType) {});\n\n  DSEventTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSEventTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n    var eventTypeParamTypesId = 0;\n\n    /*\n     * DataStore configuration\n     */\n    var DSEventType = DS.defineResource({\n\n      // API configuration\n      endpoint: 'eventtypes',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'eventType',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId',\n            parent: true\n          }\n        },\n        hasMany: {\n          eventTypeParamType: {\n            localField: 'eventTypeParamTypes',\n            foreignKey: 'eventTypeId'\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {\n        getParamDescriptor: getParamDescriptor\n      },\n\n      // Lifecycle hooks\n      afterInject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _addUiData(resource, attrs);\n            _createEventTypeParamTypes(resource, attrs);\n          });\n        } else {\n          _addUiData(resource, attrs);\n          _createEventTypeParamTypes(resource, attrs);\n        }\n      }\n\n    });\n\n    return DSEventType;\n\n\n    /*\n     * Private method: _addUiData(resource, attrs)\n     */\n    function _addUiData(resource, attrs) {\n      var paramTypes = attrs.paramTypes;\n      var phrase = 'When ' + attrs.name;\n\n      // Add phrase for moods\n      if(angular.isArray(paramTypes) && paramTypes.length === 0) {\n        attrs.phrase = phrase + ' is detected';\n      } else {\n        attrs.phrase = phrase + ' is detected and parameters are';\n      }\n    }\n\n    /*\n     * Private method:_createEventTypeParamTypes()\n     */\n    function _createEventTypeParamTypes(resource, attrs) {\n      var eventTypeParamTypes = DS.getAll('eventTypeParamType');\n      var paramTypes = attrs.paramTypes;\n      var eventTypeId = attrs.id;\n\n\n      // ParamTypes\n      angular.forEach(paramTypes, function(paramType) {\n        // Create paramType\n        var paramTypeInstance = DS.createInstance('paramType', paramType);\n        DS.inject('paramType', paramTypeInstance);\n\n        // Filtered eventTypeParamTypes\n        var eventTypeParamTypesFiltered = eventTypeParamTypes.filter(function(eventTypeParamType) {\n          return eventTypeParamType.eventTypeId === eventTypeId && eventTypeParamType.paramTypeId === paramType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(eventTypeParamTypesFiltered) && eventTypeParamTypesFiltered.length === 0) {\n          // Create membership (deviceClass <-> paramType)\n          eventTypeParamTypesId = eventTypeParamTypesId + 1;\n          var eventTypeParamTypeInstance = DS.createInstance('eventTypeParamType', {\n            id: eventTypeParamTypesId,\n            eventTypeId: eventTypeId,\n            paramTypeId: paramType.id\n          });\n          DS.inject('eventTypeParamType', eventTypeParamTypeInstance);\n        }\n      });\n    }\n\n\n    /*\n     * Public method: getParamDescriptors(paramType, value, operator)\n     */\n    function getParamDescriptor(paramType, value, operator) {\n      var paramDescriptor = {};\n\n      paramDescriptor = {\n        name: paramType.name,\n        operator: operator,\n        value: value\n      };\n\n      return paramDescriptor;\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDevice', DSDeviceFactory)\n    .run(function(DSDevice) {});\n\n  DSDeviceFactory.$inject = ['$log', '$q', 'DS', 'websocketService'];\n\n  function DSDeviceFactory($log, $q, DS, websocketService) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSDevice = DS.defineResource({\n\n      // API configuration\n      endpoint: 'devices',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'device',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId'\n          }\n        }\n\n        // Not working (error: \"Doh! You just changed the primary key of an object!\") because states are injected before the state primary keys are generated\n        // hasMany: {\n        //   state: {\n        //     localField: 'states',\n        //     foreignKey: 'deviceId'\n        //   }\n        // }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {\n        executeAction: executeAction,\n        remove: remove,\n        getDescription: getDescription,\n        getEventDescriptor: getEventDescriptor,\n        getStateDescriptor: getStateDescriptor,\n        getAction: getAction\n      },\n\n      // Lifecycle hooks\n      afterInject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _createStates(resource, attrs);\n          });\n        } else {\n          _createStates(resource, attrs);\n        }\n      },\n\n      afterEject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _removeStates(resource, attrs);\n          });\n        } else {\n          _removeStates(resource, attrs);\n        }\n      }\n\n    });\n\n    angular.extend(DSDevice, {\n      load: load,\n      add: add,\n      edit: edit,\n      pair: pair,\n      confirmPairing: confirmPairing\n    });\n\n    return DSDevice;\n    \n\n    /*\n     * Private method: _createStates(resource, attrs);\n     */\n    function _createStates(resource, attrs) {\n      var deviceId = attrs.id;\n      var states = attrs.states;\n\n      angular.forEach(states, function(state, index) {\n        state.deviceId = deviceId;\n\n        var stateInstance = DS.createInstance('state', state);\n        DS.inject('state', stateInstance);\n\n        if(angular.isUndefined(attrs.states)) {\n          attrs.states = [];\n        }\n        attrs.states[index] = DS.get('state', '' + deviceId + '_' + state.stateTypeId);\n      });\n    }\n\n    /*\n     * Private method: _removeStates(resource, attrs)\n     */\n    function _removeStates(resource, attrs) {\n      var deviceId = attrs.id;\n      var states = attrs.states;\n\n      angular.forEach(states, function(state, index) {\n        var ejectedItem = DS.eject('state', '' + deviceId + '_' + state.stateTypeId);\n      });\n    }\n\n\n    function load() {\n      return websocketService\n        .send({\n          method: 'Devices.GetConfiguredDevices'\n        })\n        .then(function(data) {\n          DSDevice.inject(data.devices);\n          return DSDevice.getAll();\n        });\n    }\n\n    /*\n     * Public method: getDescription(delimiter)\n     */\n    function getDescription(delimiter) {\n      /* jshint validthis: true */\n      var self = this;\n      var vendorName = self.deviceClass.vendor.name;\n      var deviceClassName = self.deviceClass.name || '';\n\n      delimiter = delimiter || '-';\n\n      return (vendorName === deviceClassName) ? deviceClassName : (vendorName + delimiter + deviceClassName);\n    }\n\n    /*\n     * Public method: pair(deviceClassId, deviceDescriptorId, deviceParams, name)\n     */\n    function pair(deviceClassId, deviceDescriptorId, deviceParams, name) {\n      var params = {};\n\n      params.deviceClassId = deviceClassId || '';\n\n      if(angular.isDefined(deviceDescriptorId) && deviceDescriptorId !== '') {\n        params.deviceDescriptorId = deviceDescriptorId;\n      } else {\n        params.deviceParams = deviceParams || [];\n      }\n\n      if(angular.isDefined(name)) {\n        params.name = name;\n      }\n\n      return websocketService.send({\n        method: 'Devices.PairDevice',\n        params: params\n      });\n    }\n\n    /*\n     * Public method: confirmPairing(pairingTransactionId, secret)\n     */\n    function confirmPairing(pairingTransactionId, secret) {\n      var params = {};\n      \n      params.pairingTransactionId = pairingTransactionId;\n\n      if(secret) {\n        params.secret = secret;\n      }\n\n      return websocketService.send({\n        method: 'Devices.ConfirmPairing',\n        params: params\n      }); \n    }\n\n    /*\n     * Public method: add(deviceClassId, deviceDescriptorId, deviceParams, name)\n     */\n    function add(deviceClassId, deviceDescriptorId, deviceParams, name) {\n      var params = {};\n\n      // name\n      if(angular.isDefined(name) && name !== '') {\n        params.name = name;\n      }\n\n      // deviceClassId\n      if(angular.isDefined(deviceClassId) && deviceClassId  !== '') {\n        params.deviceClassId = deviceClassId;\n      }\n\n      // deviceDescriptorId or deviceParams\n      if(angular.isDefined(deviceDescriptorId) && deviceDescriptorId !== '') {\n        params.deviceDescriptorId = deviceDescriptorId;\n      } else if(angular.isDefined(deviceParams) && deviceParams !== []) {\n        params.deviceParams = deviceParams;\n      }\n\n      // Device gets inserted when notification \"Devices.DeviceAdded\" was received\n      return websocketService.send({\n        method: 'Devices.AddConfiguredDevice',\n        params: params\n      });\n    }\n\n    /*\n     * Public method: edit(deviceId, deviceData)\n     */\n    function edit(deviceId, deviceData) {\n      var device = {};\n      deviceData = deviceData || {};\n\n      device.deviceDescriptorId = deviceData.id || '';\n\n      device.deviceParams = [];\n      angular.forEach(deviceData.deviceParamTypes, function(deviceParamType) {\n        var deviceParam = {};\n\n        deviceParam.name = deviceParamType.name;\n        deviceParam.value = deviceParamType.value;\n\n        device.deviceParams.push(deviceParam);\n      });\n\n      return DSDevice.update(deviceId, {device: device});\n    }\n\n    /*\n     * Public method: executeAction()\n     */\n    function executeAction(actionType, params) {\n      /* jshint validthis: true */\n      var self = this;\n      var jsonRpcParams = {\n        actionTypeId: actionType.id,\n        deviceId: self.id\n      };\n\n      if(angular.isDefined(params) && params !== {}) {\n        jsonRpcParams.params = params;\n      }\n\n      return websocketService.send({\n        method: 'Actions.ExecuteAction',\n        params: jsonRpcParams\n      });\n    }\n\n    /*\n     * Public method: remove()\n     */\n    function remove(params) {\n      /* jshint validthis: true */\n      var self = this;\n      var jsonRpcParams = {\n        deviceId: self.id\n      };\n\n      if(angular.isDefined(params) && params !== {}) {\n        angular.forEach(params, function(value, key) {\n          jsonRpcParams[key] = value;\n        });\n      }\n\n      return websocketService.send({\n        method: 'Devices.RemoveConfiguredDevice',\n        params: jsonRpcParams\n      });\n    }\n\n    /*\n     * Public method: getEventDescriptor(eventType, paramDescriptors)\n     */\n    function getEventDescriptor(eventType, paramDescriptors) {\n      /* jshint validthis: true */\n      var self = this;\n      var eventDescriptor = {};\n\n      eventDescriptor.deviceId = self.id;\n      eventDescriptor.eventTypeId = eventType.id;\n\n      if(angular.isDefined(paramDescriptors) && paramDescriptors.length > 0) {\n        eventDescriptor.paramDescriptors = paramDescriptors;\n      }\n\n      return eventDescriptor;     \n    }\n\n    /*\n     * Public method: getStateDescriptor(stateType, paramDescriptor)\n     */\n    function getStateDescriptor(stateType, paramDescriptor) {\n      /* jshint validthis: true */\n      var self = this;\n      var stateDescriptor = {};\n\n      stateDescriptor.deviceId = self.id;\n      stateDescriptor.operator = paramDescriptor.operator;\n      stateDescriptor.stateTypeId = stateType.id;\n      stateDescriptor.value = paramDescriptor.value;\n      \n      return stateDescriptor;\n    }\n\n\n    /*\n     * Public method: getAction(actionType, params)\n     */\n    function getAction(actionType, params) {\n      /* jshint validthis: true */\n      var self = this;\n      var action = {};\n      var ruleActionParams = [];\n\n      ruleActionParams = actionType.getRuleActionParams(params);\n      if(ruleActionParams.length > 0) {\n        action.ruleActionParams = ruleActionParams;\n      }\n\n      action.actionTypeId = actionType.id;\n      action.deviceId = self.id;\n\n      return action;\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDeviceClassStateType', DSDeviceClassStateTypeFactory)\n    .run(function(DSDeviceClassStateType) {});\n\n  DSDeviceClassStateTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSDeviceClassStateTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSDeviceClassStateType = DS.defineResource({\n\n      // Model configuration\n      name: 'deviceClassStateType',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId'\n          },\n          stateType: {\n            localField: 'stateType',\n            localKey: 'stateTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSDeviceClassStateType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDeviceClassParamType', DSDeviceClassParamTypeFactory)\n    .run(function(DSDeviceClassParamType) {});\n\n  DSDeviceClassParamTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSDeviceClassParamTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSDeviceClassParamType = DS.defineResource({\n\n      // Model configuration\n      name: 'deviceClassParamType',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId'\n          },\n          paramType: {\n            localField: 'paramType',\n            localKey: 'paramTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSDeviceClassParamType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDeviceClass', DSDeviceClassFactory)\n    .run(function(DSDeviceClass) {});\n\n  DSDeviceClassFactory.$inject = ['$log', '$q', 'DS', '_', 'websocketService', 'modelsHelper', 'DSDeviceClassParamType', 'DSDeviceClassActionType', 'DSDeviceClassEventType', 'DSDeviceClassStateType'];\n\n  function DSDeviceClassFactory($log, $q, DS, _, websocketService, modelsHelper, DSDeviceClassParamType, DSDeviceClassActionType, DSDeviceClassEventType, DSDeviceClassStateType) {\n    \n    var staticMethods = {};\n    var deviceClassDiscoveryParamTypesId = 0;\n    var deviceClassParamTypesId = 0;\n    var deviceClassActionTypesId = 0;\n    var deviceClassEventTypesId = 0;\n    var deviceClassStateTypesId = 0;\n\n    /*\n     * DataStore configuration\n     */\n    var DSDeviceClass = DS.defineResource({\n\n      // API configuration\n      endpoint: 'deviceclasses',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'deviceClass',\n      relations: {\n        belongsTo: {\n          vendor: {\n            localField: 'vendor',\n            localKey: 'vendorId',\n            // parent: true\n          }\n        },\n        hasMany: {\n          deviceClassDiscoveryParamType: {\n            localField: 'deviceClassDiscoveryParamTypes',\n            foreignKey: 'deviceClassId'\n          },\n          deviceClassParamType: {\n            localField: 'deviceClassParamTypes',\n            foreignKey: 'deviceClassId'\n          },\n          deviceClassActionType: {\n            localField: 'deviceClassActionTypes',\n            foreignKey: 'deviceClassId'\n          },\n          deviceClassEventType: {\n            localField: 'deviceClassEventTypes',\n            foreignKey: 'deviceClassId'\n          },\n          deviceClassStateType: {\n            localField: 'deviceClassStateTypes',\n            foreignKey: 'deviceClassId'\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {\n        templateUrl: ['name', _addUiTemplate]\n      },\n\n      // Instance methods\n      methods: {\n        discover: discover,\n        getCreateMethod: getCreateMethod,\n        getSetupMethod: getSetupMethod\n      },\n\n      // Lifecycle hooks\n      afterInject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _mapStates(resource, attrs);\n            _createDeviceClassParamTypes(resource, attrs);\n          });\n        } else {\n          _mapStates(resource, attrs);\n          _createDeviceClassParamTypes(resource, attrs);\n        }\n      }\n\n    });\n\n    DSDeviceClass.getAllActionTypes = function(deviceClassId) {\n      var deviceClassActionTypes = DSDeviceClassActionType.getAll();\n      var deviceClassActionTypesFiltered = deviceClassActionTypes.filter(function(deviceClassActionType) {\n        return deviceClassActionType.deviceClassId === deviceClassId;\n      });\n      var deviceClass = DS.get('deviceClass', deviceClassId);\n      var actionTypes = [];\n\n      angular.forEach(deviceClassActionTypesFiltered, function(deviceClassActionType) {\n        if(deviceClassActionType.deviceClassId === deviceClassId) {\n          var actionType = DS.get('actionType', deviceClassActionType.actionTypeId);\n          actionTypes.push(actionType);\n        }\n      });\n\n      return actionTypes;\n    };\n\n    DSDeviceClass.getAllEventTypes = function(deviceClassId) {\n      var deviceClassEventTypes = DSDeviceClassEventType.getAll();\n      var deviceClassEventTypesFiltered = deviceClassEventTypes.filter(function(deviceClassEventType) {\n        return deviceClassEventType.deviceClassId === deviceClassId;\n      });\n      var deviceClass = DS.get('deviceClass', deviceClassId);\n      var eventTypes = [];\n\n      angular.forEach(deviceClassEventTypesFiltered, function(deviceClassEventType) {\n        if(deviceClassEventType.deviceClassId === deviceClassId) {\n          var eventType = DS.get('eventType', deviceClassEventType.eventTypeId);\n          eventTypes.push(eventType);\n        }\n      });\n\n      return eventTypes;\n    };\n\n    DSDeviceClass.getAllStateTypes = function(deviceClassId) {\n      var deviceClassStateTypes = DSDeviceClassStateType.getAll();\n      var deviceClassStateTypesFiltered = deviceClassStateTypes.filter(function(deviceClassStateType) {\n        return deviceClassStateType.deviceClassId === deviceClassId;\n      });\n      var deviceClass = DS.get('deviceClass', deviceClassId);\n      var stateTypes = [];\n\n      angular.forEach(deviceClassStateTypesFiltered, function(deviceClassStateType) {\n        if(deviceClassStateType.deviceClassId === deviceClassId) {\n          var stateType = DS.get('stateType', deviceClassStateType.stateTypeId);\n          stateTypes.push(stateType);\n        }\n      });\n\n      return stateTypes;\n    };\n\n    angular.extend(DSDeviceClass, {\n      load: load\n    });\n\n    return DSDeviceClass;\n\n\n    function load() {\n      return websocketService\n        .send({\n          method: 'Devices.GetSupportedDevices'\n        })\n        .then(function(data) {\n          DSDeviceClass.inject(data.deviceClasses);\n          return DSDeviceClass.getAll();\n        });\n    }\n\n\n    /*\n     * Private method: _getInputPath(name, filename)\n     */\n    function _getInputPath(name, filename) {\n      return 'app/containers/thing-details/device-class-templates/' + filename + '.html';\n    }\n\n    /*\n     * Private method: _addUiTemplate(name)\n     */\n    function _addUiTemplate(name) {\n      // Example: 'Elro Remote' => 'elro-remote'\n      var templateName = name\n        .toLowerCase()\n        .replace(/\\s/g, '-')\n        .replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, '');\n      var templateUrl = _getInputPath(name, 'device-class-' + templateName);\n\n      return modelsHelper.checkTemplateUrl(templateUrl);\n    }\n\n    /*\n     * Private method:_createDeviceClassParamTypes()\n     */\n    function _createDeviceClassParamTypes(resource, attrs) {\n      var deviceClassDiscoveryParamTypes = DS.getAll('deviceClassDiscoveryParamType');\n      var deviceClassParamTypes = DS.getAll('deviceClassParamType');\n      var deviceClassActionTypes = DS.getAll('deviceClassActionType');\n      var deviceClassEventTypes = DS.getAll('deviceClassEventType');\n      var deviceClassStateTypes = DS.getAll('deviceClassStateType');\n      var discoveryParamTypes = attrs.discoveryParamTypes;\n      var paramTypes = attrs.paramTypes;\n      var actionTypes = attrs.actionTypes;\n      var eventTypes = attrs.eventTypes;\n      var stateTypes = attrs.stateTypes;\n      var deviceClassId = attrs.id;\n\n\n      // DiscoveryParamTypes\n      angular.forEach(discoveryParamTypes, function(discoveryParamType) {\n        // Create discoveryParamType\n        var discoveryParamTypeInstance = DS.createInstance('paramType', discoveryParamType);\n        DS.inject('paramType', discoveryParamTypeInstance);\n\n        // Filtered deviceClassDiscoveryParamTypes\n        var deviceClassDiscoveryParamTypesFiltered = deviceClassDiscoveryParamTypes.filter(function(deviceClassDiscoveryParamType) {\n          return deviceClassDiscoveryParamType.deviceClassId === deviceClassId && deviceClassDiscoveryParamType.paramTypeId === discoveryParamType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(deviceClassDiscoveryParamTypesFiltered) && deviceClassDiscoveryParamTypesFiltered.length === 0) {\n          // Create membership (deviceClass <-> discoveryParamType)\n          deviceClassDiscoveryParamTypesId = deviceClassDiscoveryParamTypesId + 1;\n          var deviceClassDiscoveryParamTypeInstance = DS.createInstance('deviceClassDiscoveryParamType', {\n            id: deviceClassDiscoveryParamTypesId,\n            deviceClassId: deviceClassId,\n            paramTypeId: discoveryParamType.id\n          });\n          DS.inject('deviceClassDiscoveryParamType', deviceClassDiscoveryParamTypeInstance);\n        }\n      });\n\n      // ParamTypes\n      angular.forEach(paramTypes, function(paramType) {\n        // Create paramType\n        var paramTypeInstance = DS.createInstance('paramType', paramType);\n        DS.inject('paramType', paramTypeInstance);\n\n        // Filtered deviceClassParamTypes\n        var deviceClassParamTypesFiltered = deviceClassParamTypes.filter(function(deviceClassParamType) {\n          return deviceClassParamType.deviceClassId === deviceClassId && deviceClassParamType.paramTypeId === paramType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(deviceClassParamTypesFiltered) && deviceClassParamTypesFiltered.length === 0) {\n          // Create membership (deviceClass <-> paramType)\n          deviceClassParamTypesId = deviceClassParamTypesId + 1;\n          var deviceClassParamTypeInstance = DS.createInstance('deviceClassParamType', {\n            id: deviceClassParamTypesId,\n            deviceClassId: deviceClassId,\n            paramTypeId: paramType.id\n          });\n          DS.inject('deviceClassParamType', deviceClassParamTypeInstance);\n        }\n      });\n\n      // ActionTypes\n      angular.forEach(actionTypes, function(actionType) {\n        // Create actionType\n        var actionTypeInstance = DS.createInstance('actionType', actionType);\n        DS.inject('actionType', actionTypeInstance);\n\n        // Filtered deviceClassActionTypes\n        var deviceClassActionTypesFiltered = deviceClassActionTypes.filter(function(deviceClassActionType) {\n          return deviceClassActionType.deviceClassId === deviceClassId && deviceClassActionType.actionTypeId === actionType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(deviceClassActionTypesFiltered) && deviceClassActionTypesFiltered.length === 0) {\n          // Create membership (deviceClass <-> actionType)\n          deviceClassActionTypesId = deviceClassActionTypesId + 1;\n          var deviceClassActionTypeInstance = DS.createInstance('deviceClassActionType', {\n            id: deviceClassActionTypesId,\n            deviceClassId: deviceClassId,\n            actionTypeId: actionType.id\n          });\n          DS.inject('deviceClassActionType', deviceClassActionTypeInstance);\n        }\n      });\n\n      // EventTypes\n      angular.forEach(eventTypes, function(eventType) {\n        // Create eventType\n        var eventTypeInstance = DS.createInstance('eventType', eventType);\n        DS.inject('eventType', eventTypeInstance);\n\n        // Filtered deviceClassEventTypes\n        var deviceClassEventTypesFiltered = deviceClassEventTypes.filter(function(deviceClassEventType) {\n          return deviceClassEventType.deviceClassId === deviceClassId && deviceClassEventType.eventTypeId === eventType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(deviceClassEventTypesFiltered) && deviceClassEventTypesFiltered.length === 0) {\n          // Create membership (deviceClass <-> eventType)\n          deviceClassEventTypesId = deviceClassEventTypesId + 1;\n          var deviceClassEventTypeInstance = DS.createInstance('deviceClassEventType', {\n            id: deviceClassEventTypesId,\n            deviceClassId: deviceClassId,\n            eventTypeId: eventType.id\n          });\n          DS.inject('deviceClassEventType', deviceClassEventTypeInstance);\n        }\n      });\n\n      // StateTypes\n      angular.forEach(stateTypes, function(stateType) {\n        // Create stateType\n        var stateTypeInstance = DS.createInstance('stateType', stateType);\n        DS.inject('stateType', stateTypeInstance);\n\n        // Filtered deviceClassStateTypes\n        var deviceClassStateTypesFiltered = deviceClassStateTypes.filter(function(deviceClassStateType) {\n          return deviceClassStateType.deviceClassId === deviceClassId && deviceClassStateType.stateTypeId === stateType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(deviceClassStateTypesFiltered) && deviceClassStateTypesFiltered.length === 0) {\n          // Create membership (deviceClass <-> actionType)\n          deviceClassStateTypesId = deviceClassStateTypesId + 1;\n          var deviceClassStateTypeInstance = DS.createInstance('deviceClassStateType', {\n            id: deviceClassStateTypesId,\n            deviceClassId: deviceClassId,\n            stateTypeId: stateType.id\n          });\n          DS.inject('deviceClassStateType', deviceClassStateTypeInstance);\n        }\n      });\n    }\n\n    /*\n     * Private method: _mapStates(resource, attrs)\n     */\n    function _mapStates(resource, attrs) {\n      var actionTypes = attrs.actionTypes;\n      var eventTypes = attrs.eventTypes;\n      var stateTypes = attrs.stateTypes;\n      // var stateIds = libs._.pluck(stateTypes, 'id');\n      var stateIds = _.pluck(stateTypes, 'id');\n\n      // Map actionTypes\n      angular.forEach(actionTypes, function(actionType) {\n        // Check if current actionType belongs to a stateType\n        if(_.contains(stateIds, actionType.id)) {\n          actionType.hasState = true;\n        } else {\n          actionType.hasState = false;\n        }\n      });\n\n      // Map eventTypes\n      angular.forEach(eventTypes, function(eventType) {\n        // Check if current eventType belongs to a stateType\n        if(_.contains(stateIds, eventType.id)) {\n          eventType.hasState = true;\n        } else {\n          eventType.hasState = false;\n        }\n      });\n    }\n\n\n    /*\n     * Public method: discover(discoveryParams)\n     */\n    function discover(discoveryParams) {\n      /* jshint validthis: true */\n      var self = this;\n\n      return websocketService.send({\n        method: 'Devices.GetDiscoveredDevices',\n        params: {\n          deviceClassId: self.id,\n          discoveryParams: discoveryParams\n        }\n      });\n    }\n\n    /*\n     * Public method: getCreateMethod()\n     */\n    function getCreateMethod() {\n      /* jshint validthis: true */\n      var self = this;\n      var basePath = 'app/components/create-thing/templates/';\n      var createMethodData = null;\n\n      if(self.createMethods.indexOf('CreateMethodDiscovery') > -1) {\n        createMethodData = {\n          title: 'Discovery',\n          template: basePath + 'create-thing-discovery.html'\n        };\n      } else if(self.createMethods.indexOf('CreateMethodUser') > -1) {\n        createMethodData = {\n          title: 'User',\n          template: basePath + 'create-thing-user.html'\n        };\n      } else if(self.createMethods.indexOf('CreateMethodAuto') > -1) {\n        createMethodData = {\n          title: 'Auto',\n          template: null\n        };\n      } else {\n        $log.error('CreateMethod not implemented.');\n      }\n\n      return createMethodData;\n    }\n\n    /*\n     * Public method: getSetupMethod()\n     */\n    function getSetupMethod() {\n      /* jshint validthis: true */\n      var self = this;\n      var basePath = 'app/components/setup-thing/templates/';\n      var setupMethodData = {};\n\n      switch(self.setupMethod) {\n        case 'SetupMethodJustAdd':\n          setupMethodData = null;\n          break;\n        case 'SetupMethodDisplayPin':\n          setupMethodData = {\n            title: 'Display Pin',\n            template: basePath + 'setup-thing-display-pin.html'\n          };\n          break;\n        case 'SetupMethodEnterPin':\n          setupMethodData = {\n            title: 'Enter Pin',\n            template: basePath + 'setup-thing-enter-pin.html'\n          };\n          break;\n        case 'SetupMethodPushButton':\n          setupMethodData = {\n            title: 'Push Button',\n            template: basePath + 'setup-thing-push-button.html'\n          };\n          break;\n        default:\n          $log.error('SetupMethod not implemented.');\n          break;\n      }\n\n      return setupMethodData;\n    }\n\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDeviceClassEventType', DSDeviceClassEventTypeFactory)\n    .run(function(DSDeviceClassEventType) {});\n\n  DSDeviceClassEventTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSDeviceClassEventTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSDeviceClassEventType = DS.defineResource({\n\n      // Model configuration\n      name: 'deviceClassEventType',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId'\n          },\n          eventType: {\n            localField: 'eventType',\n            localKey: 'eventTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSDeviceClassEventType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDeviceClassDiscoveryParamType', DSDeviceClassDiscoveryParamTypeFactory)\n    .run(function(DSDeviceClassDiscoveryParamType) {});\n\n  DSDeviceClassDiscoveryParamTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSDeviceClassDiscoveryParamTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSDeviceClassDiscoveryParamType = DS.defineResource({\n\n      // Model configuration\n      name: 'deviceClassDiscoveryParamType',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId'\n          },\n          paramType: {\n            localField: 'discoveryParamType',\n            localKey: 'paramTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSDeviceClassDiscoveryParamType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDeviceClassActionType', DSDeviceClassActionTypeFactory)\n    .run(function(DSDeviceClassActionType) {});\n\n  DSDeviceClassActionTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSDeviceClassActionTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSDeviceClassActionType = DS.defineResource({\n\n      // Model configuration\n      name: 'deviceClassActionType',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId'\n          },\n          actionType: {\n            localField: 'actionType',\n            localKey: 'actionTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSDeviceClassActionType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSConnection', DSConnectionFactory)\n    .run(function(DSConnection) {});\n\n\n  DSConnectionFactory.$inject = ['$log', 'LocalForage'];\n\n  function DSConnectionFactory($log, LocalForage) {\n\n    LocalForage.localForageStore.registerAdapter('localForage', LocalForage.localForageAdapter, { default: true });\n\n    var Connection = LocalForage.localForageStore.defineResource({\n      name: 'connection',\n      relations: {\n        belongsTo: {\n          settings: {\n            localField: 'settings',\n            localKey: 'settingsId',\n            parent: true\n          }\n        }\n      }\n    });\n\n    return Connection;\n\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSActionTypeParamType', DSActionTypeParamTypeFactory)\n    .run(function(DSActionTypeParamType) {});\n\n  DSActionTypeParamTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSActionTypeParamTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSActionTypeParamType = DS.defineResource({\n\n      // Model configuration\n      name: 'actionTypeParamType',\n      relations: {\n        belongsTo: {\n          actionType: {\n            localField: 'actionType',\n            localKey: 'actionTypeId'\n          },\n          paramType: {\n            localField: 'paramType',\n            localKey: 'paramTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSActionTypeParamType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSActionType', DSActionTypeFactory)\n    .run(function(DSActionType) {});\n\n  DSActionTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSActionTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n    var actionTypeParamTypesId = 0;\n\n    /*\n     * DataStore configuration\n     */\n    var DSActionType = DS.defineResource({\n\n      // API configuration\n      endpoint: 'actiontypes',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'actionType',\n      relations: {\n        hasMany: {\n          deviceClassActionType: {\n            localField: 'deviceClassActionTypes',\n            foreignKey: 'actionTypeId'\n          },\n          actionTypeParamType: {\n            localField: 'actionTypeParamTypes',\n            foreignKey: 'actionTypeId'\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {\n        getParams: getParams,\n        getRuleActionParams: getRuleActionParams\n      },\n\n      // Lifecycle hooks\n      afterInject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _addUiData(resource, attrs);\n            _createActionTypeParamTypes(resource, attrs);\n          });\n        } else {\n          _addUiData(resource, attrs);\n          _createActionTypeParamTypes(resource, attrs);\n        }\n      }\n\n    });\n\n    return DSActionType;\n\n\n    /*\n     * Private method: _addUiData(resource, attrs)\n     */\n    function _addUiData(resource, attrs) {\n      var paramTypes = attrs.paramTypes;\n      \n      attrs.phrase = 'Execute \"' + attrs.name + '\"';\n\n      // Add phrase for moods\n      if(angular.isArray(paramTypes) && paramTypes.length > 0) {\n        attrs.phrase = attrs.phrase + ' with parameters';\n      }\n    }\n\n    /*\n     * Private method:_createActionTypeParamTypes()\n     */\n    function _createActionTypeParamTypes(resource, attrs) {\n      var actionTypeParamTypes = DS.getAll('actionTypeParamType');\n      var paramTypes = attrs.paramTypes;\n      var actionTypeId = attrs.id;\n\n\n      // ParamTypes\n      angular.forEach(paramTypes, function(paramType) {\n        // Create paramType\n        var paramTypeInstance = DS.createInstance('paramType', paramType);\n        DS.inject('paramType', paramTypeInstance);\n\n        // Filtered actionTypeParamTypes\n        var actionTypeParamTypesFiltered = actionTypeParamTypes.filter(function(actionTypeParamType) {\n          return actionTypeParamType.actionTypeId === actionTypeId && actionTypeParamType.paramTypeId === paramType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(actionTypeParamTypesFiltered) && actionTypeParamTypesFiltered.length === 0) {\n          // Create membership (deviceClass <-> paramType)\n          actionTypeParamTypesId = actionTypeParamTypesId + 1;\n          var actionTypeParamTypeInstance = DS.createInstance('actionTypeParamType', {\n            id: actionTypeParamTypesId,\n            actionTypeId: actionTypeId,\n            paramTypeId: paramType.id\n          });\n          DS.inject('actionTypeParamType', actionTypeParamTypeInstance);\n        }\n      });\n    }\n\n\n    /*\n     * Public method: getParams()\n     */\n    function getParams() {\n      /* jshint validthis: true */\n      var self = this;\n      var params = [];\n      var paramTypes = self.paramTypes;\n\n      angular.forEach(paramTypes, function(paramType) {\n        params.push({\n          id: paramType.id,\n          value: paramType.value\n        });\n      });\n\n      return params;\n    }\n\n    /*\n     * Public method: getRuleActionParams(params, actionParamType, eventParamType)\n     */\n    function getRuleActionParams(params, actionParamType, eventParamType) {\n      /* jshint validthis: true */\n      var self = this;\n      var ruleActionParams = [];\n\n      angular.forEach(params, function(param) {\n        if(actionParamType !== undefined && eventParamType !== undefined) {\n          if(param.paramTypeId === actionParamType.id) {\n            ruleActionParams.push({\n              paramTypeId: param.paramTypeId,\n              eventParamName: eventParamType.name,\n              eventTypeId: eventParamType.eventDescriptor.eventTypeId\n            });\n          } else {\n            ruleActionParams.push({\n              paramTypeId: param.paramTypeId,\n              value: param.value\n            });\n          }\n        } else {\n          ruleActionParams.push({\n            paramTypeId: param.paramTypeId,\n            value: param.value\n          });\n        }\n      });\n\n      return ruleActionParams;\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.logging', [\n      'guh.logging.hooks'\n    ])\n    .config(config);\n\n  config.$inject = ['$provide'];\n\n  function config($provide) {\n    // Exceptions\n    // $provide.decorator('$exceptionHandler', ['$injector', '$delegate', 'Logging', function($injector, $delegate, Logging) {\n    //   if(!Logging.angularServiceEnhanced.$exceptionHandler) {\n    //     return $delegate;\n    //   }\n\n    //   return function(exception, cause) {\n    //     $delegate(exception, cause);\n    //   }\n    // }]);\n\n    // Logs\n    $provide.decorator('$log', ['$injector', '$delegate', 'guhLogging', function($injector, $delegate, guhLogging) {\n      var decorator = {\n        log: log,\n        info: info,\n        warn: warn,\n        error: error\n      };\n\n      return decorator;\n\n\n      function _applyCallbacks(logType, args) {\n        var logTypeData = guhLogging.getLogType(logType);\n\n        // Pre callbacks\n        angular.forEach(logTypeData.preCallbacks, function(preCallbackProvider) {\n          var preCallback = $injector.get(preCallbackProvider);\n          preCallback.call(preCallback, {\n            type: logType,\n            args: args\n          });\n        });\n\n        // Console\n        if(guhLogging.isEnhanced(logType)) {\n          $delegate[logType].apply($delegate, args);\n          guhLogging[logType].apply(null, args);\n        } else {\n          $delegate[logType].apply($delegate, args);\n        }\n\n        // Post callbacks\n        angular.forEach(logTypeData.postCallbacks, function(postCallbackProvider) {\n          var postCallback = $injector.get(postCallbackProvider);\n          postCallback.call(postCallback, {\n            type: logType,\n            args: args\n          });\n        });\n      }\n\n      function log() {\n        var args = arguments;\n        _applyCallbacks('log', args);\n      }\n\n      function info() {\n        var args = arguments;\n        _applyCallbacks('info', args);\n      }\n\n      function warn() {\n        var args = arguments;\n        _applyCallbacks('warn', args);\n      }\n\n      function error() {\n        var args = arguments;\n        _applyCallbacks('error', args);\n      }\n    }]);\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.logging')\n    .provider('guhLogging', Logging);\n\n  Logging.$inject = ['$injector'];\n\n  function Logging($injector) {\n    var _logTypes = {\n      log: {},\n      info: {},\n      warn: {},\n      error: {}\n    };\n\n    var _hooks = {\n      http: 'guhLoggingHttpHook',\n      broadcast: 'guhLoggingBroadcastHook',\n      websocket: null\n    };\n\n    var provider = {\n      $get: $get,\n      enhance: enhance,\n      before: before,\n      after: after,\n      decorate: decorate\n    };\n\n    return provider;\n\n\n    // function _getArrayFromString(string) {\n    //   if(!angular.isString(string)) {\n    //     return;\n    //   }\n    // }\n\n    function _addHooks(prePost, logTypes, hooks) {\n      try {\n        if(angular.isUndefined(logTypes) || logTypes === null || !angular.isString(logTypes)) {\n          throw 'Wrong argument type. The argument \"logTypes\" should be a comma seperated String.';\n        }\n        if(angular.isDefined(hooks) && hooks !== null && !angular.isString(hooks)) {\n          throw 'Wrong argument type. The argument \"hooks\" should be a comma seperated String.';\n        }\n      } catch(error) {\n        return error;\n      }\n\n      var logTypesArray = logTypes.replace(/\\s+/g, '').split(',');\n      var hooksArray = hooks.replace(/\\s+/g, '').split(',');\n      var logTypeCallbacks = [];\n\n      // Check hooks\n      var callback;\n      angular.forEach(hooksArray, function(hook) {\n        if(angular.isDefined(_hooks[hook]) && _hooks[hook] !== null) {\n          logTypeCallbacks.push(_hooks[hook]);\n        }\n      });\n\n      // Initialize all log types with preCallbacks = [] / postCallbacks = []\n      angular.forEach(_logTypes, function(_logType) {\n        _logType[prePost + 'Callbacks'] = [];\n      });\n\n      // Set defined callbacks for log types\n      angular.forEach(logTypesArray, function(logType) {\n        if(angular.isDefined(_logTypes[logType])) {\n          _logTypes[logType][prePost + 'Callbacks'] = logTypeCallbacks;\n        }\n      });\n    }\n\n    function _getEnhancedArguments(args) {\n      // console.log('args', args, angular.isObject(args), angular.isArray(args));\n\n      var argsArray = args ? [].slice.call(args) : args;\n\n      // console.log('argsArray', argsArray, argsArray.length, angular.isArray(argsArray), argsArray[0]);\n\n      if(argsArray.length === 1) {\n        return argsArray[0];\n      } else {\n        return args;\n      }\n    }\n\n    function _addTimestamp() {\n\n    }\n\n\n    function $get() {\n      var service = {\n        isEnhanced: isEnhanced,\n        log: log,\n        info: info,\n        warn: warn,\n        error: error,\n        getLogType: getLogType\n      };\n\n      return service;\n\n\n      function isEnhanced(logType) {\n        return (angular.isDefined(_logTypes[logType]) && angular.isDefined(_logTypes[logType].enhanced)) ? _logTypes[logType].enhanced : false;\n      }\n\n      function log() {\n        // var args = _getEnhancedArguments(arguments);\n        // console.log(arguments);\n      }\n\n      function info() {\n        // var args = _getEnhancedArguments(arguments);\n        // console.info(arguments);\n      }\n\n      function warn() {\n        // var args = _getEnhancedArguments(arguments);\n        // console.warn(arguments);\n      }\n\n      function error() {\n        // var args = _getEnhancedArguments(arguments);\n        // console.error(arguments);\n      }\n\n      function getLogType(logType) {\n        return _logTypes[logType];\n      }\n    }\n\n    function enhance(logTypes) {\n      try {\n        if(angular.isDefined(logTypes) && logTypes !== null && !angular.isString(logTypes)) {\n          throw 'Wrong argument type. The argument \"logTypes\" should be a comma seperated String.';\n        }\n      } catch(error) {\n        return error;\n      }\n\n      var logTypesArray = [];\n\n      // Set enhanced\n      if(angular.isString(logTypes)) {\n        logTypesArray = logTypes.replace(/\\s+/g, '').split(',');\n\n        // Initialize all log types with enhanced = false\n        angular.forEach(_logTypes, function(_logType) {\n          _logType.enhanced = false;\n        });\n\n        // Set defined enhanced values for log types\n        angular.forEach(logTypesArray, function(logType) {\n          if(angular.isDefined(_logTypes[logType])) {\n            _logTypes[logType].enhanced = true;\n          }\n        });\n      } else {\n        // If logTypes is undefined or null\n        // Initialize all log types with enhanced = true\n        angular.forEach(_logTypes, function(_logType) {\n          _logType.enhanced = true;\n        });\n      }\n    }\n\n    function before(logTypes, hooks) {\n      _addHooks('pre', logTypes, hooks);\n    }\n\n    function after(logTypes, hooks) {\n      _addHooks('post', logTypes, hooks);\n    }\n\n    function decorate(message) {\n\n    }\n  }\n\n}());\n"],"sourceRoot":"/source/"}